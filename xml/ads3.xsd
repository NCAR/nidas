<?xml version="1.0"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.eol.ucar.edu/ads3"
    xmlns="http://www.eol.ucar.edu/ads3"
    elementFormDefault="qualified"
    xml:lang="en">

<xsd:annotation>
    <xsd:documentation>
    Schema describing a data acquisition system.
    Copyright 2005 UCAR, NCAR, All Rights Reserved
    </xsd:documentation>
</xsd:annotation>

<xsd:annotation><xsd:documentation>
<xsd:element name="comment">
    <xsd:complexType>
	<xsd:sequence>
	    <xsd:any minOccurs="0"/>
	</xsd:sequence>
    </xsd:complexType>
</xsd:element>
</xsd:documentation></xsd:annotation>

<xsd:simpleType name="baudtype">
    <xsd:restriction base="xsd:positiveInteger">
	<xsd:enumeration value="300"/>
	<xsd:enumeration value="600"/>
	<xsd:enumeration value="1200"/>
	<xsd:enumeration value="1800"/>
	<xsd:enumeration value="2400"/>
	<xsd:enumeration value="4800"/>
	<xsd:enumeration value="9600"/>
	<xsd:enumeration value="19200"/>
	<xsd:enumeration value="38400"/>
	<xsd:enumeration value="57600"/>
	<xsd:enumeration value="115200"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="paritytype">
    <xsd:restriction base="xsd:token">
	<xsd:enumeration value="none"/>
	<xsd:enumeration value="even"/>
	<xsd:enumeration value="odd"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="speedtype">
    <xsd:restriction base="xsd:token">
	<xsd:enumeration value="high"/>
	<xsd:enumeration value="low"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="databitstype">
    <xsd:restriction base="xsd:positiveInteger">
	<xsd:minInclusive value="5"/>
	<xsd:maxInclusive value="8"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="stopbitstype">
    <xsd:restriction base="xsd:positiveInteger">
	<xsd:minInclusive value="1"/>
	<xsd:maxInclusive value="2"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:complexType name="messageDesc">
    <xsd:attribute name="separator" type="xsd:normalizedString" use="required"/>
    <xsd:attribute name="position" use="required">
	<xsd:simpleType>
	    <xsd:restriction base="xsd:token">
		<xsd:enumeration value="beg"/>
		<xsd:enumeration value="end"/>
	    </xsd:restriction>
	</xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="length" type="xsd:nonNegativeInteger" default="0"/>
</xsd:complexType>

<xsd:complexType name="promptType">
    <xsd:attribute name="string" type="xsd:normalizedString" use="required"/>
    <xsd:attribute name="rate" type="xsd:positiveInteger" use="required"/>
</xsd:complexType>

<xsd:complexType name="linear">
    <xsd:attribute name="slope" type="xsd:float"/>
    <xsd:attribute name="intercept" type="xsd:float"/>
    <xsd:attribute name="units" type="xsd:normalizedString" default=""/>
</xsd:complexType>

<xsd:simpleType name="floatList">
    <xsd:list itemType="xsd:float"/>
</xsd:simpleType>

<xsd:complexType name="poly">
    <xsd:attribute name="coefs" type="floatList"/>
    <xsd:attribute name="units" type="xsd:normalizedString" default=""/>
</xsd:complexType>

<xsd:simpleType name="parameterType">
    <xsd:restriction base="xsd:token">
	<xsd:enumeration value="float"/>
	<xsd:enumeration value="bool"/>
	<xsd:enumeration value="string"/>
	<xsd:enumeration value="int"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:complexType name="sensorParameter">
    <xsd:attribute name="name" type="xsd:token" use="required"/>
    <xsd:attribute name="value" type="xsd:normalizedString" use="required"/>
    <xsd:attribute name="type" type="parameterType" use="required"/>
</xsd:complexType>

<xsd:complexType name="variable">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="poly" type="poly"/>
        <xsd:element name="linear" type="linear"/>
	<xsd:element name="parameter" type="sensorParameter"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:token" use="required"/>
    <xsd:attribute name="longname" type="xsd:normalizedString"/>
    <xsd:attribute name="units" type="xsd:normalizedString" default=""/>
    <xsd:attribute name="count" type="xsd:boolean" default="false"/>
</xsd:complexType>

<xsd:complexType name="sample">
    <xsd:annotation>
        <xsd:documentation>
	    A sample has an id, a rate, and contains one or more
	    variables.  The sum of the sensor id and this sample id 
	    is used to tag each sample in the system, so that SampleClients
	    that receive the sample can know what variables are in
	    the sample, and what sensor it came from.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="1" maxOccurs="unbounded">
	<xsd:element name="variable" type="variable"/>
    </xsd:choice>
    <xsd:attribute name="id" type="xsd:short" use="required"/>
    <xsd:attribute name="rate" type="xsd:float" default="0.0"/>
</xsd:complexType>

<xsd:complexType name="sensorT" abstract="false">
    <xsd:annotation>
        <xsd:documentation>
	    The id (lower case) attribute is different from
	    the ID attribute. The ID identifies the sensor in
	    the catalog. A sensor is found in the catalog by
	    matching its ID against an IDREF.  The sensor id
	    is a numeric value, which is used to mark all
	    samples from this sensor.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
	<xsd:element name="sample" type="sample" minOccurs="1"/>
    </xsd:choice>
    <xsd:attribute name="ID" type="xsd:ID"/>
    <xsd:attribute name="IDREF" type="xsd:IDREF"/>
    <xsd:attribute name="class" type="xsd:token"/>
    <xsd:attribute name="devicename" type="xsd:token"/>
    <xsd:attribute name="id" type="xsd:short"/>
</xsd:complexType>

<xsd:complexType name="serialSensorT">
    <xsd:complexContent>
	<xsd:extension base="sensorT">
	    <xsd:choice minOccurs="1" maxOccurs="2">
		<xsd:element name="message" type="messageDesc" minOccurs="1" maxOccurs="1"/>
		<xsd:element name="prompt" type="promptType" minOccurs="0" maxOccurs="1"/>
	    </xsd:choice>
	    <!-- these attributes must occur after the above sequence -->
	    <!-- Currently can't provide defaults here, because the defaults
                 then over-ride the values that were specified for a sensor in
                 the catalog.  Need to fix this. -->
	    <xsd:attribute name="baud" type="baudtype"/>
	    <xsd:attribute name="parity" type="paritytype"/>
	    <xsd:attribute name="databits" type="databitstype"/>
	    <xsd:attribute name="stopbits" type="stopbitstype"/>
	    <xsd:attribute name="scanfFormat" type="xsd:normalizedString"/>
	</xsd:extension>
    </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="arincSensorT">
    <xsd:annotation>
        <xsd:documentation>
            The id attributes of the sample child elements contain the
	    ARINC label value.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
	<xsd:extension base="sensorT">
	    <!-- these attributes must occur after the above sequence -->
	    <!-- Currently can't provide defaults here, because the defaults
                 then over-ride the values that were specified for a sensor in
                 the catalog.  Need to fix this. -->
	    <xsd:attribute name="parity"        type="paritytype"/>
	    <xsd:attribute name="speed"         type="speedtype"/>
            <xsd:attribute name="sim_xmit"      type="xsd:token" use="optional"/>
            <xsd:attribute name="irs_thdg_corr" type="xsd:token" use="optional"/>
            <xsd:attribute name="irs_ptch_corr" type="xsd:token" use="optional"/>
            <xsd:attribute name="irs_roll_corr" type="xsd:token" use="optional"/>
        </xsd:extension>
    </xsd:complexContent>
</xsd:complexType>

<xsd:group name="sensors">
    <xsd:choice>
	<xsd:element name="sensor"       type="sensorT"/>
	<xsd:element name="serialSensor" type="serialSensorT"/>
	<xsd:element name="arincSensor"  type="arincSensorT">
	    <xsd:unique name="uniqueSampleId2">
		<xsd:selector xpath="sample"/>
		<xsd:field    xpath="@id"/>
	    </xsd:unique>
	</xsd:element>
	<xsd:element name="irigSensor"  type="sensorT"/>
    </xsd:choice>
</xsd:group>

<xsd:element name="sensorcatalog">
    <xsd:complexType>
	<xsd:sequence minOccurs="1" maxOccurs="unbounded">
	    <xsd:group ref="sensors"/>
	</xsd:sequence>
    </xsd:complexType>
</xsd:element>

<xsd:element name="dsm">
    <xsd:complexType>
	<xsd:choice minOccurs="1" maxOccurs="unbounded">
	    <xsd:group ref="sensors"/>
	    <xsd:element ref="config"/>
	    <xsd:element ref="output"/>
	</xsd:choice>
	<xsd:attribute name="name" type="xsd:token" use="required"/>
	<xsd:attribute name="location" type="xsd:token" use="required"/>
	<xsd:attribute name="id" type="xsd:nonNegativeInteger" use="required"/>
    </xsd:complexType>
    <xsd:unique name="uniqueSensorId">
	<xsd:selector xpath="sensor | serialSensor | arincSensor | irigSensor"/>
	<xsd:field    xpath="@id"/>
    </xsd:unique>
</xsd:element>

<xsd:element name="socket">
   <xsd:complexType>
        <xsd:attribute name="type" type="xsd:token" default="mcrequest"/>
        <xsd:attribute name="port" type="xsd:nonNegativeInteger"
		default="50000"/>
        <xsd:attribute name="address" type="xsd:token" default="239.0.0.10"/>
   </xsd:complexType>
</xsd:element>

<xsd:element name="fileset">
   <xsd:complexType>
        <xsd:attribute name="dir" type="xsd:token" use="required"/>
        <xsd:attribute name="file" type="xsd:token" use="required"/>
        <xsd:attribute name="length" type="xsd:nonNegativeInteger" default="0"/>
   </xsd:complexType>
</xsd:element>

<xsd:element name="input">
   <xsd:complexType>
        <xsd:choice>
            <xsd:element ref="socket" maxOccurs="unbounded"/>
            <xsd:element ref="fileset" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="class" type="xsd:token" use="optional"/>
   </xsd:complexType>
</xsd:element>

<xsd:element name="output">
   <xsd:complexType>
        <xsd:choice minOccurs="1" maxOccurs="unbounded">
            <xsd:element ref="socket"/>
            <xsd:element ref="fileset"/>
        </xsd:choice>
        <xsd:attribute name="class" type="xsd:token" use="optional"/>
   </xsd:complexType>
</xsd:element>

<xsd:element name="processor">
   <xsd:complexType>
        <xsd:choice minOccurs="1" maxOccurs="unbounded">
            <xsd:element ref="output"/>
        </xsd:choice>
	<xsd:attribute name="class" type="xsd:token" use="required"/>
   </xsd:complexType>
</xsd:element>

<xsd:element name="service">
   <xsd:complexType>
        <xsd:choice minOccurs="1" maxOccurs="unbounded">
            <xsd:element ref="input" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element ref="output" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element ref="processor" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
	<xsd:attribute name="class" type="xsd:token" use="required"/>
   </xsd:complexType>
</xsd:element>

<xsd:element name="config">
   <xsd:complexType>
        <xsd:choice>
            <xsd:element ref="socket" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attribute name="class" type="xsd:token" use="required"/>
   </xsd:complexType>
</xsd:element>

<xsd:element name="server">
    <xsd:complexType>
	<xsd:choice minOccurs="1" maxOccurs="unbounded">
	    <xsd:element ref="service"/>
	</xsd:choice>
        <xsd:attribute name="name" type="xsd:token" use="optional"/>
    </xsd:complexType>
</xsd:element>

<xsd:element name="aircraft">
    <xsd:complexType>
        <xsd:choice minOccurs="1" maxOccurs="unbounded">
            <xsd:element ref="server"/>
            <xsd:element ref="dsm"/>
        </xsd:choice>
        <xsd:attribute name="tailno" type="xsd:token" use="required"/>
        <xsd:attribute name="name"   type="xsd:token" use="required"/>
    </xsd:complexType>
</xsd:element>

<xsd:element name="project">
    <xsd:complexType>
        <xsd:choice minOccurs="1" maxOccurs="unbounded">
            <xsd:element ref="sensorcatalog" minOccurs="0"/>
            <xsd:element ref="aircraft"      maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:attribute name="name"   type="xsd:token" use="required"/>
        <xsd:attribute name="version"   type="xsd:normalizedString"
		use="required"/>
        <xsd:attribute name="xmlname"   type="xsd:normalizedString" use="required"/>
    </xsd:complexType>
</xsd:element>

</xsd:schema>
