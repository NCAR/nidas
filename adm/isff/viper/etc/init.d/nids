#! /bin/sh

rnids=/opt/nids/arm
# rnids=/home/maclean/svn/isff_trex_nids/dsm

lnids=/var/tmp

usbmtpt=/var/tmp/usb
[ -d $usbmtpt ] || mkdir $usbmtpt

# sshuser=maclean
sshuser=aster

# PATH=$lnids/bin:/usr/local/bin:/sbin:/usr/bin:/bin:/usr/sbin

PATH=/usr/local/bin:$PATH
export ISFF=/root

copy_app() {
    echo "Copying nids ... "
    [ -d $lnids/bin ] || mkdir $lnids/bin
    [ -d $lnids/lib ] || mkdir $lnids/lib
    scp $sshuser@server:$rnids/bin/dsm $lnids/bin
    scp $sshuser@server:$rnids/bin/data_stats $lnids/bin
    scp $sshuser@server:$rnids/bin/rserial $lnids/bin
    scp $sshuser@server:$rnids/bin/gps_nmea_sysclock $lnids/bin
    scp $sshuser@server:$rnids/lib/libDsm.so $lnids/lib
    echo "done"
}

install_app() {
    echo "Installing nids ... "
    scp $sshuser@server:$rnids/bin/dsm /usr/local/bin
    scp $sshuser@server:$rnids/bin/data_stats /usr/local/bin
    scp $sshuser@server:$rnids/bin/rserial /usr/local/bin
    scp $sshuser@server:$rnids/bin/gps_nmea_sysclock /usr/local/bin
    scp $sshuser@server:$rnids/lib/libDsm.so /usr/local/lib
    ldconfig
    echo "done"
}

run_app_local() {
	export PROJECT=TREX
	export OPS=ops0
	echo -n "Starting nids"
 	# start-stop-daemon --start --quiet --exec /usr/local/bin/dsm -- /root/ads3.xml
 	dsm /root/ads3.xml
	echo "."
}

run_app_net() {
	echo -n "Starting nids"
	# which dsm
	# dsm mcsock:192.168.12.15 2>&1 | logger -p local5.info
	# dsm  -d mcsock:192.168.12.15
  	start-stop-daemon --start --quiet --exec /usr/local/bin/dsm -- mcsock:server
	echo "."
}

mount_usb() {
    [ -d $usbmtpt ] || mkdir $usbmtpt
    if ! mount | fgrep $usbmtpt > /dev/null; then
        mount /dev/sda1 -t ext3 $usbmtpt || return 1
    fi
    return 0
}

umount_usb() {
    if mount | fgrep $usbmtpt > /dev/null; then
        umount $usbmtpt || return 1
    fi
    return 0
}

kill_proc() {
    local proc=$1
    local sig="$2"
    ntry=0
    while [ $ntry -lt 10 ]; do
	pids=(`ps -ef | fgrep $proc | fgrep -v fgrep | cut -d \  -f 2`)
	[ ${#pids[*]} -eq 0 ] && return 0
	echo "kill $sig ${pids[*]} ... "
	kill $sig ${pids[*]}
	sleep 1
	ntry=$(($ntry + 1))
    done
    return 1
}

kill_nids() {
    kill_proc dsm -HUP || kill_proc dsm -9
}

case "$1" in
	start)
		# echo -n "Mounting $usbmtpt ... "
		# if  mount_usb; then
		# 	echo "done"
		# else			
		# 	echo "failed"
		# fi
		# sleep 5
		# copy_app
		# mount_usb
		run_app_net
  		;;
	stop)
		echo "Stopping nids ... "
		if  kill_nids; then
			echo "done"
		else
			echo "failed"
		fi
		echo -n "Unmounting $usbmtpt ... "
		if  umount_usb; then
			echo "done"
		else			
			echo "failed"
		fi
  		;;
	restart)
		echo "Stopping nids ... "
		if  kill_nids; then
			echo "done"
		else
			echo "failed"
		fi
		kill_nids
  		sleep 5
  		run_app_net
  		;;
  	run)
  		run_app_net
  		;;
	mount)
		mount_usb
  		;;
	umount)
		umount_usb
  		;;
	copyapp)
		copy_app
  		;;
	install)
		install_app
  		;;
	*)
  		echo "Usage: /etc/init.d/nids {start|stop|restart|copyapp|install}"
  		exit 1
		;;
esac

exit 0
