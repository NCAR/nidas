# -*- python -*-

Import('env')

# Set LD_LIBRARY_PATH to the locally build libraries.
# bdirs = [ 'dynld', 'core', 'util' ]
# ldlibdirs = [ env.Dir('#/build_x86/build_%s' % d).abspath for d in bdirs ]
libs = [ env.GetGlobalTarget(name) for name in
         ['libnidas', 'libnidas_util', 'libnidas_dynld'] ]
ldlibdirs = [ l.Dir('').abspath for l in env.File(libs) ]
# print 'ldlibdir=' + ":".join(ldlibdirs)
env['ENV']['LD_LIBRARY_PATH'] = ":".join(ldlibdirs)

dsm = env['NIDAS_APPS']['dsm']
dsm_server = env['NIDAS_APPS']['dsm_server']
data_stats = env['NIDAS_APPS']['data_stats']
sensor_sim = env['NIDAS_APPS']['sensor_sim']

path = env.subst("${TARGET.dir}", target=dsm)
env.PrependENVPath('PATH', path)
# print 'path=' + path
# env.PrependENVPath('PATH', env.Dir('#/build_x86/build_apps').abspath)

depends1 = ["run_test.sh",  dsm, data_stats, sensor_sim]
runtest1 = env.Command("xtest1", depends1, ["cd $SOURCE.dir && ./run_test.sh"])

depends2 = ["run_test_2.sh", dsm_server, dsm, data_stats, sensor_sim]
runtest2 = env.Command("xtest2", depends2, ["cd $SOURCE.dir && ./run_test.sh"])

testlist = [runtest1]
# testlist = [runtest1,runtest2]

env.Precious(testlist)
env.AlwaysBuild(testlist)
env.Alias('test', testlist)
env.Alias('sstest', testlist)
