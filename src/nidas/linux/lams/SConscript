# -*- python -*-

##  Copyright 2005,2006 UCAR, NCAR, All Rights Reserved

##
##  Import the build environment.
##
Import(['env'])
arch = env['ARCH']  # empty string for native builds

# The Makefile must be listed in the source dependencies
# so that it is copied/linked to the variant_dir.
# The Kmake builder runs the make command in variant_dir.
#
# Also, the SConscript command that invokes this SConscript
# file should set duplicate=1, so that all the linux module
# source files, including the Makefile, are copied to the variant_dir.
# so that make can find them and do its work outside of the
# source tree.

# All modules must be built by the same kmake builder so SCons will setup
# all the variant_dir copies/links before running make.  Otherwise make
# fails because not all the dependencies exist yet.

if env.has_key("LINUX_MODULES_INST_PATH") and \
    env.has_key('KERNELDIR') and env['KERNELDIR'] != '':

    svninfo = Dir('./../../include/nidas/linux').File('SvnInfo.h')

    modules = ['lamsx.ko']
    env.Kmake(modules,
              ['lamsx.c','lamsx.h','Makefile',svninfo])

    env.Install('$LINUX_MODULES_INST_PATH',modules)

    env.Clean('install',[
        '$LINUX_MODULES_INST_PATH/' + l for l in modules
        ])

# Some kernel module header files define symbols that are needed
# by user code. These must also be installed in $PREFIX/include
headers = Split("""
    lamsx.h
""")

if arch == '':
    env.Install('$PREFIX/include/nidas/linux/lams',headers)
