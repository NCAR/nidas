# -*- python -*-

##  Copyright 2005 UCAR, NCAR, All Rights Reserved

import glob
import fnmatch
import os

##
##  Import the cross-build environment.
##
Import('env')
myenv = env.Clone()

myenv.AppendUnique(CXXFLAGS = Split("""
"""))

##
##  List of headers files
##
headers = [ Split("""
    BitArray.h
    DatagramPacket.h
    EndianConverter.h
    EOFException.h
    Exception.h
    FileSet.h
    Inet4Address.h
    Inet4SocketAddress.h
    InterruptedException.h
    InvalidParameterException.h
    IOException.h
    IOTimeoutException.h
    Logger.h
    McSocket.h
    ParseException.h
    Process.h
    SerialOptions.h
    SerialPort.h
    SocketAddress.h
    Socket.h
    Termios.h
    Thread.h
    ThreadSupport.h
    UnixSocketAddress.h
    UnknownHostException.h
    UTime.h
    """)
]
# print(["headers="] + [str(h) for h in headers])

sources = [ Split("""
    BitArray.cc
    EndianConverter.cc
    Exception.cc
    FileSet.cc
    Inet4Address.cc
    Inet4SocketAddress.cc
    Logger.cc
    McSocket.cc
    Process.cc
    SerialOptions.cc
    SerialPort.cc
    Socket.cc
    Termios.cc
    Thread.cc
    ThreadSupport.cc
    UnixSocketAddress.cc
    UTime.cc
    """)
]
# print(["sources="] + [str(h) for h in sources])

objects = myenv.SharedObject(sources)
env['NIDAS_UTIL_OBJECTS'] = objects

##
##  Build the libnidas_util library.
##
lib = myenv.SharedLibrary('nidas_util' , objects, LIBS = ['pthread'])

##
## Install target for library.
##
myenv.Install('$PREFIX/lib',lib)

myenv.Install('$PREFIX/include/nidas/util',headers)

