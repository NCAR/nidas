# -*- python -*-

##  Copyright 2005 UCAR, NCAR, All Rights Reserved

import glob
import fnmatch
import os

##
##  Import the cross-build environment.
##
Import('env')
myenv = env.Clone()
arch = myenv['ARCH']

# -ggdb
# -DXML_DEBUG
myenv.AppendUnique(CXXFLAGS = Split("""
"""))

SConscript(dirs = ["raf", "isff", "iss"], exports={'env':myenv})

headers = [ Split("""
    A2DSensor.h
    AsciiOutput.h
    DSC_A2DSensor.h
    DSC_AnalogOut.h
    DSC_FreqCounter.h
    DSC_PulseCounter.h
    DSMSerialSensor.h
    FileSet.h
    FsMount.h
    GPS_NMEA_Serial.h
    RawSampleInputStream.h
    RawSampleOutputStream.h
    RawSampleService.h
    SampleArchiver.h
    SampleInputStream.h
    SampleOutputStream.h
    StatisticsCruncher.h
    StatisticsProcessor.h
    TSI_CPC3772.h
    XMLConfigService.h
""") ]

##
##  source files in libnidas_dynld
##
sources = [ Split("""
    A2DSensor.cc
    AsciiOutput.cc
    DSC_A2DSensor.cc
    DSC_AnalogOut.cc
    DSC_FreqCounter.cc
    DSC_PulseCounter.cc
    DSMSerialSensor.cc
    FileSet.cc
    FsMount.cc
    GPS_NMEA_Serial.cc
    RawSampleInputStream.cc
    RawSampleOutputStream.cc
    RawSampleService.cc
    SampleArchiver.cc
    SampleInputStream.cc
    SampleOutputStream.cc
    StatisticsCruncher.cc
    StatisticsProcessor.cc
    TSI_CPC3772.cc
    XMLConfigService.cc
""") ]

if arch == 'arm':
    archsources=Split("""
        ViperDIO.cc
    """)
    archheaders=Split("""
        ViperDIO.h
    """)
else:
    archsources=Split("""
    """)
    archheaders=Split("""
    """)

##
##  Build the nidas_dynld library.
##
myenv.Append (LIBNIDAS_DYNLD_SOURCES = sources + archsources )
lib = myenv.SharedLibrary('nidas_dynld' , myenv['LIBNIDAS_DYNLD_SOURCES'] )

##
## Install target for library.
##
myenv.Install('$PREFIX/lib',lib)

##
## Install target for headers.
##
myenv.Install('$PREFIX/include/nidas/dynld',headers + archheaders)

SConscript(dirs="psql", duplicate=0, exports={'env':env})
