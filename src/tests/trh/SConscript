# -*- python -*-

Import('env')
env = env.Clone(tools = ['nidasutil', 'nidas', 'valgrind'])

env.Append(CXXFLAGS='-Wno-effc++')
env.Append(LIBS = env.NidasLibs())
env.Append(LIBS = ['boost_unit_test_framework'])
env.Prepend(CPPPATH = [ "#/nidas/util", "#/nidas/core", "#/nidas/dynld" ])
tests = env.Program('ttrh', ["ttrh.cc"])

env.AppendENVPath('LD_LIBRARY_PATH', '/opt/nc_server/lib')
runtest = env.Command("xtest", tests,
                      env.ChdirActions(["./$SOURCE.file --log debug --log_level=all"]))
env.Precious(runtest)
env.AlwaysBuild(runtest)
env.Alias('test', runtest)

env.ValgrindLog('memcheck', 
                env.Command('vg.memcheck.log', tests,
                            "cd ${SOURCE.dir} && "
                            "${VALGRIND_PATH} --leak-check=full --show-leak-kinds=all"
                            " --gen-suppressions=all --log-file=${TARGET.abspath}"
                            " --suppressions=vg.memcheck.supp -v"
                            " ./${SOURCE.file} 2>&1 ${TARGET.abspath}"))

