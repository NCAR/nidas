# -*- python -*-

Import(['env','LIBNIDAS_UTIL','LIBNIDAS','LIBNIDAS_DYNLD','NIDAS_APPS'])
env = env.Clone()
libs = [LIBNIDAS_UTIL,LIBNIDAS,LIBNIDAS_DYNLD]

# Set LD_LIBRARY_PATH to the locally build libraries.
ldlibdirs = [ l.Dir('').abspath for l in env.File(libs) ]
env['ENV']['LD_LIBRARY_PATH'] = ":".join(ldlibdirs)

sync_server = NIDAS_APPS['sync_server']
sync_dump = NIDAS_APPS['sync_dump']

path = env.subst("${TARGET.dir}", target=sync_server)
env.PrependENVPath('PATH', path)
# print 'path=' + path
# env.PrependENVPath('PATH', env.Dir('#/build_x86/build_apps').abspath)

depends1 = ["run_test.sh",  sync_server, sync_dump]
runtest1 = env.Command("xtest1", depends1, ["cd $SOURCE.dir && ./run_test.sh"])

testlist = [runtest1]

env.Precious(testlist)
env.AlwaysBuild(testlist)
env.Alias('test', testlist)
env.Alias('synctest', testlist)
