# -*- python -*-

Import('env')
env = env.Clone()

libs = [ env.GetGlobalTarget(name) for name in
         ['libnidas_dynld', 'libnidas', 'libnidas_util'] ]
env.Prepend(
    LIBS= ['nidas_dynld', 'nidas', 'nidas_util'], 
    LIBPATH=[ l.Dir('') for l in env.File(libs) ])
env.Append(LIBS = ['boost_unit_test_framework', 'boost_regex'])
env.Prepend(CPPPATH = [ '#/src' ])
env.Append(CCFLAGS = ['-Wall'])

tests = env.Program('tiostream', "tiostream.cc")
# env.Depends(tests, libs)

ldlibdirs = [ l.Dir('').abspath for l in env.File(libs) ]
env['ENV']['LD_LIBRARY_PATH'] = ":".join(ldlibdirs)
# print 'LD_LIBRARY_PATH=' + env['ENV']['LD_LIBRARY_PATH']

# Add --log_level=all to see all the log messages
runtest = env.Command("xtest", tests, ["$SOURCE.abspath"])
env.Precious(runtest)
AlwaysBuild(runtest)
Alias('test', runtest)



