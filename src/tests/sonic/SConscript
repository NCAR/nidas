# -*- python -*-
# 2009, Copyright University Corporation for Atmospheric Research

from SCons.Script import Environment

env = Environment(tools=['default', 'nidasapps', 'valgrind', 'boost_test'])

data_dump = env.NidasApp('data_dump')

# run_test.sh and run_test_2.sh conflict with each other. They use the same
# pseudo-terminals, and kill other dsm processes at startup.  So they are run
# in sequence here by the shell. Otherwise, if they are separate targets,
# "scons -j 2 test" is likely to run them simultaneously.
#
depends = ["run_test.sh", data_dump]
runtest = env.Command("xtest1", depends,
                      ["cd $SOURCE.dir && ./run_test.sh"])

env.Precious(runtest)
env.AlwaysBuild(runtest)
env.Alias('test', runtest)
env.Alias('tests', runtest)
env.Alias('sonictest', runtest)

tests = env.Program('twind3d', ["twind3d.cc"])

xtest = env.Command("xtest", tests,
                    env.ChdirActions(["./$SOURCE.file"]))
env.Precious(xtest)
env.AlwaysBuild(xtest)
env.Alias('test', xtest)

env.ValgrindLog('memcheck',
                env.Command('vg.memcheck.log', tests,
                            "cd ${SOURCE.dir} && "
                            "${VALGRIND_PATH} --leak-check=full"
                            " --gen-suppressions=all ./${SOURCE.file}"
                            " >& ${TARGET.abspath}"))
