<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.90</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="umbrelloKclFHb" href="/tmp/kde-maclean/umbrelloKclFHb.tmp" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model>
   <UML:Stereotype visibility="public" xmi.id="23" name="datatype" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="22" name="int" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="24" name="char" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="25" name="bool" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="26" name="float" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="27" name="double" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="28" name="long" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="29" name="short" />
   <UML:DataType stereotype="23" visibility="public" xmi.id="30" name="string" />
   <UML:Package visibility="public" xmi.id="32" name="dsm" >
    <UML:Class comment="DSMSensor provides the basic support for reading, processing
and distributing samples from a sensor attached to a DSM.

DSMSensor has a no-arg constructor, and can fill in its attributes
from an XML DOM element with fromDOMElement().
One attribute of a DSMSensor is the system device
name associated with this sensor, e.g. &quot;/dev/xxx0&quot;.
Once a device name has been set, then a user of this sensor
can call open(),  and then ioctl(), read() and write().
These methods must be implemented by a derived class,
dsm::RTL_DSMSensor, for example.

dsm::SampleClient's can call
addRawSampleClient()/removeRawSampleClient() if they want to
receive raw dsm::SampleT's from this sensor.

dsm::SampleClient's can also call
addSampleClient()/removeSampleClient() if they want to
receive (minimally) processed dsm::SampleT's from this sensor.

A common usage of a DSMSensor is to add it to a dsm::PortSelector
object with dsm::PortSelector::addSensorPort().
When the dsm::PortSelector::run method has determined that there is data
available on a DSMSensor's file descriptor, it will then call
the readSamples() method which reads the samples from the
file descriptor, processes them, and forwards the raw and processed
samples to all associated dsm::SampleClient's of this DSMSensor.
" visibility="public" xmi.id="33" name="DSMSensor" >
     <UML:Operation comment="Create a sensor." visibility="public" xmi.id="34" type="" name="DSMSensor" />
     <UML:Operation comment="/deprecated Construct a sensor, and provide the device name.
Use the no-arg constructor instead and use the setDeviceName() method." visibility="public" xmi.id="35" type="" name="DSMSensor" >
      <UML:Parameter visibility="public" xmi.id="36" value="" type="const std::string&amp;" name="n" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="37" type="" name="~ DSMSensor" />
     <UML:Operation visibility="public" xmi.id="38" type="void" name="setDeviceName" >
      <UML:Parameter visibility="public" xmi.id="39" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="40" type="const std::string&amp;" name="getDeviceName" />
     <UML:Operation visibility="public" xmi.id="41" type="int" isAbstract="true" name="getReadFd" />
     <UML:Operation visibility="public" xmi.id="42" type="int" name="getId" />
     <UML:Operation visibility="public" xmi.id="43" type="void" name="setId" >
      <UML:Parameter visibility="public" xmi.id="44" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation comment="Open the device. flags are a combination of O_RDONLY, O_WRONLY." visibility="public" xmi.id="45" type="void" isAbstract="true" name="open" >
      <UML:Parameter visibility="public" xmi.id="46" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="47" type="int" name="getDefaultMode" />
     <UML:Operation comment="Read from the device (duh). Behaves like read(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="48" type="size_t" isAbstract="true" name="read" >
      <UML:Parameter visibility="public" xmi.id="49" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="50" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Write to the device (duh). Behaves like write(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="51" type="size_t" isAbstract="true" name="write" >
      <UML:Parameter visibility="public" xmi.id="52" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="53" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Perform an ioctl on the device. request is an integer
value which must be supported by the device. Normally
this is a value from a header file for the device." visibility="public" xmi.id="54" type="void" isAbstract="true" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="55" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="56" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="57" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Overloaded ioctl method, used when doing an ioctl set from
a pointer to constant user data." visibility="public" xmi.id="58" type="void" isAbstract="true" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="59" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="60" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="61" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="close" visibility="public" xmi.id="62" type="void" isAbstract="true" name="close" />
     <UML:Operation comment="Read samples from my associated file descriptor,
process them, and pass them onto my SampleClient's.

readSamples() assumes that the data read from
the file descriptor is formatted into samples
in the format of a struct dsm_sample, i.e. a
4 byte unsigned integer time-tag (milliseconds since
midnight GMT), followed by a 4 byte unsigned integer data
length, and then length number of bytes of data.

After each sample is read, it is distributed to
any SampleClients that have requested samples via
dsm::RawSampleSource::addRawSampleClient().
Then the virtual process() method is called
which allows this sensor to apply any necessary processing
to the raw sample.  The processed samples are then
passed to any SampleClients that have registered with
dsm::SampleSource::addSampleClient()." visibility="public" xmi.id="63" type="dsm_sample_time_t" name="readSamples" />
     <UML:Operation comment="Apply further necessary processing to samples from
this DSMSensor. A virtual method that is called
from readSamples(). The default implementation
of process() simply passes the Sample onto
any dsm::SampleClient's without further processing." visibility="public" xmi.id="64" type="const Sample*" name="process" >
      <UML:Parameter visibility="public" xmi.id="65" value="" type="const Sample*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="66" type="void" name="initStatistics" />
     <UML:Operation visibility="public" xmi.id="67" type="void" name="calcStatistics" >
      <UML:Parameter visibility="public" xmi.id="68" value="" type="unsigned long" name="periodMsec" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="69" type="size_t" name="getMaxSampleLength" />
     <UML:Operation visibility="public" xmi.id="70" type="size_t" name="getMinSampleLength" />
     <UML:Operation visibility="public" xmi.id="71" type="int" name="getReadErrorCount" />
     <UML:Operation visibility="public" xmi.id="72" type="int" name="getCumulativeReadErrorCount" />
     <UML:Operation visibility="public" xmi.id="73" type="int" name="getWriteErrorCount" />
     <UML:Operation visibility="public" xmi.id="74" type="int" name="getCumulativeWriteErrorCount" />
     <UML:Operation visibility="public" xmi.id="75" type="float" name="getObservedSamplingRate" />
     <UML:Operation visibility="public" xmi.id="76" type="float" name="getReadRate" />
     <UML:Operation visibility="public" xmi.id="77" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="78" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="79" type="xercesc::DOMElement*" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="80" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="81" type="xercesc::DOMElement*" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="82" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Operation comment="Must be called before invoking readSamples(). Derived
classes should call initBuffer in their 
open() method." visibility="protected" xmi.id="83" type="void" name="initBuffer" />
     <UML:Operation comment="Delete the sensor buffer.  Derived classes should call
destroyBuffer in their close() method." visibility="protected" xmi.id="84" type="void" name="destroyBuffer" />
     <UML:Attribute visibility="protected" xmi.id="85" value="" type="std::string" name="devname" />
     <UML:Attribute visibility="protected" xmi.id="86" value="" type="int" name="id" />
     <UML:Attribute visibility="protected" xmi.id="87" value="" type="const int" name="BUFSIZE" />
     <UML:Attribute visibility="protected" xmi.id="88" value="" type="char*" name="buffer" />
     <UML:Attribute visibility="protected" xmi.id="89" value="" type="int" name="bufhead" />
     <UML:Attribute visibility="protected" xmi.id="90" value="" type="int" name="buftail" />
     <UML:Attribute visibility="protected" xmi.id="91" value="" type="dsm::Sample*" name="samp" />
     <UML:Attribute visibility="protected" xmi.id="92" value="" type="size_t" name="sampDataToRead" />
     <UML:Attribute visibility="protected" xmi.id="93" value="" type="char*" name="sampDataPtr" />
     <UML:Attribute comment="DSMSensor maintains some counters that can be queried
to provide the current status." visibility="protected" xmi.id="94" value="" type="time_t" name="initialTimeSecs" />
     <UML:Attribute visibility="protected" xmi.id="95" value="" type="size_t" name="minSampleLength" />
     <UML:Attribute visibility="protected" xmi.id="96" value="" type="size_t" name="maxSampleLength" />
     <UML:Attribute visibility="protected" xmi.id="97" value="" type="int" name="readErrorCount" />
     <UML:Attribute visibility="protected" xmi.id="98" value="" type="int" name="writeErrorCount" />
     <UML:Attribute visibility="protected" xmi.id="99" value="" type="int" name="currStatsIndex" />
     <UML:Attribute visibility="protected" xmi.id="100" value="" type="int" name="reportStatsIndex" />
     <UML:Attribute visibility="protected" xmi.id="101" value="" type="int" name="nsamples" />
     <UML:Attribute comment="Observed number of samples per second." visibility="protected" xmi.id="102" value="" type="float" name="sampleRateObs" />
    </UML:Class>
    <UML:Class comment="PortSelector implements a DSMSensor event loop. It does a
select() system call on the file descriptors of one or more
DSMSensors, and calls their readSample methods when data is
available to be read.  The select() loop is implemented in
the Thread::run method of the PortSelector.

select also detects connections to RemoteSerialListener.
Once is socket connection is established for a given sensor, then
data is then passed back and forth between the socket
connection and the DSMSensor.  This path is separate
from the normal Sample data path.  It allows remote
direct control of serial sensors." visibility="public" xmi.id="103" name="PortSelector" >
     <UML:Operation visibility="public" xmi.id="104" type="" name="PortSelector" />
     <UML:Operation visibility="public" xmi.id="105" type="" name="~ PortSelector" />
     <UML:Operation visibility="public" xmi.id="106" type="void" name="addSensorPort" >
      <UML:Parameter visibility="public" xmi.id="107" value="" type="DSMSensor*" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="108" type="void" name="closeSensorPort" >
      <UML:Parameter visibility="public" xmi.id="109" value="" type="DSMSensor*" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="110" type="void" name="addRemoteSerialConnection" >
      <UML:Parameter visibility="public" xmi.id="111" value="" type="RemoteSerialConnection*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="112" type="void" name="removeRemoteSerialConnection" >
      <UML:Parameter visibility="public" xmi.id="113" value="" type="RemoteSerialConnection*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="114" type="void" name="setTimeoutMsec" >
      <UML:Parameter visibility="public" xmi.id="115" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="116" type="int" name="getTimeoutMsec" />
     <UML:Operation visibility="public" xmi.id="117" type="void" name="setTimeoutWarningMsec" >
      <UML:Parameter visibility="public" xmi.id="118" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="119" type="int" name="getTimeoutWarningMsec" />
     <UML:Operation visibility="public" xmi.id="120" type="void" name="calcStatistics" >
      <UML:Parameter visibility="public" xmi.id="121" value="" type="dsm_sys_time_t" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="122" type="void" name="setStatisticsPeriodInSecs" >
      <UML:Parameter visibility="public" xmi.id="123" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="124" type="int" name="getStatisticsPeriodInSecs" />
     <UML:Operation visibility="public" xmi.id="125" type="int" name="getSelectErrors" />
     <UML:Operation visibility="public" xmi.id="126" type="int" name="getRemoteSerialListenErrors" />
     <UML:Operation visibility="public" xmi.id="127" type="void" name="handleRemoteSerial" >
      <UML:Parameter visibility="public" xmi.id="128" value="" type="int" name="fd" />
      <UML:Parameter visibility="public" xmi.id="129" value="" type="DSMSensor*" name="port" />
     </UML:Operation>
     <UML:Operation comment="Thread function." visibility="public" xmi.id="130" type="int" name="run" />
     <UML:Operation visibility="protected" xmi.id="131" type="void" name="handleChangedPorts" />
     <UML:Attribute visibility="protected" xmi.id="132" value="" type="atdUtil::Mutex" name="portsMutex" />
     <UML:Attribute visibility="protected" xmi.id="133" value="" type="std::vector&lt; int >" name="pendingSensorPortFds" />
     <UML:Attribute visibility="protected" xmi.id="134" value="" type="std::vector&lt; DSMSensor * >" name="pendingSensorPorts" />
     <UML:Attribute visibility="protected" xmi.id="135" value="" type="std::vector&lt; DSMSensor * >" name="pendingSensorPortClosures" />
     <UML:Attribute visibility="protected" xmi.id="136" value="" type="std::vector&lt; int >" name="activeSensorPortFds" />
     <UML:Attribute visibility="protected" xmi.id="137" value="" type="std::vector&lt; DSMSensor * >" name="activeSensorPorts" />
     <UML:Attribute visibility="protected" xmi.id="138" value="" type="atdUtil::Mutex" name="rserialConnsMutex" />
     <UML:Attribute visibility="protected" xmi.id="139" value="" type="std::vector&lt; RemoteSerialConnection * >" name="pendingRserialConns" />
     <UML:Attribute visibility="protected" xmi.id="140" value="" type="std::vector&lt; RemoteSerialConnection * >" name="pendingRserialClosures" />
     <UML:Attribute visibility="protected" xmi.id="141" value="" type="std::vector&lt; RemoteSerialConnection * >" name="activeRserialConns" />
     <UML:Attribute visibility="protected" xmi.id="142" value="" type="bool" name="portsChanged" />
     <UML:Attribute visibility="protected" xmi.id="143" value="" type="bool" name="rserialConnsChanged" />
     <UML:Attribute visibility="protected" xmi.id="144" value="" type="struct timeval" name="tval" />
     <UML:Attribute visibility="protected" xmi.id="145" value="" type="fd_set" name="readfdset" />
     <UML:Attribute visibility="protected" xmi.id="146" value="" type="int" name="selectn" />
     <UML:Attribute visibility="protected" xmi.id="147" value="" type="RemoteSerialListener" name="rserial" />
     <UML:Attribute visibility="protected" xmi.id="148" value="" type="int" name="selectErrors" />
     <UML:Attribute visibility="protected" xmi.id="149" value="" type="int" name="rserialListenErrors" />
     <UML:Attribute visibility="protected" xmi.id="150" value="" type="size_t" name="timeoutMsec" />
     <UML:Attribute visibility="protected" xmi.id="151" value="" type="size_t" name="timeoutSec" />
     <UML:Attribute visibility="protected" xmi.id="152" value="" type="size_t" name="timeoutUsec" />
     <UML:Attribute visibility="protected" xmi.id="153" value="" type="size_t" name="timeoutWarningMsec" />
     <UML:Attribute visibility="protected" xmi.id="154" value="" type="dsm_sys_time_t" name="statisticsTime" />
     <UML:Attribute visibility="protected" xmi.id="155" value="" type="unsigned long" name="statisticsPeriod" />
    </UML:Class>
    <UML:Class comment="A RealTime Linux implementation of a DSMSensor.  We try to provide
a simple interface to the user, hiding the details of the
half-duplex RT-Linux FIFOs that are used to read/write and
perform ioctls with the device." visibility="public" xmi.id="157" name="RTL_DSMSensor" >
     <UML:Operation comment="Create a sensor, giving its device name.  No IO (open/read/write/ioctl)
operations to the sensor are performed in the constructor." visibility="public" xmi.id="159" type="" name="RTL_DSMSensor" >
      <UML:Parameter visibility="public" xmi.id="160" value="" type="const std::string&amp;" name="devname" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="161" type="" name="RTL_DSMSensor" />
     <UML:Operation visibility="public" xmi.id="162" type="" name="~ RTL_DSMSensor" />
     <UML:Operation comment="Constructor for a sensor.
@val devname The device name.
Since we have to generate 4 FIFO names
from this devname, the devname should follow this convention:
&lt;ul>
&lt;li>&quot;/dev/&quot;
&lt;li>followed by a name prefix consisting of a series of
characters (A-Z, a-z, _ -, 0-9), terminated by
non-digit,
&lt;li>followed by one or more digits.
&lt;/ul>
The trailing digits specify the port number.
Examples:   /dev/xxxx0, /dev/xxxx_0, /dev/acme99_4,  /dev/xxx09" visibility="public" xmi.id="163" type="void" name="setDeviceName" >
      <UML:Parameter visibility="public" xmi.id="164" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="165" type="int" name="getReadFd" />
     <UML:Operation visibility="public" xmi.id="166" type="int" name="getWriteFd" />
     <UML:Operation comment="open the sensor. This opens the associated RT-Linux FIFOs." visibility="public" xmi.id="167" type="void" name="open" >
      <UML:Parameter visibility="public" xmi.id="168" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation comment="Read from the sensor." visibility="public" xmi.id="169" type="size_t" name="read" >
      <UML:Parameter visibility="public" xmi.id="170" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="171" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Write to the sensor." visibility="public" xmi.id="172" type="size_t" name="write" >
      <UML:Parameter visibility="public" xmi.id="173" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="174" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="175" type="void" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="176" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="177" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="178" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="179" type="void" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="180" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="181" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="182" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="close the sensor (and any associated FIFOs)." visibility="public" xmi.id="183" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="184" type="const std::string&amp;" name="getInFifoName" />
     <UML:Operation visibility="public" xmi.id="185" type="const std::string&amp;" name="getOutFifoName" />
     <UML:Operation comment="return an iterator pointing to one-past end of prefix" visibility="protected" xmi.id="186" type="std::string::const_iterator" name="getPrefixEnd" >
      <UML:Parameter visibility="public" xmi.id="187" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
     <UML:Attribute comment="Prefix created from the name of the device, which is used
to generate the associated FIFO names." visibility="protected" xmi.id="188" value="" type="std::string" name="prefix" />
     <UML:Attribute visibility="protected" xmi.id="189" value="" type="int" name="portNum" />
     <UML:Attribute comment="Actual name of RT-Linux FIFO that is used to read data from the
device." visibility="protected" xmi.id="190" value="" type="std::string" name="inFifoName" />
     <UML:Attribute comment="Actual name of RT-Linux FIFO that is used to write data to the
device." visibility="protected" xmi.id="191" value="" type="std::string" name="outFifoName" />
     <UML:Attribute comment="The RTLIoctlFifo used by this device." visibility="protected" xmi.id="192" value="" type="RTL_DevIoctl*" name="devIoctl" />
     <UML:Attribute visibility="protected" xmi.id="193" value="" type="int" name="infifofd" />
     <UML:Attribute visibility="protected" xmi.id="194" value="" type="int" name="outfifofd" />
    </UML:Class>
   </UML:Package>
   <UML:Generalization child="157" visibility="public" xmi.id="158" parent="33" />
   <UML:Association visibility="public" xmi.id="230" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="103" />
     <UML:AssociationEndRole visibility="public" type="33" />
    </UML:Association.connection>
   </UML:Association>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="156" documentation="" uniqueid="230" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="609" snapy="10" showatts="1" xmi.id="21" documentation="" type="402" showops="1" showpackage="0" name="class diagram" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="660" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="609" snapy="10" showatts="1" xmi.id="156" documentation="" type="402" showops="1" showpackage="0" name="class diagram_1" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="626" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="82" showattsigs="601" usesdiagramusefillcolour="0" x="88" linecolour="#ff0000" y="44" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="33" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="149" showattsigs="601" usesdiagramusefillcolour="1" x="286" linecolour="none" y="187" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="157" showoperations="0" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="86" showattsigs="601" usesdiagramusefillcolour="1" x="99" linecolour="none" y="275" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="103" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="33" widgetaid="157" roleBdoc="" documentation="" roleAdoc="" type="500" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="360" starty="187" />
       <endpoint endx="142" endy="71" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="33" widgetaid="103" xmi.id="230" >
      <linepath>
       <startpoint startx="142" starty="275" />
       <endpoint endx="115" endy="71" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="609" snapy="10" showatts="1" xmi.id="229" documentation="" type="401" showops="1" showpackage="0" name="collaboration diagram" localid="29997" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="626" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="92" usesdiagramusefillcolour="1" x="177" linecolour="none" y="148" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="33" decon="0" localid="29999" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="94" usesdiagramusefillcolour="1" x="280" linecolour="none" y="267" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="103" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="123" usesdiagramusefillcolour="1" x="113" linecolour="none" y="307" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="157" decon="0" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="806" id="229" label="collaboration diagram" />
     <listitem open="0" type="807" id="21" label="class diagram" />
     <listitem open="1" type="818" id="32" >
      <listitem open="0" type="813" id="33" >
       <listitem open="0" type="814" id="87" />
       <listitem open="0" type="814" id="88" />
       <listitem open="0" type="814" id="89" />
       <listitem open="0" type="814" id="90" />
       <listitem open="0" type="814" id="99" />
       <listitem open="0" type="814" id="85" />
       <listitem open="0" type="814" id="86" />
       <listitem open="0" type="814" id="94" />
       <listitem open="0" type="814" id="96" />
       <listitem open="0" type="814" id="95" />
       <listitem open="0" type="814" id="101" />
       <listitem open="0" type="814" id="97" />
       <listitem open="0" type="814" id="100" />
       <listitem open="0" type="814" id="91" />
       <listitem open="0" type="814" id="93" />
       <listitem open="0" type="814" id="92" />
       <listitem open="0" type="814" id="102" />
       <listitem open="0" type="814" id="98" />
       <listitem open="0" type="815" id="34" />
       <listitem open="0" type="815" id="35" />
       <listitem open="0" type="815" id="67" />
       <listitem open="0" type="815" id="62" />
       <listitem open="0" type="815" id="84" />
       <listitem open="0" type="815" id="77" />
       <listitem open="0" type="815" id="72" />
       <listitem open="0" type="815" id="74" />
       <listitem open="0" type="815" id="47" />
       <listitem open="0" type="815" id="40" />
       <listitem open="0" type="815" id="42" />
       <listitem open="0" type="815" id="69" />
       <listitem open="0" type="815" id="70" />
       <listitem open="0" type="815" id="75" />
       <listitem open="0" type="815" id="71" />
       <listitem open="0" type="815" id="41" />
       <listitem open="0" type="815" id="76" />
       <listitem open="0" type="815" id="73" />
       <listitem open="0" type="815" id="83" />
       <listitem open="0" type="815" id="66" />
       <listitem open="0" type="815" id="58" />
       <listitem open="0" type="815" id="54" />
       <listitem open="0" type="815" id="45" />
       <listitem open="0" type="815" id="64" />
       <listitem open="0" type="815" id="48" />
       <listitem open="0" type="815" id="63" />
       <listitem open="0" type="815" id="38" />
       <listitem open="0" type="815" id="43" />
       <listitem open="0" type="815" id="81" />
       <listitem open="0" type="815" id="79" />
       <listitem open="0" type="815" id="51" />
       <listitem open="0" type="815" id="37" />
      </listitem>
      <listitem open="0" type="813" id="103" >
       <listitem open="0" type="814" id="141" />
       <listitem open="0" type="814" id="136" />
       <listitem open="0" type="814" id="137" />
       <listitem open="0" type="814" id="140" />
       <listitem open="0" type="814" id="139" />
       <listitem open="0" type="814" id="135" />
       <listitem open="0" type="814" id="133" />
       <listitem open="0" type="814" id="134" />
       <listitem open="0" type="814" id="142" />
       <listitem open="0" type="814" id="132" />
       <listitem open="0" type="814" id="145" />
       <listitem open="0" type="814" id="147" />
       <listitem open="0" type="814" id="143" />
       <listitem open="0" type="814" id="138" />
       <listitem open="0" type="814" id="149" />
       <listitem open="0" type="814" id="148" />
       <listitem open="0" type="814" id="146" />
       <listitem open="0" type="814" id="155" />
       <listitem open="0" type="814" id="154" />
       <listitem open="0" type="814" id="150" />
       <listitem open="0" type="814" id="151" />
       <listitem open="0" type="814" id="152" />
       <listitem open="0" type="814" id="153" />
       <listitem open="0" type="814" id="144" />
       <listitem open="0" type="815" id="104" />
       <listitem open="0" type="815" id="110" />
       <listitem open="0" type="815" id="106" />
       <listitem open="0" type="815" id="120" />
       <listitem open="0" type="815" id="108" />
       <listitem open="0" type="815" id="126" />
       <listitem open="0" type="815" id="125" />
       <listitem open="0" type="815" id="124" />
       <listitem open="0" type="815" id="116" />
       <listitem open="0" type="815" id="119" />
       <listitem open="0" type="815" id="131" />
       <listitem open="0" type="815" id="127" />
       <listitem open="0" type="815" id="112" />
       <listitem open="0" type="815" id="130" />
       <listitem open="0" type="815" id="122" />
       <listitem open="0" type="815" id="114" />
       <listitem open="0" type="815" id="117" />
       <listitem open="0" type="815" id="105" />
      </listitem>
      <listitem open="0" type="813" id="157" >
       <listitem open="0" type="814" id="192" />
       <listitem open="0" type="814" id="190" />
       <listitem open="0" type="814" id="193" />
       <listitem open="0" type="814" id="191" />
       <listitem open="0" type="814" id="194" />
       <listitem open="0" type="814" id="189" />
       <listitem open="0" type="814" id="188" />
       <listitem open="0" type="815" id="161" />
       <listitem open="0" type="815" id="159" />
       <listitem open="0" type="815" id="183" />
       <listitem open="0" type="815" id="184" />
       <listitem open="0" type="815" id="185" />
       <listitem open="0" type="815" id="186" />
       <listitem open="0" type="815" id="165" />
       <listitem open="0" type="815" id="166" />
       <listitem open="0" type="815" id="179" />
       <listitem open="0" type="815" id="175" />
       <listitem open="0" type="815" id="167" />
       <listitem open="0" type="815" id="169" />
       <listitem open="0" type="815" id="163" />
       <listitem open="0" type="815" id="172" />
       <listitem open="0" type="815" id="162" />
      </listitem>
     </listitem>
     <listitem open="0" type="830" id="-1" label="Datatypes" >
      <listitem open="0" type="807" id="156" label="class diagram_1" />
      <listitem open="1" type="829" id="25" />
      <listitem open="1" type="829" id="24" />
      <listitem open="1" type="829" id="27" />
      <listitem open="1" type="829" id="26" />
      <listitem open="1" type="829" id="22" />
      <listitem open="1" type="829" id="28" />
      <listitem open="1" type="829" id="29" />
      <listitem open="1" type="829" id="30" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" />
    <listitem open="1" type="827" id="-1" label="Deployment View" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Cpp" >
    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
     <textblocks/>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="22" parent_class="22" fileExt=".cpp" fileName="int" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			int.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="24" parent_class="24" fileExt=".cpp" fileName="char" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			char.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="25" parent_class="25" fileExt=".cpp" fileName="bool" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			bool.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="26" parent_class="26" fileExt=".cpp" fileName="float" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			float.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="27" parent_class="27" fileExt=".cpp" fileName="double" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			double.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="28" parent_class="28" fileExt=".cpp" fileName="long" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			long.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="29" parent_class="29" fileExt=".cpp" fileName="short" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			short.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="30" parent_class="30" fileExt=".cpp" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:35:55&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="dsm" id="33" parent_class="33" fileExt=".cpp" fileName="dsmsensor" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;float.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="34" tag="operation_34" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Create a sensor." />
         </header>
        </codeoperation>
        <codeoperation parent_id="35" tag="operation_35" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="/deprecated Construct a sensor, and provide the device name.&amp;#010;Use the no-arg constructor instead and use the setDeviceName() method." />
         </header>
        </codeoperation>
        <codeoperation parent_id="37" tag="operation_37" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="38" tag="operation_38" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40" tag="operation_40" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="41" tag="operation_41" canDelete="false" writeOutText="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42" tag="operation_42" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="43" tag="operation_43" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="45" tag="operation_45" canDelete="false" writeOutText="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Open the device. flags are a combination of O_RDONLY, O_WRONLY." />
         </header>
        </codeoperation>
        <codeoperation parent_id="47" tag="operation_47" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="48" tag="operation_48" canDelete="false" writeOutText="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Read from the device (duh). Behaves like read(2) system call,&amp;#010;without a file descriptor argument, and with an IOException." />
         </header>
        </codeoperation>
        <codeoperation parent_id="51" tag="operation_51" canDelete="false" writeOutText="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Write to the device (duh). Behaves like write(2) system call,&amp;#010;without a file descriptor argument, and with an IOException." />
         </header>
        </codeoperation>
        <codeoperation parent_id="54" tag="operation_54" canDelete="false" writeOutText="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Perform an ioctl on the device. request is an integer&amp;#010;value which must be supported by the device. Normally&amp;#010;this is a value from a header file for the device." />
         </header>
        </codeoperation>
        <codeoperation parent_id="58" tag="operation_58" canDelete="false" writeOutText="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Overloaded ioctl method, used when doing an ioctl set from&amp;#010;a pointer to constant user data." />
         </header>
        </codeoperation>
        <codeoperation parent_id="62" tag="operation_62" canDelete="false" writeOutText="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="close" />
         </header>
        </codeoperation>
        <codeoperation parent_id="63" tag="operation_63" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Read samples from my associated file descriptor,&amp;#010;process them, and pass them onto my SampleClient's.&amp;#010;&amp;#010;readSamples() assumes that the data read from&amp;#010;the file descriptor is formatted into samples&amp;#010;in the format of a struct dsm_sample, i.e. a&amp;#010;4 byte unsigned integer time-tag (milliseconds since&amp;#010;midnight GMT), followed by a 4 byte unsigned integer data&amp;#010;length, and then length number of bytes of data.&amp;#010;&amp;#010;After each sample is read, it is distributed to&amp;#010;any SampleClients that have requested samples via&amp;#010;dsm::RawSampleSource::addRawSampleClient().&amp;#010;Then the virtual process() method is called&amp;#010;which allows this sensor to apply any necessary processing&amp;#010;to the raw sample.  The processed samples are then&amp;#010;passed to any SampleClients that have registered with&amp;#010;dsm::SampleSource::addSampleClient()." />
         </header>
        </codeoperation>
        <codeoperation parent_id="64" tag="operation_64" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Apply further necessary processing to samples from&amp;#010;this DSMSensor. A virtual method that is called&amp;#010;from readSamples(). The default implementation&amp;#010;of process() simply passes the Sample onto&amp;#010;any dsm::SampleClient's without further processing." />
         </header>
        </codeoperation>
        <codeoperation parent_id="66" tag="operation_66" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="67" tag="operation_67" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="69" tag="operation_69" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="70" tag="operation_70" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="71" tag="operation_71" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="72" tag="operation_72" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="73" tag="operation_73" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="74" tag="operation_74" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="75" tag="operation_75" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="76" tag="operation_76" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="77" tag="operation_77" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="79" tag="operation_79" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="81" tag="operation_81" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="83" tag="operation_83" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Must be called before invoking readSamples(). Derived&amp;#010;classes should call initBuffer in their &amp;#010;open() method." />
         </header>
        </codeoperation>
        <codeoperation parent_id="84" tag="operation_84" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Delete the sensor buffer.  Derived classes should call&amp;#010;destroyBuffer in their close() method." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="85" tag="hblock_tag_0" canDelete="false" classfield_id="85" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="85" tag="hblock_tag_1" canDelete="false" classfield_id="85" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="86" tag="hblock_tag_2" canDelete="false" classfield_id="86" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="86" tag="hblock_tag_3" canDelete="false" classfield_id="86" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_4" canDelete="false" classfield_id="87" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_5" canDelete="false" classfield_id="87" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="88" tag="hblock_tag_6" canDelete="false" classfield_id="88" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="88" tag="hblock_tag_7" canDelete="false" classfield_id="88" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="89" tag="hblock_tag_8" canDelete="false" classfield_id="89" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="89" tag="hblock_tag_9" canDelete="false" classfield_id="89" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="90" tag="hblock_tag_10" canDelete="false" classfield_id="90" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="90" tag="hblock_tag_11" canDelete="false" classfield_id="90" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="91" tag="hblock_tag_12" canDelete="false" classfield_id="91" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="91" tag="hblock_tag_13" canDelete="false" classfield_id="91" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="92" tag="hblock_tag_14" canDelete="false" classfield_id="92" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="92" tag="hblock_tag_15" canDelete="false" classfield_id="92" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="93" tag="hblock_tag_16" canDelete="false" classfield_id="93" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="93" tag="hblock_tag_17" canDelete="false" classfield_id="93" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="94" tag="hblock_tag_18" canDelete="false" classfield_id="94" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@return the value of initialTimeSecs" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="94" tag="hblock_tag_19" canDelete="false" classfield_id="94" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@param value the value of initialTimeSecs" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="95" tag="hblock_tag_20" canDelete="false" classfield_id="95" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="95" tag="hblock_tag_21" canDelete="false" classfield_id="95" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="96" tag="hblock_tag_22" canDelete="false" classfield_id="96" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="96" tag="hblock_tag_23" canDelete="false" classfield_id="96" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="97" tag="hblock_tag_24" canDelete="false" classfield_id="97" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="97" tag="hblock_tag_25" canDelete="false" classfield_id="97" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="98" tag="hblock_tag_26" canDelete="false" classfield_id="98" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="98" tag="hblock_tag_27" canDelete="false" classfield_id="98" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="99" tag="hblock_tag_28" canDelete="false" classfield_id="99" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="99" tag="hblock_tag_29" canDelete="false" classfield_id="99" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="100" tag="hblock_tag_30" canDelete="false" classfield_id="100" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="100" tag="hblock_tag_31" canDelete="false" classfield_id="100" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="101" tag="hblock_tag_32" canDelete="false" classfield_id="101" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="101" tag="hblock_tag_33" canDelete="false" classfield_id="101" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_34" canDelete="false" classfield_id="102" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@return the value of sampleRateObs" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_35" canDelete="false" classfield_id="102" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@param value the value of sampleRateObs" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_36" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_37" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_38" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_39" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_40" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			dsmsensor.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:59:20&amp;#010;The original location of this file is dsm&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="85" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="85" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="85" tag="hblock_tag_0" canDelete="false" classfield_id="85" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="85" tag="hblock_tag_1" canDelete="false" classfield_id="85" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="86" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="86" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="86" tag="hblock_tag_2" canDelete="false" classfield_id="86" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="86" tag="hblock_tag_3" canDelete="false" classfield_id="86" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="87" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="87" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_4" canDelete="false" classfield_id="87" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_5" canDelete="false" classfield_id="87" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="88" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="88" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="88" tag="hblock_tag_6" canDelete="false" classfield_id="88" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="88" tag="hblock_tag_7" canDelete="false" classfield_id="88" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="89" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="89" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="89" tag="hblock_tag_8" canDelete="false" classfield_id="89" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="89" tag="hblock_tag_9" canDelete="false" classfield_id="89" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="90" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="90" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="90" tag="hblock_tag_10" canDelete="false" classfield_id="90" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="90" tag="hblock_tag_11" canDelete="false" classfield_id="90" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="91" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="91" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="91" tag="hblock_tag_12" canDelete="false" classfield_id="91" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="91" tag="hblock_tag_13" canDelete="false" classfield_id="91" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="92" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="92" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="92" tag="hblock_tag_14" canDelete="false" classfield_id="92" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="92" tag="hblock_tag_15" canDelete="false" classfield_id="92" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="93" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="93" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="93" tag="hblock_tag_16" canDelete="false" classfield_id="93" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="93" tag="hblock_tag_17" canDelete="false" classfield_id="93" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="94" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status." />
       </header>
       <ccfdeclarationcodeblock parent_id="94" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="94" tag="hblock_tag_18" canDelete="false" classfield_id="94" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@return the value of initialTimeSecs" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="94" tag="hblock_tag_19" canDelete="false" classfield_id="94" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@param value the value of initialTimeSecs" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="95" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="95" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="95" tag="hblock_tag_20" canDelete="false" classfield_id="95" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="95" tag="hblock_tag_21" canDelete="false" classfield_id="95" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="96" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="96" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="96" tag="hblock_tag_22" canDelete="false" classfield_id="96" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="96" tag="hblock_tag_23" canDelete="false" classfield_id="96" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="97" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="97" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="97" tag="hblock_tag_24" canDelete="false" classfield_id="97" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="97" tag="hblock_tag_25" canDelete="false" classfield_id="97" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="98" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="98" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="98" tag="hblock_tag_26" canDelete="false" classfield_id="98" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="98" tag="hblock_tag_27" canDelete="false" classfield_id="98" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="99" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="99" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="99" tag="hblock_tag_28" canDelete="false" classfield_id="99" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="99" tag="hblock_tag_29" canDelete="false" classfield_id="99" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="100" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="100" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="100" tag="hblock_tag_30" canDelete="false" classfield_id="100" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="100" tag="hblock_tag_31" canDelete="false" classfield_id="100" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="101" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="101" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="101" tag="hblock_tag_32" canDelete="false" classfield_id="101" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="101" tag="hblock_tag_33" canDelete="false" classfield_id="101" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="102" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Observed number of samples per second." />
       </header>
       <ccfdeclarationcodeblock parent_id="102" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_34" canDelete="false" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@return the value of sampleRateObs" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_35" canDelete="false" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@param value the value of sampleRateObs" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="158" field_type="7602273" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="230" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="230" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_36" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_37" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_38" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_39" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_40" canDelete="false" writeOutText="false" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="dsm" id="103" parent_class="103" fileExt=".cpp" fileName="portselector" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;bool.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="104" tag="operation_104" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="105" tag="operation_105" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="106" tag="operation_106" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="108" tag="operation_108" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="110" tag="operation_110" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="112" tag="operation_112" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="114" tag="operation_114" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="116" tag="operation_116" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="117" tag="operation_117" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="119" tag="operation_119" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="120" tag="operation_120" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="122" tag="operation_122" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="124" tag="operation_124" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="125" tag="operation_125" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="126" tag="operation_126" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="127" tag="operation_127" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="130" tag="operation_130" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Thread function." />
         </header>
        </codeoperation>
        <codeoperation parent_id="131" tag="operation_131" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="132" tag="hblock_tag_0" canDelete="false" classfield_id="132" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="132" tag="hblock_tag_1" canDelete="false" classfield_id="132" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="133" tag="hblock_tag_2" canDelete="false" classfield_id="133" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="133" tag="hblock_tag_3" canDelete="false" classfield_id="133" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="134" tag="hblock_tag_4" canDelete="false" classfield_id="134" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="134" tag="hblock_tag_5" canDelete="false" classfield_id="134" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="135" tag="hblock_tag_6" canDelete="false" classfield_id="135" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="135" tag="hblock_tag_7" canDelete="false" classfield_id="135" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="136" tag="hblock_tag_8" canDelete="false" classfield_id="136" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="136" tag="hblock_tag_9" canDelete="false" classfield_id="136" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="137" tag="hblock_tag_10" canDelete="false" classfield_id="137" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="137" tag="hblock_tag_11" canDelete="false" classfield_id="137" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="138" tag="hblock_tag_12" canDelete="false" classfield_id="138" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="138" tag="hblock_tag_13" canDelete="false" classfield_id="138" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="139" tag="hblock_tag_14" canDelete="false" classfield_id="139" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="139" tag="hblock_tag_15" canDelete="false" classfield_id="139" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="140" tag="hblock_tag_16" canDelete="false" classfield_id="140" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="140" tag="hblock_tag_17" canDelete="false" classfield_id="140" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="141" tag="hblock_tag_18" canDelete="false" classfield_id="141" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="141" tag="hblock_tag_19" canDelete="false" classfield_id="141" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="142" tag="hblock_tag_20" canDelete="false" classfield_id="142" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="142" tag="hblock_tag_21" canDelete="false" classfield_id="142" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="143" tag="hblock_tag_22" canDelete="false" classfield_id="143" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="143" tag="hblock_tag_23" canDelete="false" classfield_id="143" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_24" canDelete="false" classfield_id="144" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_25" canDelete="false" classfield_id="144" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="145" tag="hblock_tag_26" canDelete="false" classfield_id="145" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="145" tag="hblock_tag_27" canDelete="false" classfield_id="145" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_28" canDelete="false" classfield_id="146" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_29" canDelete="false" classfield_id="146" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="147" tag="hblock_tag_30" canDelete="false" classfield_id="147" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="147" tag="hblock_tag_31" canDelete="false" classfield_id="147" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="148" tag="hblock_tag_32" canDelete="false" classfield_id="148" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="148" tag="hblock_tag_33" canDelete="false" classfield_id="148" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="149" tag="hblock_tag_34" canDelete="false" classfield_id="149" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="149" tag="hblock_tag_35" canDelete="false" classfield_id="149" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="150" tag="hblock_tag_36" canDelete="false" classfield_id="150" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="150" tag="hblock_tag_37" canDelete="false" classfield_id="150" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="151" tag="hblock_tag_38" canDelete="false" classfield_id="151" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="151" tag="hblock_tag_39" canDelete="false" classfield_id="151" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="152" tag="hblock_tag_40" canDelete="false" classfield_id="152" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="152" tag="hblock_tag_41" canDelete="false" classfield_id="152" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="153" tag="hblock_tag_42" canDelete="false" classfield_id="153" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="153" tag="hblock_tag_43" canDelete="false" classfield_id="153" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="154" tag="hblock_tag_44" canDelete="false" classfield_id="154" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="154" tag="hblock_tag_45" canDelete="false" classfield_id="154" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="155" tag="hblock_tag_46" canDelete="false" classfield_id="155" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="155" tag="hblock_tag_47" canDelete="false" classfield_id="155" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_48" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_49" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_50" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_51" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_52" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			portselector.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:58:23&amp;#010;The original location of this file is dsm&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="132" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="132" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="132" tag="hblock_tag_0" canDelete="false" classfield_id="132" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="132" tag="hblock_tag_1" canDelete="false" classfield_id="132" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="133" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="133" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="133" tag="hblock_tag_2" canDelete="false" classfield_id="133" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="133" tag="hblock_tag_3" canDelete="false" classfield_id="133" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="134" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="134" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="134" tag="hblock_tag_4" canDelete="false" classfield_id="134" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="134" tag="hblock_tag_5" canDelete="false" classfield_id="134" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="135" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="135" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="135" tag="hblock_tag_6" canDelete="false" classfield_id="135" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="135" tag="hblock_tag_7" canDelete="false" classfield_id="135" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="136" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="136" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="136" tag="hblock_tag_8" canDelete="false" classfield_id="136" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="136" tag="hblock_tag_9" canDelete="false" classfield_id="136" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="137" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="137" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="137" tag="hblock_tag_10" canDelete="false" classfield_id="137" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="137" tag="hblock_tag_11" canDelete="false" classfield_id="137" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="138" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="138" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="138" tag="hblock_tag_12" canDelete="false" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="138" tag="hblock_tag_13" canDelete="false" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="139" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="139" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="139" tag="hblock_tag_14" canDelete="false" classfield_id="139" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="139" tag="hblock_tag_15" canDelete="false" classfield_id="139" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="140" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="140" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="140" tag="hblock_tag_16" canDelete="false" classfield_id="140" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="140" tag="hblock_tag_17" canDelete="false" classfield_id="140" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="141" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="141" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="141" tag="hblock_tag_18" canDelete="false" classfield_id="141" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="141" tag="hblock_tag_19" canDelete="false" classfield_id="141" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="142" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="142" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="142" tag="hblock_tag_20" canDelete="false" classfield_id="142" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="142" tag="hblock_tag_21" canDelete="false" classfield_id="142" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="143" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="143" tag="hblock_tag_22" canDelete="false" classfield_id="143" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="143" tag="hblock_tag_23" canDelete="false" classfield_id="143" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="144" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_24" canDelete="false" classfield_id="144" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_25" canDelete="false" classfield_id="144" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="145" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="145" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="145" tag="hblock_tag_26" canDelete="false" classfield_id="145" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="145" tag="hblock_tag_27" canDelete="false" classfield_id="145" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="146" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_28" canDelete="false" classfield_id="146" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_29" canDelete="false" classfield_id="146" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="147" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="147" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="147" tag="hblock_tag_30" canDelete="false" classfield_id="147" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="147" tag="hblock_tag_31" canDelete="false" classfield_id="147" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="148" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="148" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="148" tag="hblock_tag_32" canDelete="false" classfield_id="148" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="148" tag="hblock_tag_33" canDelete="false" classfield_id="148" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="149" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="149" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="149" tag="hblock_tag_34" canDelete="false" classfield_id="149" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="149" tag="hblock_tag_35" canDelete="false" classfield_id="149" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="150" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="150" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="150" tag="hblock_tag_36" canDelete="false" classfield_id="150" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="150" tag="hblock_tag_37" canDelete="false" classfield_id="150" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="151" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="151" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="151" tag="hblock_tag_38" canDelete="false" classfield_id="151" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="151" tag="hblock_tag_39" canDelete="false" classfield_id="151" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="152" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="152" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="152" tag="hblock_tag_40" canDelete="false" classfield_id="152" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="152" tag="hblock_tag_41" canDelete="false" classfield_id="152" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="153" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="153" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="153" tag="hblock_tag_42" canDelete="false" classfield_id="153" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="153" tag="hblock_tag_43" canDelete="false" classfield_id="153" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="154" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="154" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="154" tag="hblock_tag_44" canDelete="false" classfield_id="154" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="154" tag="hblock_tag_45" canDelete="false" classfield_id="154" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="155" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="155" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="155" tag="hblock_tag_46" canDelete="false" classfield_id="155" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="155" tag="hblock_tag_47" canDelete="false" classfield_id="155" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="230" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="230" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_48" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_49" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_50" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_51" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_52" canDelete="false" writeOutText="false" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="dsm" id="157" parent_class="157" fileExt=".cpp" fileName="rtl_dsmsensor" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;int.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="159" tag="operation_159" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Create a sensor, giving its device name.  No IO (open/read/write/ioctl)&amp;#010;operations to the sensor are performed in the constructor." />
         </header>
        </codeoperation>
        <codeoperation parent_id="161" tag="operation_161" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="162" tag="operation_162" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="163" tag="operation_163" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Constructor for a sensor.&amp;#010;@val devname The device name.&amp;#010;Since we have to generate 4 FIFO names&amp;#010;from this devname, the devname should follow this convention:&amp;#010;&lt;ul>&amp;#010;&lt;li>&quot;/dev/&quot;&amp;#010;&lt;li>followed by a name prefix consisting of a series of&amp;#010;characters (A-Z, a-z, _ -, 0-9), terminated by&amp;#010;non-digit,&amp;#010;&lt;li>followed by one or more digits.&amp;#010;&lt;/ul>&amp;#010;The trailing digits specify the port number.&amp;#010;Examples:   /dev/xxxx0, /dev/xxxx_0, /dev/acme99_4,  /dev/xxx09" />
         </header>
        </codeoperation>
        <codeoperation parent_id="165" tag="operation_165" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="166" tag="operation_166" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="167" tag="operation_167" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="open the sensor. This opens the associated RT-Linux FIFOs." />
         </header>
        </codeoperation>
        <codeoperation parent_id="169" tag="operation_169" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Read from the sensor." />
         </header>
        </codeoperation>
        <codeoperation parent_id="172" tag="operation_172" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Write to the sensor." />
         </header>
        </codeoperation>
        <codeoperation parent_id="175" tag="operation_175" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="179" tag="operation_179" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="183" tag="operation_183" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="close the sensor (and any associated FIFOs)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="184" tag="operation_184" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="185" tag="operation_185" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="186" tag="operation_186" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="return an iterator pointing to one-past end of prefix" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="188" tag="hblock_tag_0" canDelete="false" classfield_id="188" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@return the value of prefix" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="188" tag="hblock_tag_1" canDelete="false" classfield_id="188" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@param value the value of prefix" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="189" tag="hblock_tag_2" canDelete="false" classfield_id="189" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="189" tag="hblock_tag_3" canDelete="false" classfield_id="189" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="190" tag="hblock_tag_4" canDelete="false" classfield_id="190" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@return the value of inFifoName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="190" tag="hblock_tag_5" canDelete="false" classfield_id="190" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@param value the value of inFifoName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="191" tag="hblock_tag_6" canDelete="false" classfield_id="191" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@return the value of outFifoName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="191" tag="hblock_tag_7" canDelete="false" classfield_id="191" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@param value the value of outFifoName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="192" tag="hblock_tag_8" canDelete="false" classfield_id="192" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@return the value of devIoctl" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="192" tag="hblock_tag_9" canDelete="false" classfield_id="192" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@param value the value of devIoctl" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="193" tag="hblock_tag_10" canDelete="false" classfield_id="193" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="193" tag="hblock_tag_11" canDelete="false" classfield_id="193" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="194" tag="hblock_tag_12" canDelete="false" classfield_id="194" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="194" tag="hblock_tag_13" canDelete="false" classfield_id="194" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			rtl_dsmsensor.cpp - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:56:42&amp;#010;The original location of this file is dsm&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="158" field_type="6881382" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="158" tag="" canDelete="false" writeOutText="false" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="188" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names." />
       </header>
       <ccfdeclarationcodeblock parent_id="188" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="188" tag="hblock_tag_0" canDelete="false" classfield_id="188" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@return the value of prefix" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="188" tag="hblock_tag_1" canDelete="false" classfield_id="188" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@param value the value of prefix" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="189" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="189" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="189" tag="hblock_tag_2" canDelete="false" classfield_id="189" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="189" tag="hblock_tag_3" canDelete="false" classfield_id="189" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="190" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device." />
       </header>
       <ccfdeclarationcodeblock parent_id="190" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="190" tag="hblock_tag_4" canDelete="false" classfield_id="190" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@return the value of inFifoName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="190" tag="hblock_tag_5" canDelete="false" classfield_id="190" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@param value the value of inFifoName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="191" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device." />
       </header>
       <ccfdeclarationcodeblock parent_id="191" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="191" tag="hblock_tag_6" canDelete="false" classfield_id="191" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@return the value of outFifoName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="191" tag="hblock_tag_7" canDelete="false" classfield_id="191" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@param value the value of outFifoName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="192" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The RTLIoctlFifo used by this device." />
       </header>
       <ccfdeclarationcodeblock parent_id="192" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="192" tag="hblock_tag_8" canDelete="false" classfield_id="192" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@return the value of devIoctl" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="192" tag="hblock_tag_9" canDelete="false" classfield_id="192" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@param value the value of devIoctl" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="193" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="193" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="193" tag="hblock_tag_10" canDelete="false" classfield_id="193" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="193" tag="hblock_tag_11" canDelete="false" classfield_id="193" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="194" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="194" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="194" tag="hblock_tag_12" canDelete="false" classfield_id="194" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="194" tag="hblock_tag_13" canDelete="false" classfield_id="194" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader22" parent_class="22" fileExt=".h" fileName="int" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INT_H&amp;#010;#define INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="22" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class int&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="int ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			int.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader24" parent_class="24" fileExt=".h" fileName="char" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CHAR_H&amp;#010;#define CHAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="24" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class char&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="char ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CHAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			char.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader25" parent_class="25" fileExt=".h" fileName="bool" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BOOL_H&amp;#010;#define BOOL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="25" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class bool&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="bool ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BOOL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			bool.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader26" parent_class="26" fileExt=".h" fileName="float" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FLOAT_H&amp;#010;#define FLOAT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="26" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class float&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="float ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FLOAT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			float.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader27" parent_class="27" fileExt=".h" fileName="double" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DOUBLE_H&amp;#010;#define DOUBLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="27" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class double&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="double ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DOUBLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			double.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader28" parent_class="28" fileExt=".h" fileName="long" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LONG_H&amp;#010;#define LONG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="28" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class long&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="long ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LONG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			long.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader29" parent_class="29" fileExt=".h" fileName="short" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SHORT_H&amp;#010;#define SHORT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class short&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="short ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SHORT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			short.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:34:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader30" parent_class="30" fileExt=".h" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="30" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class string&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="string ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:35:55&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="dsm" id="cppheader33" parent_class="33" fileExt=".h" fileName="dsmsensor" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DSMSENSOR_H&amp;#010;#define DSMSENSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;float.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="33" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class DSMSensor&amp;#010;DSMSensor provides the basic support for reading, processing&amp;#010;and distributing samples from a sensor attached to a DSM.&amp;#010;&amp;#010;DSMSensor has a no-arg constructor, and can fill in its attributes&amp;#010;from an XML DOM element with fromDOMElement().&amp;#010;One attribute of a DSMSensor is the system device&amp;#010;name associated with this sensor, e.g. &quot;/dev/xxx0&quot;.&amp;#010;Once a device name has been set, then a user of this sensor&amp;#010;can call open(),  and then ioctl(), read() and write().&amp;#010;These methods must be implemented by a derived class,&amp;#010;dsm::RTL_DSMSensor, for example.&amp;#010;&amp;#010;dsm::SampleClient's can call&amp;#010;addRawSampleClient()/removeRawSampleClient() if they want to&amp;#010;receive raw dsm::SampleT's from this sensor.&amp;#010;&amp;#010;dsm::SampleClient's can also call&amp;#010;addSampleClient()/removeSampleClient() if they want to&amp;#010;receive (minimally) processed dsm::SampleT's from this sensor.&amp;#010;&amp;#010;A common usage of a DSMSensor is to add it to a dsm::PortSelector&amp;#010;object with dsm::PortSelector::addSensorPort().&amp;#010;When the dsm::PortSelector::run method has determined that there is data&amp;#010;available on a DSMSensor's file descriptor, it will then call&amp;#010;the readSamples() method which reads the samples from the&amp;#010;file descriptor, processes them, and forwards the raw and processed&amp;#010;samples to all associated dsm::SampleClient's of this DSMSensor.&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="230" tag="tblock_53" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" PortSelector ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="DSMSensor ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_54" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_55" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_56" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_57" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_58" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="34" tag="operation_34" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create a sensor." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="35" tag="operation_35" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="/deprecated Construct a sensor, and provide the device name.&amp;#010;Use the no-arg constructor instead and use the setDeviceName() method." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="37" tag="operation_37" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="38" tag="operation_38" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param val " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40" tag="operation_40" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="41" tag="operation_41" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42" tag="operation_42" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="43" tag="operation_43" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param val " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="45" tag="operation_45" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Open the device. flags are a combination of O_RDONLY, O_WRONLY." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="47" tag="operation_47" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="48" tag="operation_48" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read from the device (duh). Behaves like read(2) system call,&amp;#010;without a file descriptor argument, and with an IOException." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="51" tag="operation_51" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write to the device (duh). Behaves like write(2) system call,&amp;#010;without a file descriptor argument, and with an IOException." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="54" tag="operation_54" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Perform an ioctl on the device. request is an integer&amp;#010;value which must be supported by the device. Normally&amp;#010;this is a value from a header file for the device." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="58" tag="operation_58" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Overloaded ioctl method, used when doing an ioctl set from&amp;#010;a pointer to constant user data." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="62" tag="operation_62" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="close" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="63" tag="operation_63" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read samples from my associated file descriptor,&amp;#010;process them, and pass them onto my SampleClient's.&amp;#010;&amp;#010;readSamples() assumes that the data read from&amp;#010;the file descriptor is formatted into samples&amp;#010;in the format of a struct dsm_sample, i.e. a&amp;#010;4 byte unsigned integer time-tag (milliseconds since&amp;#010;midnight GMT), followed by a 4 byte unsigned integer data&amp;#010;length, and then length number of bytes of data.&amp;#010;&amp;#010;After each sample is read, it is distributed to&amp;#010;any SampleClients that have requested samples via&amp;#010;dsm::RawSampleSource::addRawSampleClient().&amp;#010;Then the virtual process() method is called&amp;#010;which allows this sensor to apply any necessary processing&amp;#010;to the raw sample.  The processed samples are then&amp;#010;passed to any SampleClients that have registered with&amp;#010;dsm::SampleSource::addSampleClient()." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="64" tag="operation_64" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Apply further necessary processing to samples from&amp;#010;this DSMSensor. A virtual method that is called&amp;#010;from readSamples(). The default implementation&amp;#010;of process() simply passes the Sample onto&amp;#010;any dsm::SampleClient's without further processing." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="66" tag="operation_66" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="67" tag="operation_67" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param periodMsec " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="69" tag="operation_69" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="70" tag="operation_70" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="71" tag="operation_71" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="72" tag="operation_72" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="73" tag="operation_73" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="74" tag="operation_74" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="75" tag="operation_75" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="76" tag="operation_76" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="77" tag="operation_77" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="79" tag="operation_79" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param parent " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="81" tag="operation_81" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param node " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="85" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" std::string devname;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="86" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" int id;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="87" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" const int BUFSIZE;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="88" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" char* buffer;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="89" tag="tblock_11" canDelete="false" indentLevel="1" role_id="-1" text=" int bufhead;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="90" tag="tblock_14" canDelete="false" indentLevel="1" role_id="-1" text=" int buftail;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="91" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" dsm::Sample* samp;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="92" tag="tblock_20" canDelete="false" indentLevel="1" role_id="-1" text=" size_t sampDataToRead;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="93" tag="tblock_23" canDelete="false" indentLevel="1" role_id="-1" text=" char* sampDataPtr;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="94" tag="tblock_26" canDelete="false" indentLevel="1" role_id="-1" text=" time_t initialTimeSecs;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="95" tag="tblock_29" canDelete="false" indentLevel="1" role_id="-1" text=" size_t minSampleLength;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="96" tag="tblock_32" canDelete="false" indentLevel="1" role_id="-1" text=" size_t maxSampleLength;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="97" tag="tblock_35" canDelete="false" indentLevel="1" role_id="-1" text=" int readErrorCount;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="98" tag="tblock_38" canDelete="false" indentLevel="1" role_id="-1" text=" int writeErrorCount;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="99" tag="tblock_41" canDelete="false" indentLevel="1" role_id="-1" text=" int currStatsIndex;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="100" tag="tblock_44" canDelete="false" indentLevel="1" role_id="-1" text=" int reportStatsIndex;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="101" tag="tblock_47" canDelete="false" indentLevel="1" role_id="-1" text=" int nsamples;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="102" tag="tblock_50" canDelete="false" indentLevel="1" role_id="-1" text=" float sampleRateObs;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Observed number of samples per second." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="85" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="85" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="85" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="85" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="86" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="86" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="86" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="86" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="87" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="87" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="88" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="88" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="88" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="88" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="89" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="89" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="89" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="89" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="90" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="90" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="90" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="90" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="91" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="91" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="91" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="91" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="92" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="92" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="92" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="92" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="93" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="93" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="93" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="93" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="94" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="94" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@return the value of initialTimeSecs" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="94" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="94" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@param value the value of initialTimeSecs" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="95" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="95" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="95" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="95" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="96" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="96" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="96" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="96" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="97" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="97" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="97" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="97" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="98" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="98" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="98" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="98" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="99" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="99" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="99" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="99" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="100" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="100" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="100" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="100" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="101" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="101" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="101" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="101" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@return the value of sampleRateObs" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@param value the value of sampleRateObs" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="83" tag="operation_83" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Must be called before invoking readSamples(). Derived&amp;#010;classes should call initBuffer in their &amp;#010;open() method." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="84" tag="operation_84" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Delete the sensor buffer.  Derived classes should call&amp;#010;destroyBuffer in their close() method." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DSMSENSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			dsmsensor.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:59:20&amp;#010;The original location of this file is dsm&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="85" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="85" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" std::string devname;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="85" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="85" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="85" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="85" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="86" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="86" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" int id;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="86" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="86" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="86" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="86" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="87" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="87" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" const int BUFSIZE;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="87" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="87" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="87" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="87" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="88" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="88" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" char* buffer;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="88" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="88" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="88" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="88" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="89" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="89" tag="tblock_11" canDelete="false" indentLevel="1" role_id="-1" text=" int bufhead;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="89" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="89" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="89" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="89" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="90" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="90" tag="tblock_14" canDelete="false" indentLevel="1" role_id="-1" text=" int buftail;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="90" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="90" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="90" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="90" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="91" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="91" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" dsm::Sample* samp;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="91" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="91" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="91" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="91" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="92" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="92" tag="tblock_20" canDelete="false" indentLevel="1" role_id="-1" text=" size_t sampDataToRead;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="92" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="92" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="92" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="92" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="93" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="93" tag="tblock_23" canDelete="false" indentLevel="1" role_id="-1" text=" char* sampDataPtr;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="93" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="93" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="93" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="93" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="94" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status." />
       </header>
       <ccfdeclarationcodeblock parent_id="94" tag="tblock_26" canDelete="false" indentLevel="1" role_id="-1" text=" time_t initialTimeSecs;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="94" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="94" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@return the value of initialTimeSecs" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="94" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="94" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of initialTimeSecs&amp;#010;DSMSensor maintains some counters that can be queried&amp;#010;to provide the current status.&amp;#010;@param value the value of initialTimeSecs" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="95" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="95" tag="tblock_29" canDelete="false" indentLevel="1" role_id="-1" text=" size_t minSampleLength;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="95" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="95" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="95" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="95" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="96" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="96" tag="tblock_32" canDelete="false" indentLevel="1" role_id="-1" text=" size_t maxSampleLength;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="96" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="96" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="96" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="96" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="97" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="97" tag="tblock_35" canDelete="false" indentLevel="1" role_id="-1" text=" int readErrorCount;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="97" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="97" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="97" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="97" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="98" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="98" tag="tblock_38" canDelete="false" indentLevel="1" role_id="-1" text=" int writeErrorCount;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="98" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="98" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="98" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="98" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="99" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="99" tag="tblock_41" canDelete="false" indentLevel="1" role_id="-1" text=" int currStatsIndex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="99" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="99" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="99" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="99" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="100" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="100" tag="tblock_44" canDelete="false" indentLevel="1" role_id="-1" text=" int reportStatsIndex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="100" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="100" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="100" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="100" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="101" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="101" tag="tblock_47" canDelete="false" indentLevel="1" role_id="-1" text=" int nsamples;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="101" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="101" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="101" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="101" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="102" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Observed number of samples per second." />
       </header>
       <ccfdeclarationcodeblock parent_id="102" tag="tblock_50" canDelete="false" indentLevel="1" role_id="-1" text=" float sampleRateObs;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Observed number of samples per second." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@return the value of sampleRateObs" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of sampleRateObs&amp;#010;Observed number of samples per second.&amp;#010;@param value the value of sampleRateObs" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="158" field_type="5" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" RTL_DSMSensor ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="230" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="230" tag="tblock_53" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" PortSelector ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_54" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_55" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_56" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_57" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_58" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="dsm" id="cppheader103" parent_class="103" fileExt=".h" fileName="portselector" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PORTSELECTOR_H&amp;#010;#define PORTSELECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;int.h&quot;&amp;#010;#include &quot;bool.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="103" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class PortSelector&amp;#010;PortSelector implements a DSMSensor event loop. It does a&amp;#010;select() system call on the file descriptors of one or more&amp;#010;DSMSensors, and calls their readSample methods when data is&amp;#010;available to be read.  The select() loop is implemented in&amp;#010;the Thread::run method of the PortSelector.&amp;#010;&amp;#010;select also detects connections to RemoteSerialListener.&amp;#010;Once is socket connection is established for a given sensor, then&amp;#010;data is then passed back and forth between the socket&amp;#010;connection and the DSMSensor.  This path is separate&amp;#010;from the normal Sample data path.  It allows remote&amp;#010;direct control of serial sensors." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="230" tag="tblock_71" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" DSMSensor ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="PortSelector ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_72" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_73" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_74" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_75" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_76" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="104" tag="operation_104" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="105" tag="operation_105" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="106" tag="operation_106" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param port " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="108" tag="operation_108" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param port " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="110" tag="operation_110" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="112" tag="operation_112" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="114" tag="operation_114" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param val " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="116" tag="operation_116" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="117" tag="operation_117" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param val " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="119" tag="operation_119" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="120" tag="operation_120" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="122" tag="operation_122" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param val " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="124" tag="operation_124" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="125" tag="operation_125" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="126" tag="operation_126" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="127" tag="operation_127" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param fd &amp;#010;@param port " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="130" tag="operation_130" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Thread function." />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="132" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" atdUtil::Mutex portsMutex;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="133" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; int > pendingSensorPortFds;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="134" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; DSMSensor * > pendingSensorPorts;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="135" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; DSMSensor * > pendingSensorPortClosures;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="136" tag="tblock_11" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; int > activeSensorPortFds;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="137" tag="tblock_14" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; DSMSensor * > activeSensorPorts;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="138" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" atdUtil::Mutex rserialConnsMutex;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="139" tag="tblock_20" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; RemoteSerialConnection * > pendingRserialConns;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="140" tag="tblock_23" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; RemoteSerialConnection * > pendingRserialClosures;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="141" tag="tblock_26" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; RemoteSerialConnection * > activeRserialConns;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="142" tag="tblock_29" canDelete="false" indentLevel="1" role_id="-1" text=" bool portsChanged;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="143" tag="tblock_32" canDelete="false" indentLevel="1" role_id="-1" text=" bool rserialConnsChanged;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="144" tag="tblock_35" canDelete="false" indentLevel="1" role_id="-1" text=" struct timeval tval;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="145" tag="tblock_38" canDelete="false" indentLevel="1" role_id="-1" text=" fd_set readfdset;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="146" tag="tblock_41" canDelete="false" indentLevel="1" role_id="-1" text=" int selectn;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="147" tag="tblock_44" canDelete="false" indentLevel="1" role_id="-1" text=" RemoteSerialListener rserial;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="148" tag="tblock_47" canDelete="false" indentLevel="1" role_id="-1" text=" int selectErrors;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="149" tag="tblock_50" canDelete="false" indentLevel="1" role_id="-1" text=" int rserialListenErrors;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="150" tag="tblock_53" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutMsec;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="151" tag="tblock_56" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutSec;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="152" tag="tblock_59" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutUsec;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="153" tag="tblock_62" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutWarningMsec;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="154" tag="tblock_65" canDelete="false" indentLevel="1" role_id="-1" text=" dsm_sys_time_t statisticsTime;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="155" tag="tblock_68" canDelete="false" indentLevel="1" role_id="-1" text=" unsigned long statisticsPeriod;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="132" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="132" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="132" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="132" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="133" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="133" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="133" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="133" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="134" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="134" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="134" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="134" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="135" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="135" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="135" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="135" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="136" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="136" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="136" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="136" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="137" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="137" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="137" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="137" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="138" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="138" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="138" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="138" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="139" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="139" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="139" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="139" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="140" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="140" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="140" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="140" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="141" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="141" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="141" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="141" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="142" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="142" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="142" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="142" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="143" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="143" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="143" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="143" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="144" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="144" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="145" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="145" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="145" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="145" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="146" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="146" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="147" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="147" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="147" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="147" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="148" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="148" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="148" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="148" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="149" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="149" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="149" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="149" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="150" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="150" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="150" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="150" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="151" tag="hblock_tag_57" canDelete="false" indentLevel="1" classfield_id="151" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="151" tag="hblock_tag_58" canDelete="false" indentLevel="1" classfield_id="151" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="152" tag="hblock_tag_60" canDelete="false" indentLevel="1" classfield_id="152" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="152" tag="hblock_tag_61" canDelete="false" indentLevel="1" classfield_id="152" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="153" tag="hblock_tag_63" canDelete="false" indentLevel="1" classfield_id="153" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="153" tag="hblock_tag_64" canDelete="false" indentLevel="1" classfield_id="153" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="154" tag="hblock_tag_66" canDelete="false" indentLevel="1" classfield_id="154" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="154" tag="hblock_tag_67" canDelete="false" indentLevel="1" classfield_id="154" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="155" tag="hblock_tag_69" canDelete="false" indentLevel="1" classfield_id="155" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="155" tag="hblock_tag_70" canDelete="false" indentLevel="1" classfield_id="155" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="131" tag="operation_131" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PORTSELECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			portselector.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:58:23&amp;#010;The original location of this file is dsm&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="132" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="132" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" atdUtil::Mutex portsMutex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="132" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="132" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="132" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="132" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="133" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="133" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; int > pendingSensorPortFds;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="133" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="133" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="133" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="133" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="134" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="134" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; DSMSensor * > pendingSensorPorts;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="134" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="134" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="134" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="134" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="135" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="135" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; DSMSensor * > pendingSensorPortClosures;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="135" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="135" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="135" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="135" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="136" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="136" tag="tblock_11" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; int > activeSensorPortFds;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="136" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="136" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="136" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="136" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="137" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="137" tag="tblock_14" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; DSMSensor * > activeSensorPorts;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="137" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="137" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="137" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="137" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="138" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="138" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" atdUtil::Mutex rserialConnsMutex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="138" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="138" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="138" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="139" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="139" tag="tblock_20" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; RemoteSerialConnection * > pendingRserialConns;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="139" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="139" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="139" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="139" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="140" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="140" tag="tblock_23" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; RemoteSerialConnection * > pendingRserialClosures;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="140" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="140" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="140" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="140" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="141" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="141" tag="tblock_26" canDelete="false" indentLevel="1" role_id="-1" text=" std::vector&lt; RemoteSerialConnection * > activeRserialConns;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="141" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="141" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="141" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="141" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="142" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="142" tag="tblock_29" canDelete="false" indentLevel="1" role_id="-1" text=" bool portsChanged;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="142" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="142" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="142" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="142" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="143" tag="tblock_32" canDelete="false" indentLevel="1" role_id="-1" text=" bool rserialConnsChanged;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="143" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="143" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="143" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="143" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="144" tag="tblock_35" canDelete="false" indentLevel="1" role_id="-1" text=" struct timeval tval;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="144" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="144" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="144" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="144" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="145" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="145" tag="tblock_38" canDelete="false" indentLevel="1" role_id="-1" text=" fd_set readfdset;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="145" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="145" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="145" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="145" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="146" tag="tblock_41" canDelete="false" indentLevel="1" role_id="-1" text=" int selectn;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="146" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="146" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="146" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="146" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="147" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="147" tag="tblock_44" canDelete="false" indentLevel="1" role_id="-1" text=" RemoteSerialListener rserial;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="147" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="147" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="147" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="147" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="148" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="148" tag="tblock_47" canDelete="false" indentLevel="1" role_id="-1" text=" int selectErrors;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="148" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="148" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="148" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="148" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="149" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="149" tag="tblock_50" canDelete="false" indentLevel="1" role_id="-1" text=" int rserialListenErrors;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="149" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="149" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="149" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="149" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="150" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="150" tag="tblock_53" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutMsec;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="150" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="150" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="150" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="150" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="151" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="151" tag="tblock_56" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutSec;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="151" tag="hblock_tag_57" canDelete="false" indentLevel="1" classfield_id="151" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="151" tag="hblock_tag_58" canDelete="false" indentLevel="1" classfield_id="151" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="152" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="152" tag="tblock_59" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutUsec;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="152" tag="hblock_tag_60" canDelete="false" indentLevel="1" classfield_id="152" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="152" tag="hblock_tag_61" canDelete="false" indentLevel="1" classfield_id="152" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="153" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="153" tag="tblock_62" canDelete="false" indentLevel="1" role_id="-1" text=" size_t timeoutWarningMsec;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="153" tag="hblock_tag_63" canDelete="false" indentLevel="1" classfield_id="153" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="153" tag="hblock_tag_64" canDelete="false" indentLevel="1" classfield_id="153" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="154" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="154" tag="tblock_65" canDelete="false" indentLevel="1" role_id="-1" text=" dsm_sys_time_t statisticsTime;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="154" tag="hblock_tag_66" canDelete="false" indentLevel="1" classfield_id="154" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="154" tag="hblock_tag_67" canDelete="false" indentLevel="1" classfield_id="154" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="155" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="155" tag="tblock_68" canDelete="false" indentLevel="1" role_id="-1" text=" unsigned long statisticsPeriod;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="155" tag="hblock_tag_69" canDelete="false" indentLevel="1" classfield_id="155" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="155" tag="hblock_tag_70" canDelete="false" indentLevel="1" classfield_id="155" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="230" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="230" tag="tblock_71" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" DSMSensor ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="230" tag="hblock_tag_72" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="230" tag="hblock_tag_73" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="230" tag="hblock_tag_74" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="230" tag="hblock_tag_75" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="230" tag="hblock_tag_76" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="230" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="dsm" id="cppheader157" parent_class="157" fileExt=".h" fileName="rtl_dsmsensor" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RTL_DSMSENSOR_H&amp;#010;#define RTL_DSMSENSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;int.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="157" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class RTL_DSMSensor&amp;#010;A RealTime Linux implementation of a DSMSensor.  We try to provide&amp;#010;a simple interface to the user, hiding the details of the&amp;#010;half-duplex RT-Linux FIFOs that are used to read/write and&amp;#010;perform ioctls with the device." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RTL_DSMSensor ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="159" tag="operation_159" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Create a sensor, giving its device name.  No IO (open/read/write/ioctl)&amp;#010;operations to the sensor are performed in the constructor." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="161" tag="operation_161" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="162" tag="operation_162" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="163" tag="operation_163" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Constructor for a sensor.&amp;#010;@val devname The device name.&amp;#010;Since we have to generate 4 FIFO names&amp;#010;from this devname, the devname should follow this convention:&amp;#010;&lt;ul>&amp;#010;&lt;li>&quot;/dev/&quot;&amp;#010;&lt;li>followed by a name prefix consisting of a series of&amp;#010;characters (A-Z, a-z, _ -, 0-9), terminated by&amp;#010;non-digit,&amp;#010;&lt;li>followed by one or more digits.&amp;#010;&lt;/ul>&amp;#010;The trailing digits specify the port number.&amp;#010;Examples:   /dev/xxxx0, /dev/xxxx_0, /dev/acme99_4,  /dev/xxx09" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="165" tag="operation_165" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="166" tag="operation_166" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="167" tag="operation_167" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="open the sensor. This opens the associated RT-Linux FIFOs." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="169" tag="operation_169" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Read from the sensor." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="172" tag="operation_172" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Write to the sensor." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="175" tag="operation_175" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param request &amp;#010;@param buf &amp;#010;@param len " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="179" tag="operation_179" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param request &amp;#010;@param buf &amp;#010;@param len " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="183" tag="operation_183" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="close the sensor (and any associated FIFOs)." />
                 </header>
                </codeoperation>
                <codeoperation parent_id="184" tag="operation_184" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="185" tag="operation_185" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="188" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" std::string prefix;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="189" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" int portNum;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="190" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" std::string inFifoName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="191" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" std::string outFifoName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="192" tag="tblock_11" canDelete="false" indentLevel="1" role_id="-1" text=" RTL_DevIoctl* devIoctl;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The RTLIoctlFifo used by this device." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="193" tag="tblock_14" canDelete="false" indentLevel="1" role_id="-1" text=" int infifofd;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="194" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" int outfifofd;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="188" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="188" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@return the value of prefix" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="188" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="188" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@param value the value of prefix" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="189" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="189" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="189" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="189" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="190" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="190" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@return the value of inFifoName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="190" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="190" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@param value the value of inFifoName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="191" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="191" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@return the value of outFifoName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="191" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="191" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@param value the value of outFifoName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="192" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="192" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@return the value of devIoctl" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="192" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="192" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@param value the value of devIoctl" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="193" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="193" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="193" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="193" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="194" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="194" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="194" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="194" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="186" tag="operation_186" canDelete="false" indentLevel="1" role_id="-1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="return an iterator pointing to one-past end of prefix" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RTL_DSMSENSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			rtl_dsmsensor.h - Copyright maclean&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Thu Feb 10 2005 at 22:56:42&amp;#010;The original location of this file is dsm&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="158" field_type="7209061" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" DSMSensor ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="158" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="158" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="188" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names." />
       </header>
       <ccfdeclarationcodeblock parent_id="188" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" std::string prefix;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="188" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="188" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@return the value of prefix" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="188" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="188" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of prefix&amp;#010;Prefix created from the name of the device, which is used&amp;#010;to generate the associated FIFO names.&amp;#010;@param value the value of prefix" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="189" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="189" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" int portNum;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="189" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="189" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="189" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="189" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="190" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device." />
       </header>
       <ccfdeclarationcodeblock parent_id="190" tag="tblock_5" canDelete="false" indentLevel="1" role_id="-1" text=" std::string inFifoName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="190" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="190" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@return the value of inFifoName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="190" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="190" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of inFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to read data from the&amp;#010;device.&amp;#010;@param value the value of inFifoName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="191" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device." />
       </header>
       <ccfdeclarationcodeblock parent_id="191" tag="tblock_8" canDelete="false" indentLevel="1" role_id="-1" text=" std::string outFifoName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="191" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="191" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@return the value of outFifoName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="191" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="191" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of outFifoName&amp;#010;Actual name of RT-Linux FIFO that is used to write data to the&amp;#010;device.&amp;#010;@param value the value of outFifoName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="192" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The RTLIoctlFifo used by this device." />
       </header>
       <ccfdeclarationcodeblock parent_id="192" tag="tblock_11" canDelete="false" indentLevel="1" role_id="-1" text=" RTL_DevIoctl* devIoctl;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The RTLIoctlFifo used by this device." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="192" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="192" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@return the value of devIoctl" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="192" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="192" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of devIoctl&amp;#010;The RTLIoctlFifo used by this device.&amp;#010;@param value the value of devIoctl" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="193" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="193" tag="tblock_14" canDelete="false" indentLevel="1" role_id="-1" text=" int infifofd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="193" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="193" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="193" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="193" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="194" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="194" tag="tblock_17" canDelete="false" indentLevel="1" role_id="-1" text=" int outfifofd;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="194" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="194" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="194" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="194" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
