<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.90</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="umbrellopTGimc" href="/tmp/kde-maclean/umbrellopTGimc.tmp" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model>
   <UML:Stereotype visibility="public" xmi.id="3" name="datatype" />
   <UML:Stereotype visibility="public" xmi.id="24" name="typedef" />
   <UML:Stereotype visibility="public" xmi.id="29" name="enum" />
   <UML:Stereotype visibility="public" xmi.id="1274" name="interface" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="2" name="int" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="4" name="char" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="5" name="bool" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="6" name="float" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="7" name="double" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="8" name="long" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="9" name="short" />
   <UML:DataType stereotype="3" visibility="public" xmi.id="10" name="string" />
   <UML:Package visibility="public" xmi.id="11" name="atdUtil" >
    <UML:Class visibility="public" xmi.id="12" name="Runnable" >
     <UML:Operation comment="The method which will run in its own thread.  This method must
be supplied by the Runnable or Thread subclass." visibility="public" xmi.id="13" type="int" isAbstract="true" name="run" />
     <UML:Operation comment="Interrupt this run method.  This sets a flag which can be tested with
isInterrupted().  It is up to the run() implementation to return 
when interrupted." visibility="public" xmi.id="14" type="void" isAbstract="true" name="interrupt" />
     <UML:Operation comment="Has the run method been interrupted?" visibility="public" xmi.id="15" type="bool" isAbstract="true" name="isInterrupted" />
     <UML:Operation visibility="protected" xmi.id="16" type="void" name="testCancel" />
     <UML:Operation visibility="protected" xmi.id="17" type="bool" name="amInterrupted" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="18" name="Thread" >
     <UML:Operation visibility="public" xmi.id="20" type="Thread*" name="currentThread" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="21" type="int" name="currentThreadId" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="22" type="const std::string&amp;" name="currentName" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="34" type="" name="Thread" >
      <UML:Parameter visibility="public" xmi.id="35" value="" type="const std::string&amp;" name="name" />
      <UML:Parameter visibility="public" xmi.id="36" value="" type="bool" name="detached" />
     </UML:Operation>
     <UML:Operation comment="A thread shouldn't be running at the time of destruction.
Otherwise, if it is still running, all kinds of problems will
occur once the destructor starts cleaning up.

If a non-detached thread hasn't been joined before being
destroyed, then some memory is not reclaimed.

This destructor will throw an Exception if the thread is
still running, or if it is not detached and hasn't been joined.
These should be treated as programming errors, not run-time errors." visibility="public" xmi.id="37" type="" name="~ Thread" />
     <UML:Operation comment="Start the thread running, meaning execute the run method in a
separate thread." visibility="public" xmi.id="38" type="void" name="start" />
     <UML:Operation comment="The calling thread joins this thread, waiting until the thread
finishes, which means either that the run() method returned,
the thread called pthread_exit() or the thread was cancelled.
The return value is the int return value of the run method,
or PTHREAD_CANCELED (-1).  If the run method threw an Exception,
it will be caught and then re-thrown by join." visibility="public" xmi.id="39" type="int" name="join" />
     <UML:Operation comment="Send a signal to this thread. In order to catch this signal
this thread must have done an unblockSignal(sig). Otherwise
the default system action (terminate, core dump, stop)
will be performed." visibility="public" xmi.id="40" type="void" name="kill" >
      <UML:Parameter visibility="public" xmi.id="41" value="" type="int" name="sig" />
     </UML:Operation>
     <UML:Operation comment="Cancel this thread." visibility="public" xmi.id="42" type="void" name="cancel" />
     <UML:Operation comment="Interrupt this thread.  This sets a flag which can be tested with
isInterrupted().  It is up to the run() implementation to return 
when interrupted.  This is a &quot;soft&quot; cancel." visibility="public" xmi.id="43" type="void" name="interrupt" />
     <UML:Operation visibility="public" xmi.id="44" type="void" name="signalHandler" >
      <UML:Parameter visibility="public" xmi.id="45" value="" type="int" name="sig" />
      <UML:Parameter visibility="public" xmi.id="46" value="" type="siginfo_t*" name="si" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="47" type="bool" name="isInterrupted" />
     <UML:Operation visibility="public" xmi.id="48" type="bool" name="isRunning" />
     <UML:Operation visibility="public" xmi.id="49" type="bool" name="isJoined" />
     <UML:Operation visibility="public" xmi.id="50" type="bool" name="isDetached" />
     <UML:Operation comment="Return true if the cancel state of this thread is PTHREAD_CANCEL_ENABLE." visibility="public" xmi.id="51" type="bool" name="isCancelEnabled" />
     <UML:Operation comment="Return true if the cancel type of this thread is PTHREAD_CANCEL_DEFERRED." visibility="public" xmi.id="52" type="bool" name="isCancelDeferred" />
     <UML:Operation comment="Return the name of this thread." visibility="public" xmi.id="53" type="const std::string&amp;" name="getName" />
     <UML:Operation comment="Return a name with a bunch of descriptive fields, specifying
whether it is detached, the real-time priority, etc." visibility="public" xmi.id="54" type="const std::string" name="getFullName" />
     <UML:Operation visibility="public" xmi.id="55" type="bool" name="setRealTimeRoundRobinPriority" >
      <UML:Parameter visibility="public" xmi.id="56" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="57" type="bool" name="setRealTimeFIFOPriority" >
      <UML:Parameter visibility="public" xmi.id="58" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="59" type="bool" name="setNonRealTimePriority" />
     <UML:Operation comment="Block this signal." visibility="public" xmi.id="60" type="void" name="blockSignal" >
      <UML:Parameter visibility="public" xmi.id="61" value="" type="int" />
     </UML:Operation>
     <UML:Operation comment="Unblock this signal. When this signal is received by this thread,
the signalHandler() method will be called. This will install
a signal handler, using the sigaction() system function,
for all threads, including the main() thread.  If other
threads do not wish to be notified of this signal,
then they should call blockSignal(sig)." visibility="public" xmi.id="62" type="void" name="unblockSignal" >
      <UML:Parameter visibility="public" xmi.id="63" value="" type="int" />
     </UML:Operation>
     <UML:Operation comment="a test method." visibility="public" xmi.id="64" type="int" name="test" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="65" value="" type="int" name="argc" />
      <UML:Parameter visibility="public" xmi.id="66" value="" type="char**" name="argv" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="67" type="void*" name="thr_run" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="68" value="" type="void*" name="me" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="69" type="void*" name="thr_run_detached" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="70" value="" type="void*" name="me" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="71" type="void" name="thr_delete" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="72" value="" type="void*" name="me" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="73" type="void" name="thr_cleanup" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="74" value="" type="void*" name="me" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="75" type="void" name="thr_add_sig" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="76" value="" type="int" name="sig" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="78" type="void*" name="pRun" />
     <UML:Operation comment="Set the cancel state for this thread - false means cancel
requests are ignored. See ::pthread_setcancelstate.
This is protected, it should be called only from a thread's
own run method." visibility="protected" xmi.id="79" type="void" name="setCancelEnabled" >
      <UML:Parameter visibility="public" xmi.id="80" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Set the cancel type for this thread. true means cancel requests
are deferred until the next cancellation point. false means
they occur instantly.  This is protected, it should be called
only from a thread's own run method.
The cancellation points are:
   pthread_join(3)
   pthread_cond_wait(3)
   pthread_cond_timedwait(3)
   pthread_testcancel(3)
   sem_wait(3)
   sigwait(3)
Since cancellation is implemented with signals, system calls
like read(2),write(2), wait(2), select(2) will return EINTR
on a cancel, and one can do testCancel() at that point." visibility="protected" xmi.id="81" type="void" name="setCancelDeferred" >
      <UML:Parameter visibility="public" xmi.id="82" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Register this current thread with a static registry of threads
by id.
&lt;code>
Thread::registerThread (new Thread (&quot;Main&quot;));
&lt;/code>" visibility="protected" xmi.id="83" type="void" name="registerThread" />
     <UML:Operation visibility="protected" xmi.id="84" type="void" name="unregisterThread" />
     <UML:Operation visibility="protected" xmi.id="85" type="void" name="setThreadScheduler" >
      <UML:Parameter visibility="public" xmi.id="86" value="" type="int" name="policy" />
      <UML:Parameter visibility="public" xmi.id="87" value="" type="int" name="priority" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="88" type="std::string" name="fullName" />
     <UML:Operation visibility="protected" xmi.id="89" type="void" name="makeFullName" />
     <UML:Operation comment="Copy constructor declared protected to discourage copying.
Copy should only be done on a thread prior to start().
/// Thread(const Thread&amp; x);/**
Assignment operator declared protected to discourage assignment.
Assignment should only be done to/from a thread prior to start()." visibility="protected" xmi.id="105" type="void" name="sigAction" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="106" value="" type="int" name="sig" />
      <UML:Parameter visibility="public" xmi.id="107" value="" type="siginfo_t*" name="si" />
      <UML:Parameter visibility="public" xmi.id="108" value="" type="void*" name="vptr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="903" type="void" name="new" />
     <UML:Operation visibility="public" xmi.id="906" type="void" name="delete" />
     <UML:Attribute visibility="public" xmi.id="25" value="" type="Mutex" name="_threadsMutex" ownerScope="classifier" />
     <UML:Attribute visibility="public" xmi.id="27" value="" type="std::set&lt; int >" name="_handledSignals" ownerScope="classifier" />
     <UML:Attribute visibility="protected" xmi.id="77" value="" type="std::string" name="unknownName" ownerScope="classifier" />
     <UML:Attribute visibility="protected" xmi.id="90" value="" type="Mutex" name="_mutex" />
     <UML:Attribute visibility="protected" xmi.id="91" value="" type="Mutex" name="_fullnamemutex" />
     <UML:Attribute visibility="protected" xmi.id="92" value="" type="std::string" name="_name" />
     <UML:Attribute visibility="protected" xmi.id="93" value="" type="std::string" name="_fullname" />
     <UML:Attribute visibility="protected" xmi.id="94" value="" type="pthread_t" name="_id" />
     <UML:Attribute visibility="protected" xmi.id="95" value="" type="bool" name="_interrupted" />
     <UML:Attribute visibility="protected" xmi.id="96" value="" type="bool" name="_cancel_enabled" />
     <UML:Attribute visibility="protected" xmi.id="97" value="" type="bool" name="_cancel_deferred" />
     <UML:Attribute visibility="protected" xmi.id="98" value="" type="bool" name="_running" />
     <UML:Attribute visibility="protected" xmi.id="99" value="" type="bool" name="_needsjoining" />
     <UML:Attribute visibility="protected" xmi.id="100" value="" type="pthread_attr_t" name="thread_attr" />
     <UML:Attribute comment="Exception thrown by run method." visibility="protected" xmi.id="101" value="" type="Exception*" name="_exception" />
     <UML:Attribute visibility="protected" xmi.id="102" value="" type="bool" name="_detached" />
     <UML:Attribute visibility="protected" xmi.id="103" value="" type="sigset_t" name="blockedSignals" />
     <UML:Attribute visibility="protected" xmi.id="104" value="" type="sigset_t" name="unblockedSignals" />
     <UML:Class stereotype="24" visibility="public" xmi.id="23" name="threadmap_t" />
     <UML:Enumeration stereotype="29" comment="Values that can be returned by run method. User can define other
values greater than RUN_EXCEPTION. These values are then returned by
&lt;code>int join()&lt;/code>. 
Note that PTHREAD_CANCELLED is -1" visibility="public" xmi.id="28" name="runStatus" >
      <UML:EnumerationLiteral visibility="public" xmi.id="30" name="RUN_CANCELED" />
      <UML:EnumerationLiteral visibility="public" xmi.id="31" name="RUN_OK" />
      <UML:EnumerationLiteral visibility="public" xmi.id="32" name="NOT_RUNNING" />
      <UML:EnumerationLiteral visibility="public" xmi.id="33" name="RUN_EXCEPTION" />
     </UML:Enumeration>
    </UML:Class>
    <UML:Class comment="A Thread with a constructor that sets detached=true." visibility="public" xmi.id="109" name="DetachedThread" >
     <UML:Operation visibility="public" xmi.id="111" type="" name="DetachedThread" >
      <UML:Parameter visibility="public" xmi.id="112" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
    </UML:Class>
    <UML:Class comment="The ThreadRunnable class implements a Thread which uses a Runnable
target to supply the run() method.  It also serves as a &quot;default thread&quot;
if it has no target.  In that case the run() method does nothing; it
just returns." visibility="public" xmi.id="113" name="ThreadRunnable" >
     <UML:Operation visibility="public" xmi.id="115" type="" name="ThreadRunnable" >
      <UML:Parameter visibility="public" xmi.id="116" value="" type="const std::string&amp;" name="name" />
      <UML:Parameter visibility="public" xmi.id="117" value="" type="Runnable*" name="target" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="118" type="void" name="interrupt" />
     <UML:Operation visibility="public" xmi.id="119" type="int" name="run" />
    </UML:Class>
    <UML:Class stereotype="24" visibility="public" xmi.id="121" name="DefaultThread" />
    <UML:Class comment="Implementation of a socket, providing a C++ interface to
system socket calls: socket,bind,listen,accept,setsockopt, etc.

This is patterned after java.net.SocketImpl.
Because we're lazy, this classes includes methods for
both stream (TCP) and datagram (UDP) sockets.
We also haven't implemented the socket implementation factory from
Java.

This class provides the default public copy constructors and 
assignment operators.  Objects of this class can be copied and
assigned to without restriction.  However, because of this,
the destructor does not close the socket, so, in general, you
should make sure that the socket is closed once at some point.
" visibility="public" xmi.id="122" name="SocketImpl" >
     <UML:Operation visibility="public" xmi.id="123" type="" name="SocketImpl" >
      <UML:Parameter visibility="public" xmi.id="124" value="" type="int" name="type" />
      <UML:Parameter visibility="public" xmi.id="125" value="" type="const char*" name="typestr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="126" type="" name="SocketImpl" >
      <UML:Parameter visibility="public" xmi.id="127" value="" type="int" name="fd" />
      <UML:Parameter visibility="public" xmi.id="128" value="" type="const Inet4SocketAddress&amp;" name="remoteaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="129" type="int" name="getFd" />
     <UML:Operation visibility="public" xmi.id="130" type="void" name="setBacklog" >
      <UML:Parameter visibility="public" xmi.id="131" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="132" type="Inet4Address" name="getLocalInet4Address" />
     <UML:Operation visibility="public" xmi.id="133" type="int" name="getLocalPort" />
     <UML:Operation visibility="public" xmi.id="134" type="Inet4SocketAddress" name="getLocalInet4SocketAddress" />
     <UML:Operation visibility="public" xmi.id="135" type="Inet4Address" name="getInet4Address" />
     <UML:Operation visibility="public" xmi.id="136" type="int" name="getPort" />
     <UML:Operation visibility="public" xmi.id="137" type="Inet4SocketAddress" name="getInet4SocketAddress" />
     <UML:Operation visibility="public" xmi.id="138" type="void" name="setReuseAddress" >
      <UML:Parameter visibility="public" xmi.id="139" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Set the timeout for receive(), recv(), and recvfrom()
methods.
@param val timeout in milliseconds. 0=no timeout (infinite)
The receive methods will return IOTimeoutException
if an operation times out." visibility="public" xmi.id="140" type="void" name="setTimeout" >
      <UML:Parameter visibility="public" xmi.id="141" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="142" type="int" name="getTimeout" />
     <UML:Operation visibility="public" xmi.id="143" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="144" type="void" name="bind" >
      <UML:Parameter visibility="public" xmi.id="145" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="146" type="void" name="bind" >
      <UML:Parameter visibility="public" xmi.id="147" value="" type="const Inet4Address&amp;" name="addr" />
      <UML:Parameter visibility="public" xmi.id="148" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="149" type="void" name="bind" >
      <UML:Parameter visibility="public" xmi.id="150" value="" type="const Inet4SocketAddress&amp;" name="sockaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="151" type="void" name="listen" />
     <UML:Operation visibility="public" xmi.id="152" type="Socket" name="accept" />
     <UML:Operation visibility="public" xmi.id="153" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="154" value="" type="const std::string&amp;" name="dest" />
      <UML:Parameter visibility="public" xmi.id="155" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="156" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="157" value="" type="const Inet4Address&amp;" name="addr" />
      <UML:Parameter visibility="public" xmi.id="158" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="159" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="160" value="" type="const Inet4SocketAddress&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="161" type="void" name="receive" >
      <UML:Parameter visibility="public" xmi.id="162" value="" type="DatagramPacket&amp;" name="packet" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="163" type="void" name="send" >
      <UML:Parameter visibility="public" xmi.id="164" value="" type="const DatagramPacket&amp;" name="packet" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="165" type="size_t" name="recv" >
      <UML:Parameter visibility="public" xmi.id="166" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="167" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="168" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="169" type="size_t" name="recvfrom" >
      <UML:Parameter visibility="public" xmi.id="170" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="171" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="172" value="" type="int" name="flags" />
      <UML:Parameter visibility="public" xmi.id="173" value="" type="Inet4SocketAddress&amp;" name="from" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="174" type="size_t" name="send" >
      <UML:Parameter visibility="public" xmi.id="175" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="176" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="177" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="178" type="size_t" name="sendto" >
      <UML:Parameter visibility="public" xmi.id="179" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="180" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="181" value="" type="int" name="flags" />
      <UML:Parameter visibility="public" xmi.id="182" value="" type="const Inet4SocketAddress&amp;" name="to" />
     </UML:Operation>
     <UML:Operation comment="Join a multicast group on all interfaces." visibility="public" xmi.id="183" type="void" name="joinGroup" >
      <UML:Parameter visibility="public" xmi.id="184" value="" type="Inet4Address" name="groupAddr" />
     </UML:Operation>
     <UML:Operation comment="Join a multicast group on a specific interface.
According to &quot;man 7 ip&quot;, if the interface adddress &quot;is equal to
INADDR_ANY an appropriate interface is chosen by the system&quot;,
which may not be what you want.
This was eth0 on a system with lo,eth0 and eth1." visibility="public" xmi.id="185" type="void" name="joinGroup" >
      <UML:Parameter visibility="public" xmi.id="186" value="" type="Inet4Address" name="groupAddr" />
      <UML:Parameter visibility="public" xmi.id="187" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation comment="Leave a multicast group on all interfaces." visibility="public" xmi.id="188" type="void" name="leaveGroup" >
      <UML:Parameter visibility="public" xmi.id="189" value="" type="Inet4Address" name="groupAddr" />
     </UML:Operation>
     <UML:Operation comment="Leave a multicast group on a given interface." visibility="public" xmi.id="190" type="void" name="leaveGroup" >
      <UML:Parameter visibility="public" xmi.id="191" value="" type="Inet4Address" name="groupAddr" />
      <UML:Parameter visibility="public" xmi.id="192" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="193" type="void" name="setReceiveBufferSize" >
      <UML:Parameter visibility="public" xmi.id="194" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="195" type="int" name="getReceiveBufferSize" />
     <UML:Operation visibility="public" xmi.id="196" type="void" name="setSendBufferSize" >
      <UML:Parameter visibility="public" xmi.id="197" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="198" type="int" name="getSendBufferSize" />
     <UML:Operation visibility="public" xmi.id="199" type="void" name="setTimeToLive" >
      <UML:Parameter visibility="public" xmi.id="200" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="201" type="int" name="getTimeToLive" />
     <UML:Operation visibility="public" xmi.id="202" type="void" name="setInterface" >
      <UML:Parameter visibility="public" xmi.id="203" value="" type="Inet4Address" name="maddr" />
      <UML:Parameter visibility="public" xmi.id="204" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="205" type="void" name="setInterface" >
      <UML:Parameter visibility="public" xmi.id="206" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="207" type="Inet4Address" name="getInterface" />
     <UML:Operation visibility="public" xmi.id="208" type="Inet4Address" name="findInterface" >
      <UML:Parameter visibility="public" xmi.id="209" value="" type="const Inet4Address&amp;" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="210" type="void" name="setLoopbackEnable" >
      <UML:Parameter visibility="public" xmi.id="211" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="212" type="std::vector&lt; Inet4Address >" name="getInterfaceAddresses" />
     <UML:Operation comment="Enable or disable SO_BROADCAST.  Note that broadcasting is generally
not advised, best to use multicast instead." visibility="public" xmi.id="213" type="void" name="setBroadcastEnable" >
      <UML:Parameter visibility="public" xmi.id="214" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="215" type="bool" name="getBroadcastEnable" />
     <UML:Operation comment="Do system call to determine local address of this socket." visibility="protected" xmi.id="225" type="void" name="getLocalAddr" />
     <UML:Operation comment="Do system call to determine address of remote end." visibility="protected" xmi.id="226" type="void" name="getRemoteAddr" />
     <UML:Attribute visibility="protected" xmi.id="216" value="" type="Inet4SocketAddress" name="localaddr" />
     <UML:Attribute visibility="protected" xmi.id="217" value="" type="Inet4SocketAddress" name="remoteaddr" />
     <UML:Attribute visibility="protected" xmi.id="218" value="" type="int" name="fd" />
     <UML:Attribute visibility="protected" xmi.id="219" value="" type="int" name="socktype" />
     <UML:Attribute visibility="protected" xmi.id="220" value="" type="int" name="backlog" />
     <UML:Attribute visibility="protected" xmi.id="221" value="" type="bool" name="reuseaddr" />
     <UML:Attribute visibility="protected" xmi.id="222" value="" type="bool" name="hasTimeout" />
     <UML:Attribute visibility="protected" xmi.id="223" value="" type="struct timeval" name="timeout" />
     <UML:Attribute visibility="protected" xmi.id="224" value="" type="fd_set" name="fdset" />
    </UML:Class>
    <UML:Class comment="A stream (TCP) socket.  This class is patterned after the
java.net.Socket class.

This class provides the default public copy constructors and 
assignment operators.  Objects of this class can be copied and
assigned to without restriction.  However, because of this,
the destructor does not close the socket, so, in general, you
should make sure that the socket is closed once at some point.

Usage scenario:
\code
// create a connection to host big_server, on port 5000
Socket sock(&quot;big_server&quot;,5000);
for (int i = 0; i &lt; 10; i++) {
    sock.send(&quot;hello\n&quot;,6,0);
     }
     sock.close();
\endcode
" visibility="public" xmi.id="227" name="Socket" >
     <UML:Operation comment="Create an unconnected stream socket." visibility="public" xmi.id="228" type="" name="Socket" />
     <UML:Operation comment="Create a stream socket connected to a remote address and port." visibility="public" xmi.id="229" type="" name="Socket" >
      <UML:Parameter visibility="public" xmi.id="230" value="" type="const Inet4Address&amp;" name="addr" />
      <UML:Parameter visibility="public" xmi.id="231" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation comment="Create a stream socket connected to a remote socket address." visibility="public" xmi.id="232" type="" name="Socket" >
      <UML:Parameter visibility="public" xmi.id="233" value="" type="const Inet4SocketAddress&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation comment="Create a stream socket connected to a remote host and port." visibility="public" xmi.id="234" type="" name="Socket" >
      <UML:Parameter visibility="public" xmi.id="235" value="" type="const std::string&amp;" name="host" />
      <UML:Parameter visibility="public" xmi.id="236" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation comment="Called by ServerSocket after a connection is
accepted." visibility="public" xmi.id="237" type="" name="Socket" >
      <UML:Parameter visibility="public" xmi.id="238" value="" type="int" name="fd" />
      <UML:Parameter visibility="public" xmi.id="239" value="" type="const Inet4SocketAddress&amp;" name="raddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="240" type="" name="~ Socket" />
     <UML:Operation visibility="public" xmi.id="241" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="242" type="void" name="setTimeout" >
      <UML:Parameter visibility="public" xmi.id="243" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="244" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="245" value="" type="const std::string&amp;" name="host" />
      <UML:Parameter visibility="public" xmi.id="246" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="247" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="248" value="" type="const Inet4Address&amp;" name="addr" />
      <UML:Parameter visibility="public" xmi.id="249" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="250" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="251" value="" type="const Inet4SocketAddress&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="252" type="int" name="getFd" />
     <UML:Operation visibility="public" xmi.id="253" type="size_t" name="recv" >
      <UML:Parameter visibility="public" xmi.id="254" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="255" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="256" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="257" type="size_t" name="send" >
      <UML:Parameter visibility="public" xmi.id="258" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="259" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="260" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="261" type="void" name="setReceiveBufferSize" >
      <UML:Parameter visibility="public" xmi.id="262" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="263" type="int" name="getReceiveBufferSize" />
     <UML:Operation visibility="public" xmi.id="264" type="void" name="setSendBufferSize" >
      <UML:Parameter visibility="public" xmi.id="265" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="266" type="int" name="getSendBufferSize" />
     <UML:Operation visibility="public" xmi.id="267" type="Inet4Address" name="getInet4Address" />
     <UML:Operation visibility="public" xmi.id="268" type="int" name="getPort" />
     <UML:Operation visibility="public" xmi.id="269" type="Inet4SocketAddress" name="getInet4SocketAddress" />
     <UML:Operation visibility="public" xmi.id="270" type="Inet4Address" name="getLocalInet4Address" />
     <UML:Operation visibility="public" xmi.id="271" type="int" name="getLocalPort" />
     <UML:Operation visibility="public" xmi.id="272" type="Inet4SocketAddress" name="getLocalInet4SocketAddress" />
    </UML:Class>
    <UML:Class comment="A stream (TCP) socket that is used to listen for connections.
This class is patterned after the java.net.ServerSocket class.

This class provides the default public copy constructors and 
assignment operators.  Objects of this class can be copied and
assigned to without restriction.  However, because of this,
the destructor does not close the socket, so, in general, you
should make sure that the socket is closed once at some point.

Usage scenario of a server which listens for connections
on port 5000, and spawns a thread to handle each connection.

\code
     using namespace atdUtil;
     class DetachedSocketThread: public DetachedThread {
     public:
         // Thread constructor
         DetachedSocketThread(Socket s) throw(IOException):
	DetachedThread(&quot;reader&quot;),sock(s) {}

         // Thread run metchod
         int run() throw(atdUtil::Exception) {
             for (;;) {
                 char buf[512];
                 if (recv(buf,sizeof(buf),0) == 0) break;
                 ...
             }
             sock.close();
             return RUN_OK;
         }
         // my socket
         Socket sock;
     };

ServerSocket ssock(5000);	// bind and listen on port 5000
for (;;) {
    Socket sock = ssock.accept();	// accept a connection
    DetachedSockThread* thrd = new DetachedSockThread(sock);
    thrd->start();
         // DetachedThreads delete themselves when they're done.
     }
\endcode
" visibility="public" xmi.id="274" name="ServerSocket" >
     <UML:Operation comment="Create a ServerSocket bound to a port on all local interfaces.
@param port Port number, 0&lt;=port&lt;=65535.  If zero, the system
       will select an available port number. To find out
       which port number was selected, use getLocalPort().
" visibility="public" xmi.id="275" type="" name="ServerSocket" >
      <UML:Parameter visibility="public" xmi.id="276" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation comment="Create a ServerSocket bound to port on all interfaces
and set listen backlog parameter." visibility="public" xmi.id="277" type="" name="ServerSocket" >
      <UML:Parameter visibility="public" xmi.id="278" value="" type="int" name="port" />
      <UML:Parameter visibility="public" xmi.id="279" value="" type="int" name="backlog" />
     </UML:Operation>
     <UML:Operation comment="Create a ServerSocket bound to port on local address,
and set listen backlog parameter." visibility="public" xmi.id="280" type="" name="ServerSocket" >
      <UML:Parameter visibility="public" xmi.id="281" value="" type="int" name="port" />
      <UML:Parameter visibility="public" xmi.id="282" value="" type="int" name="backlog" />
      <UML:Parameter visibility="public" xmi.id="283" value="" type="const Inet4Address&amp;" name="bindAddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="284" type="" name="~ ServerSocket" />
     <UML:Operation visibility="public" xmi.id="285" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="286" type="Socket" name="accept" />
     <UML:Operation visibility="public" xmi.id="287" type="void" name="setReceiveBufferSize" >
      <UML:Parameter visibility="public" xmi.id="288" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="289" type="int" name="getReceiveBufferSize" />
     <UML:Operation visibility="public" xmi.id="290" type="void" name="setSendBufferSize" >
      <UML:Parameter visibility="public" xmi.id="291" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="292" type="int" name="getSendBufferSize" />
     <UML:Operation visibility="public" xmi.id="293" type="Inet4Address" name="getInet4Address" />
     <UML:Operation visibility="public" xmi.id="294" type="int" name="getLocalPort" />
     <UML:Operation visibility="public" xmi.id="295" type="Inet4SocketAddress" name="getInet4SocketAddress" />
    </UML:Class>
    <UML:Class comment="A socket for sending datagrams, either unicast, broadcast or multicast
(though the broadcast hasn't been tested).

This class provides the default public copy constructors and 
assignment operators.  Objects of this class can be copied and
assigned to without restriction.  However, because of this,
the destructor does not close the socket, so, in general, you
should make sure that the socket is closed once at some point.

Typical usage:
A receiver of datagrams on port 9000:
\code
DatagramSocket sock(9000);
char buf[512];
Inet4SocketAddress from;
for (;;) {
    sock.recvfrom(buf,sizeof(buf),0,from);
}
\endcode
A unicast sender of datagrams on port 9000:
\code
DatagramSocket sock;
     Inet4SocketAddress to(Inet4Address::getByName(&quot;128.117.80.99&quot;,9000));
for (;;) {
    sock.sendto(&quot;hello\n&quot;,6,0,to);
     }
\endcode
A multicast sender of datagrams on port 9000:
\code
DatagramSocket sock;
     Inet4SocketAddress to(Inet4Address::getByName(&quot;239.0.0.1&quot;,9000));
for (;;) {
    sock.sendto(&quot;hello\n&quot;,6,0,to);
     }
\endcode
A broadcast sender of datagrams on port 9000 (untested):
\code
DatagramSocket sock;
sock.setBroadcastEnable(true);
     Inet4SocketAddress to(Inet4Address::getByName(&quot;255.255.255.255&quot;,9000));
for (;;) {
    sock.sendto(&quot;hello\n&quot;,6,0,to);
     }
\endcode" visibility="public" xmi.id="297" name="DatagramSocket" >
     <UML:Operation comment="Create a DatagramSocket bound to a port on all local interfaces.
@param port Port number, 0&lt;=port&lt;=65535.  If zero, the system
       will select an available port number. To find out
       which port number was selected, use getLocalPort()." visibility="public" xmi.id="298" type="" name="DatagramSocket" >
      <UML:Parameter visibility="public" xmi.id="299" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation comment="Creates a datagram socket and binds it to a port on
at the specified local address." visibility="public" xmi.id="300" type="" name="DatagramSocket" >
      <UML:Parameter visibility="public" xmi.id="301" value="" type="int" name="port" />
      <UML:Parameter visibility="public" xmi.id="302" value="" type="const Inet4Address&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation comment="Creates a datagram socket and binds it to the specified
local address." visibility="public" xmi.id="303" type="" name="DatagramSocket" >
      <UML:Parameter visibility="public" xmi.id="304" value="" type="const Inet4SocketAddress&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="305" type="" name="~ DatagramSocket" />
     <UML:Operation visibility="public" xmi.id="306" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="307" type="void" name="setTimeout" >
      <UML:Parameter visibility="public" xmi.id="308" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="309" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="310" value="" type="const std::string&amp;" name="host" />
      <UML:Parameter visibility="public" xmi.id="311" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="312" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="313" value="" type="const Inet4Address&amp;" name="addr" />
      <UML:Parameter visibility="public" xmi.id="314" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="315" type="void" name="connect" >
      <UML:Parameter visibility="public" xmi.id="316" value="" type="const Inet4SocketAddress&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="317" type="int" name="getFd" />
     <UML:Operation visibility="public" xmi.id="318" type="void" name="receive" >
      <UML:Parameter visibility="public" xmi.id="319" value="" type="DatagramPacket&amp;" name="packet" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="320" type="void" name="send" >
      <UML:Parameter visibility="public" xmi.id="321" value="" type="const DatagramPacket&amp;" name="packet" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="322" type="size_t" name="recv" >
      <UML:Parameter visibility="public" xmi.id="323" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="324" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="325" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="326" type="size_t" name="recvfrom" >
      <UML:Parameter visibility="public" xmi.id="327" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="328" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="329" value="" type="int" name="flags" />
      <UML:Parameter visibility="public" xmi.id="330" value="" type="Inet4SocketAddress&amp;" name="from" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="331" type="size_t" name="send" >
      <UML:Parameter visibility="public" xmi.id="332" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="333" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="334" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="335" type="size_t" name="sendto" >
      <UML:Parameter visibility="public" xmi.id="336" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="337" value="" type="size_t" name="len" />
      <UML:Parameter visibility="public" xmi.id="338" value="" type="int" name="flags" />
      <UML:Parameter visibility="public" xmi.id="339" value="" type="const Inet4SocketAddress&amp;" name="to" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="340" type="Inet4Address" name="getLocalInet4Address" />
     <UML:Operation visibility="public" xmi.id="341" type="int" name="getLocalPort" />
     <UML:Operation visibility="public" xmi.id="342" type="Inet4SocketAddress" name="getLocalInet4SocketAddress" />
     <UML:Operation visibility="public" xmi.id="343" type="void" name="setReceiveBufferSize" >
      <UML:Parameter visibility="public" xmi.id="344" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="345" type="int" name="getReceiveBufferSize" />
     <UML:Operation visibility="public" xmi.id="346" type="void" name="setSendBufferSize" >
      <UML:Parameter visibility="public" xmi.id="347" value="" type="int" name="size" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="348" type="int" name="getSendBufferSize" />
     <UML:Operation visibility="public" xmi.id="349" type="std::vector&lt; Inet4Address >" name="getInterfaceAddresses" />
     <UML:Operation visibility="public" xmi.id="350" type="void" name="setBroadcastEnable" >
      <UML:Parameter visibility="public" xmi.id="351" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="352" type="bool" name="getBroadcastEnable" />
    </UML:Class>
    <UML:Class comment="A datagram socket to be used for multicasts.

This class provides the default public copy constructors and 
assignment operators.  Objects of this class can be copied and
assigned to without restriction.  However, because of this,
the destructor does not close the socket, so, in general, you
should make sure that the socket is closed once at some point.

Usage example:
\code
   // host A listens for multicasts to address 239.0.0.1, port 9000:
   MulticastSocket msock(9000);
   msock.joinGroup(Inet4Address::getByName(&quot;239.0.0.1&quot;));
   char buf[512];
   Inet4SocketAddress from;
   for (;;) {
       msock.recvfrom(buf,sizeof(buf),0,from);
       ...
   }

   // host B multicasts to address 239.0.0.1, port 9000:
   DatagramSocket msock;
   Inet4Address maddr = Inet4Address::getByName(&quot;239.0.0.1&quot;);
   Inet4SocketAddress msaddr = Inet4SocketAddress(maddr,9000);
   for (;;) {
       msock.sendto(&quot;hello\n&quot;,6,0,msaddr);
       ...
   }

   // host C also does similar multicasts, but uses MulticastSocket
   // methods to send packets out a specific interface, and
   // to set the time to live (TTL) parameter.
   MulticastSocket msock;
   msock.setInterface(Inet4Address::getByName(&quot;128.117.80.99&quot;));
   msock.setTimeToLive(2);	// go through one router
   Inet4Address maddr = Inet4Address::getByName(&quot;239.0.0.1&quot;);
   Inet4SocketAddress msaddr = Inet4SocketAddress(maddr,9000);
   for (;;) {
       msock.sendto(&quot;hello\n&quot;,6,0,msaddr);
       ...
   }
\endcode" visibility="public" xmi.id="354" name="MulticastSocket" >
     <UML:Operation visibility="public" xmi.id="356" type="" name="MulticastSocket" />
     <UML:Operation visibility="public" xmi.id="361" type="void" name="joinGroup" >
      <UML:Parameter visibility="public" xmi.id="362" value="" type="Inet4Address" name="groupAddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="363" type="void" name="joinGroup" >
      <UML:Parameter visibility="public" xmi.id="364" value="" type="Inet4Address" name="groupAddr" />
      <UML:Parameter visibility="public" xmi.id="365" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="366" type="void" name="leaveGroup" >
      <UML:Parameter visibility="public" xmi.id="367" value="" type="Inet4Address" name="groupAddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="368" type="void" name="leaveGroup" >
      <UML:Parameter visibility="public" xmi.id="369" value="" type="Inet4Address" name="groupAddr" />
      <UML:Parameter visibility="public" xmi.id="370" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="371" type="void" name="setTimeToLive" >
      <UML:Parameter visibility="public" xmi.id="372" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="373" type="int" name="getTimeToLive" />
     <UML:Operation visibility="public" xmi.id="374" type="void" name="setInterface" >
      <UML:Parameter visibility="public" xmi.id="375" value="" type="Inet4Address" name="maddr" />
      <UML:Parameter visibility="public" xmi.id="376" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="377" type="void" name="setInterface" >
      <UML:Parameter visibility="public" xmi.id="378" value="" type="Inet4Address" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="379" type="Inet4Address" name="getInterface" />
     <UML:Operation visibility="public" xmi.id="380" type="Inet4Address" name="findInterface" >
      <UML:Parameter visibility="public" xmi.id="381" value="" type="const Inet4Address&amp;" name="iaddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="382" type="void" name="setLoopbackEnable" >
      <UML:Parameter visibility="public" xmi.id="383" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="384" type="std::vector&lt; Inet4Address >" name="getInterfaceAddresses" />
     <UML:Operation visibility="public" xmi.id="662" type="void" name="send(datagram)" />
    </UML:Class>
    <UML:Class comment="A thread that does a listen on a socket port for connections.
ServiceClients add themselves to a ServiceListener, and
when the ServiceListener receives a connection on the
socket, ServiceListener clones the ServiceClient, and starts
the clone, passing it a reference to the connected socket.
This is a little multithreaded xinetd." visibility="public" xmi.id="427" name="ServiceListener" >
     <UML:Operation visibility="public" xmi.id="429" type="ServiceListener*" name="getServiceListener" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="430" value="" type="const Inet4SocketAddress&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="431" type="void" name="removeListener" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="432" value="" type="ServiceListener*" name="listener" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="433" type="" name="ServiceListener" >
      <UML:Parameter visibility="public" xmi.id="434" value="" type="const Inet4SocketAddress&amp;" name="addr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="435" type="" name="~ ServiceListener" />
     <UML:Operation comment="Scan my list of started clients, and join any that aren't running." visibility="public" xmi.id="436" type="void" name="checkClients" />
     <UML:Operation visibility="public" xmi.id="437" type="int" name="join" />
     <UML:Operation visibility="public" xmi.id="438" type="void" name="cancel" />
     <UML:Operation visibility="public" xmi.id="439" type="void" name="interrupt" />
     <UML:Operation visibility="public" xmi.id="440" type="void" name="kill" >
      <UML:Parameter visibility="public" xmi.id="441" value="" type="int" name="sig" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="442" type="void" name="addClient" >
      <UML:Parameter visibility="public" xmi.id="443" value="" type="ServiceListenerClient*" name="clnt" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="444" value="" type="Mutex" name="svcmap_mutex" ownerScope="classifier" />
     <UML:Attribute visibility="protected" xmi.id="445" value="" type="std::map&lt; Inet4SocketAddress, ServiceListener * >" name="svcmap" ownerScope="classifier" />
     <UML:Attribute visibility="protected" xmi.id="446" value="" type="Inet4SocketAddress" name="sockaddr" />
     <UML:Attribute visibility="protected" xmi.id="447" value="" type="Mutex" name="clnt_mutex" />
     <UML:Attribute comment="Map of ServiceListenerClients by its service type.
The type notion is only of use to an McastServiceListerer." visibility="protected" xmi.id="448" value="" type="std::map&lt; int, ServiceListenerClient * >" name="clntmap" />
     <UML:Attribute visibility="protected" xmi.id="449" value="" type="std::list&lt; ServiceListenerClient * >" name="startedClients" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="450" name="ServiceListenerClient" >
     <UML:Operation visibility="public" xmi.id="452" type="" name="ServiceListenerClient" >
      <UML:Parameter visibility="public" xmi.id="453" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="454" type="" name="ServiceListenerClient" />
     <UML:Operation visibility="public" xmi.id="455" type="void" name="setListenSocketAddress" >
      <UML:Parameter visibility="public" xmi.id="456" value="" type="Inet4SocketAddress" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="457" type="Inet4SocketAddress" name="getListenSocketAddress" />
     <UML:Operation visibility="public" xmi.id="458" type="ServiceListenerClient*" isAbstract="true" name="clone" />
     <UML:Operation comment="When the ServiceListener has accepted a connection
on a socket, it will make a clone of a client,
and call this start method. The default implementation
sets the value of the socket member, and calls Thread::start." visibility="public" xmi.id="459" type="void" name="start" >
      <UML:Parameter visibility="public" xmi.id="460" value="" type="Socket&amp;" name="sock" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="461" type="int" name="getType" />
     <UML:Operation visibility="public" xmi.id="462" type="ServiceListener*" name="getServiceListener" />
     <UML:Attribute visibility="protected" xmi.id="463" value="" type="Inet4SocketAddress" name="listenSocketAddress" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="465" name="McastServiceListener" >
     <UML:Operation visibility="public" xmi.id="467" type="" name="McastServiceListener" >
      <UML:Parameter visibility="public" xmi.id="468" value="" type="const Inet4SocketAddress&amp;" name="saddr" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="469" type="" name="~ McastServiceListener" />
     <UML:Operation visibility="public" xmi.id="470" type="int" name="run" />
     <UML:Operation visibility="public" xmi.id="502" type="DatagramPacket" name="Datagram::send" />
    </UML:Class>
    <UML:Class comment="Thread whose run method patiently multicasts ServiceRequestDatagrams
until it is canceled." visibility="public" xmi.id="1924" name="McastServiceRequestor" >
     <UML:Operation visibility="public" xmi.id="1925" type="" name="McastServiceRequestor" >
      <UML:Parameter visibility="public" xmi.id="1926" value="" type="short int" name="listenPort" />
      <UML:Parameter visibility="public" xmi.id="1927" value="" type="int" name="serviceId" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1928" type="" name="~ McastServiceRequestor" />
     <UML:Operation visibility="public" xmi.id="1929" type="void" name="setSocketAddress" >
      <UML:Parameter visibility="public" xmi.id="1930" value="" type="const Inet4SocketAddress&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1931" type="int" name="run" />
     <UML:Attribute visibility="protected" xmi.id="1932" value="" type="MulticastSocket" name="msock" />
     <UML:Attribute visibility="protected" xmi.id="1933" value="" type="Inet4SocketAddress" name="mcastAddr" />
     <UML:Attribute visibility="protected" xmi.id="1934" value="" type="short int" name="listenPort" />
     <UML:Attribute visibility="protected" xmi.id="1935" value="" type="int" name="serviceId" />
    </UML:Class>
    <UML:Class comment="Abstract base class for a UDP datagram.  Patterned after java.net.DatagramPacket." visibility="public" xmi.id="1951" name="DatagramPacketBase" >
     <UML:Operation visibility="public" xmi.id="1952" type="" name="DatagramPacketBase" >
      <UML:Parameter visibility="public" xmi.id="1953" value="" type="int" name="length" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1954" type="" name="DatagramPacketBase" >
      <UML:Parameter visibility="public" xmi.id="1955" value="" type="int" name="length" />
      <UML:Parameter visibility="public" xmi.id="1956" value="" type="Inet4Address" name="add" />
      <UML:Parameter visibility="public" xmi.id="1957" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1958" type="" name="DatagramPacketBase" >
      <UML:Parameter visibility="public" xmi.id="1959" value="" type="int" name="length" />
      <UML:Parameter visibility="public" xmi.id="1960" value="" type="Inet4SocketAddress" name="add" />
     </UML:Operation>
     <UML:Operation comment="Copying OK." visibility="public" xmi.id="1961" type="" name="DatagramPacketBase" >
      <UML:Parameter visibility="public" xmi.id="1962" value="" type="const DatagramPacketBase&amp;" name="x" />
     </UML:Operation>
     <UML:Operation comment="Assignment OK." visibility="public" xmi.id="1963" type="DatagramPacketBase&amp;" name="operator =" >
      <UML:Parameter visibility="public" xmi.id="1964" value="" type="const DatagramPacketBase&amp;" name="rhs" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1965" type="Inet4SocketAddress" name="getSocketAddress" />
     <UML:Operation visibility="public" xmi.id="1966" type="void" name="setSocketAddress" >
      <UML:Parameter visibility="public" xmi.id="1967" value="" type="Inet4SocketAddress" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1968" type="struct sockaddr_in*" name="getSockAddrPtr" />
     <UML:Operation visibility="public" xmi.id="1969" type="struct const sockaddr_in*" name="getConstSockAddrPtr" />
     <UML:Operation visibility="public" xmi.id="1970" type="Inet4Address" name="getAddress" />
     <UML:Operation visibility="public" xmi.id="1971" type="void" name="setAddress" >
      <UML:Parameter visibility="public" xmi.id="1972" value="" type="Inet4Address" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1973" type="int" name="getPort" />
     <UML:Operation visibility="public" xmi.id="1974" type="void" name="setPort" >
      <UML:Parameter visibility="public" xmi.id="1975" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation comment="Get the pointer to the data portion of the packet." visibility="public" xmi.id="1976" type="void*" isAbstract="true" name="getDataVoidPtr" />
     <UML:Operation visibility="public" xmi.id="1977" type="const void*" isAbstract="true" name="getConstDataVoidPtr" />
     <UML:Operation visibility="public" xmi.id="1978" type="void" name="setLength" >
      <UML:Parameter visibility="public" xmi.id="1979" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1980" type="int" name="getLength" />
     <UML:Operation visibility="public" xmi.id="1981" type="void" name="setMaxLength" >
      <UML:Parameter visibility="public" xmi.id="1982" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1983" type="int" name="getMaxLength" />
     <UML:Attribute comment="allocated length in bytes of contents." visibility="protected" xmi.id="1984" value="" type="int" name="maxlength" />
     <UML:Attribute comment="length of datagram that was read or will be sent. Must be
&lt;= maxlength." visibility="protected" xmi.id="1985" value="" type="int" name="length" />
     <UML:Attribute comment="The destination address for a send, or the remote senders
address after a receive." visibility="protected" xmi.id="1986" value="" type="Inet4SocketAddress" name="addr" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="1987" name="DatagramPacketT" >
     <UML:Operation visibility="public" xmi.id="1989" type="" name="DatagramPacketT" >
      <UML:Parameter visibility="public" xmi.id="1990" value="" type="DataT*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="1991" value="" type="int" name="n" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1992" type="" name="DatagramPacketT" >
      <UML:Parameter visibility="public" xmi.id="1993" value="" type="DataT*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="1994" value="" type="int" name="n" />
      <UML:Parameter visibility="public" xmi.id="1995" value="" type="Inet4Address" name="add" />
      <UML:Parameter visibility="public" xmi.id="1996" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1997" type="" name="DatagramPacketT" >
      <UML:Parameter visibility="public" xmi.id="1998" value="" type="DataT*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="1999" value="" type="int" name="n" />
      <UML:Parameter visibility="public" xmi.id="2000" value="" type="Inet4SocketAddress" name="add" />
     </UML:Operation>
     <UML:Operation comment="Copying OK." visibility="public" xmi.id="2001" type="" name="DatagramPacketT" >
      <UML:Parameter visibility="public" xmi.id="2002" value="" type="const DatagramPacketT&amp;" name="x" />
     </UML:Operation>
     <UML:Operation comment="Assignment OK." visibility="public" xmi.id="2003" type="DatagramPacketT&amp;" name="operator =" >
      <UML:Parameter visibility="public" xmi.id="2004" value="" type="const DatagramPacketT&amp;" name="rhs" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2005" type="void*" name="getDataVoidPtr" />
     <UML:Operation visibility="public" xmi.id="2006" type="const void*" name="getConstDataVoidPtr" />
     <UML:Operation visibility="public" xmi.id="2007" type="DataT*" name="getData" />
     <UML:Operation visibility="public" xmi.id="2008" type="void" name="setData" >
      <UML:Parameter visibility="public" xmi.id="2009" value="" type="DataT*" name="val" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="2010" value="" type="DataT*" name="data" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="2011" name="DatagramPacket" >
     <UML:Operation visibility="public" xmi.id="2012" type="" name="DatagramPacket" >
      <UML:Parameter visibility="public" xmi.id="2013" value="" type="char*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="2014" value="" type="int" name="length" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2015" type="" name="DatagramPacket" >
      <UML:Parameter visibility="public" xmi.id="2016" value="" type="char*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="2017" value="" type="int" name="length" />
      <UML:Parameter visibility="public" xmi.id="2018" value="" type="Inet4Address" name="add" />
      <UML:Parameter visibility="public" xmi.id="2019" value="" type="int" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2020" type="" name="DatagramPacket" >
      <UML:Parameter visibility="public" xmi.id="2021" value="" type="char*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="2022" value="" type="int" name="length" />
      <UML:Parameter visibility="public" xmi.id="2023" value="" type="Inet4SocketAddress" name="add" />
     </UML:Operation>
    </UML:Class>
    <UML:Class visibility="public" xmi.id="2024" name="ServiceRequestData" >
     <UML:Attribute comment="Service id of request. Server and client must agree on these values.
Stored in &quot;network&quot;, big-endian order." visibility="public" xmi.id="2025" value="" type="int" name="serviceId" />
     <UML:Attribute comment="TCP stream socket port that the client is listening on
for the service connection.
Stored in &quot;network&quot;, big-endian order." visibility="public" xmi.id="2026" value="" type="unsigned short" name="listenPort" />
     <UML:Attribute comment="How many multicasts has it sent.
Stored in &quot;network&quot;, big-endian order." visibility="public" xmi.id="2027" value="" type="int" name="numMulticasts" />
    </UML:Class>
    <UML:Class comment="Datagram that is multicast by a host when it wants a service." visibility="public" xmi.id="2028" name="ServiceRequestDatagram" >
     <UML:Operation visibility="public" xmi.id="2029" type="" name="ServiceRequestDatagram" >
      <UML:Parameter visibility="public" xmi.id="2030" value="" type="int" name="serviceId" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2031" type="" name="ServiceRequestDatagram" >
      <UML:Parameter visibility="public" xmi.id="2032" value="" type="const ServiceRequestDatagram&amp;" name="x" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2033" type="ServiceRequestDatagram&amp;" name="operator =" >
      <UML:Parameter visibility="public" xmi.id="2034" value="" type="const ServiceRequestDatagram&amp;" name="rhs" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2035" type="int" name="getServiceId" />
     <UML:Operation visibility="public" xmi.id="2036" type="void" name="setServiceId" >
      <UML:Parameter visibility="public" xmi.id="2037" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2038" type="int" name="getRequestorListenPort" />
     <UML:Operation visibility="public" xmi.id="2039" type="void" name="setRequestorListenPort" >
      <UML:Parameter visibility="public" xmi.id="2040" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2041" type="int" name="getNumMulticasts" />
     <UML:Operation visibility="public" xmi.id="2042" type="void" name="setNumMulticasts" >
      <UML:Parameter visibility="public" xmi.id="2043" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="2044" value="" type="struct ServiceRequestData" name="srdata" />
    </UML:Class>
   </UML:Package>
   <UML:Package visibility="public" xmi.id="484" name="dsm" >
    <UML:Class comment="Thread whose run method patiently multicasts ConfigDatagrams
until it is canceled." visibility="public" xmi.id="485" name="Thread" >
     <UML:Operation visibility="public" xmi.id="487" type="" name="ConfigRequestor" >
      <UML:Parameter visibility="public" xmi.id="488" value="" type="int" name="listenPort" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="489" type="" name="~ ConfigRequestor" />
     <UML:Operation visibility="public" xmi.id="490" type="int" name="run" />
     <UML:Operation visibility="public" xmi.id="663" type="void" name="ConfigRequestor(listenPort)" />
     <UML:Attribute visibility="protected" xmi.id="492" value="" type="int" name="lport" />
    </UML:Class>
    <UML:Class stereotype="24" visibility="public" xmi.id="503" name="datagramType_t" />
    <UML:Class visibility="public" xmi.id="504" name="XMLConfigRequestDatagram" >
     <UML:Operation visibility="public" xmi.id="505" type="" name="XMLConfigRequestDatagram" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="506" name="RawSampleRequestDatagram" >
     <UML:Operation visibility="public" xmi.id="507" type="" name="RawSampleRequestDatagram" />
    </UML:Class>
    <UML:Class comment="Data Service Module, a class that drives an ADS3 data collection
box." visibility="public" xmi.id="528" name="a Service Requestor" >
     <UML:Operation comment="Entry point to run a DSMEngine process from a command line." visibility="public" xmi.id="529" type="int" name="main" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="530" value="" type="int" name="argc" />
      <UML:Parameter visibility="public" xmi.id="531" value="" type="char**" name="argv" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="532" type="DSMEngine*" name="getInstance" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="533" type="xercesc::DOMDocument*" name="requestXMLConfig" />
     <UML:Operation visibility="public" xmi.id="534" type="xercesc::DOMDocument*" name="parseXMLConfigFile" >
      <UML:Parameter visibility="public" xmi.id="535" value="" type="const std::string&amp;" name="xmlFileName" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="536" type="void" name="initialize" >
      <UML:Parameter visibility="public" xmi.id="537" value="" type="xercesc::DOMDocument*" name="projectDoc" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="538" type="void" name="startSensors" />
     <UML:Operation visibility="public" xmi.id="539" type="void" name="wait" />
     <UML:Operation visibility="public" xmi.id="540" type="void" name="interrupt" />
     <UML:Operation comment="Use this static method, rather than the public constructor,
to create an instance of a DSMEngine which will receive signals
sent to a process." visibility="protected" xmi.id="541" type="DSMEngine*" name="createInstance" ownerScope="classifier" />
     <UML:Operation visibility="protected" xmi.id="543" type="void" name="setupSignals" ownerScope="classifier" />
     <UML:Operation visibility="protected" xmi.id="544" type="void" name="sigAction" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="545" value="" type="int" name="sig" />
      <UML:Parameter visibility="public" xmi.id="546" value="" type="siginfo_t*" name="siginfo" />
      <UML:Parameter visibility="public" xmi.id="547" value="" type="void*" name="vptr" />
     </UML:Operation>
     <UML:Operation comment="Constructor." visibility="protected" xmi.id="548" type="" name="DSMEngine" />
     <UML:Operation visibility="protected" xmi.id="549" type="" name="~ DSMEngine" />
     <UML:Attribute visibility="protected" xmi.id="551" value="" type="Project*" name="project" />
     <UML:Attribute visibility="protected" xmi.id="552" value="" type="Aircraft*" name="aircraft" />
     <UML:Attribute visibility="protected" xmi.id="553" value="" type="DSMConfig*" name="dsmConfig" />
     <UML:Attribute visibility="protected" xmi.id="554" value="" type="PortSelector*" name="handler" />
    </UML:Class>
    <UML:Class comment="Parse the DSM program runstring." visibility="public" xmi.id="555" name="DSMRunstring" >
     <UML:Operation visibility="public" xmi.id="556" type="" name="DSMRunstring" >
      <UML:Parameter visibility="public" xmi.id="557" value="" type="int" name="argc" />
      <UML:Parameter visibility="public" xmi.id="558" value="" type="char**" name="argv" />
     </UML:Operation>
     <UML:Operation comment="Send usage message to cerr, then exit(1)." visibility="public" xmi.id="559" type="void" name="usage" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="560" value="" type="const char*" name="argv0" />
     </UML:Operation>
     <UML:Attribute comment="-d option. If user wants messages on stderr rather than syslog." visibility="public" xmi.id="561" value="" type="bool" name="debug" />
     <UML:Attribute comment="Name of XML configuration file. If empty, multicast for config." visibility="public" xmi.id="562" value="" type="std::string" name="configFile" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="603" name="XMLImplementation" >
     <UML:Operation visibility="public" xmi.id="604" type="xercesc::DOMImplementation*" name="getImplementation" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="605" type="void" name="terminate" ownerScope="classifier" />
     <UML:Attribute visibility="private" xmi.id="606" value="" type="xercesc::DOMImplementation*" name="impl" ownerScope="classifier" />
     <UML:Attribute visibility="private" xmi.id="607" value="" type="atdUtil::Mutex" name="lock" ownerScope="classifier" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="608" name="XMLErrorHandler" >
     <UML:Operation visibility="public" xmi.id="609" type="" name="XMLErrorHandler" />
     <UML:Operation visibility="public" xmi.id="610" type="" name="~ XMLErrorHandler" />
     <UML:Operation visibility="public" xmi.id="611" type="bool" name="handleError" >
      <UML:Parameter visibility="public" xmi.id="612" value="" type="const xercesc::DOMError&amp;" name="domError" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="613" type="void" name="resetErrors" />
     <UML:Operation visibility="private" xmi.id="614" type="" name="XMLErrorHandler" >
      <UML:Parameter visibility="public" xmi.id="615" value="" type="const XMLErrorHandler&amp;" />
     </UML:Operation>
     <UML:Operation visibility="private" xmi.id="616" type="void" name="operator =" >
      <UML:Parameter visibility="public" xmi.id="617" value="" type="const XMLErrorHandler&amp;" />
     </UML:Operation>
    </UML:Class>
    <UML:Class comment="Wrapper class around xerces-c DOMBuilder to parse XML." visibility="public" xmi.id="618" name="XMLParser" >
     <UML:Operation visibility="public" xmi.id="619" type="" name="XMLParser" />
     <UML:Operation comment="Nuke the parser. This does a release() (delete) of the
associated DOMBuilder." visibility="public" xmi.id="620" type="" name="~ XMLParser" />
     <UML:Operation comment="DOMBuilder::setFilter is not yet implemented in xerces c++ 2.6.0 
void setFilter(DOMBuilderFilter* filter)
//**
Enable/disable validation.
See /link
http://xml.apache.org/xerces-c/program-dom.html#DOMBuilderFeatures
@param val Boolean value specifying whether to report all
  validation errors.
  Default: false." visibility="public" xmi.id="621" type="void" name="setDOMValidation" >
      <UML:Parameter visibility="public" xmi.id="622" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Enable/disable schema validation.
See /link
http://xml.apache.org/xerces-c/program-dom.html#DOMBuilderFeatures
@param val If true the parser will validate the
 document only if a grammar is specified.
  If false validation is determined by the state of the
  validation feature, see setDOMValidation().  
  Default: false." visibility="public" xmi.id="623" type="void" name="setDOMValidateIfSchema" >
      <UML:Parameter visibility="public" xmi.id="624" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Enable/disable namespace processing.
See /link
http://xml.apache.org/xerces-c/program-dom.html#DOMBuilderFeatures
@param val If true perform namespace processing.
  Default: false." visibility="public" xmi.id="625" type="void" name="setDOMNamespaces" >
      <UML:Parameter visibility="public" xmi.id="626" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Enable/disable schema support.
See /link
http://xml.apache.org/xerces-c/program-dom.html#DOMBuilderFeatures
@param val If true enable the parser's schema support. 
  Default: false." visibility="public" xmi.id="627" type="void" name="setXercesSchema" >
      <UML:Parameter visibility="public" xmi.id="628" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Enable/disable full schema constraint checking,
including checking which may be time-consuming or
memory intensive. Currently, particle unique
attribution constraint checking and particle derivation
restriction checking are controlled by this option.  
See /link
http://xml.apache.org/xerces-c/program-dom.html#DOMBuilderFeatures
@param val If true enable schema constraint checking.
  Default: false." visibility="public" xmi.id="629" type="void" name="setXercesSchemaFullChecking" >
      <UML:Parameter visibility="public" xmi.id="630" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Enable/disable datatype normalization.
See /link
http://xml.apache.org/xerces-c/program-dom.html#DOMBuilderFeatures
@param val If true let the validation process do its datatype
   normalization that is defined in the used schema language.
   If false disable datatype normalization. The XML 1.0 attribute
   value normalization always occurs though.  
  Default: false." visibility="public" xmi.id="631" type="void" name="setDOMDatatypeNormalization" >
      <UML:Parameter visibility="public" xmi.id="632" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation comment="Control who owns DOMDocument pointer.
See /link
http://xml.apache.org/xerces-c/program-dom.html#DOMBuilderFeatures
@param val If true the caller will adopt the DOMDocument that
    is returned from the parse method and thus is responsible
    to call DOMDocument::release() to release the associated memory.
    The parser will not release it. The ownership is transferred
    from the parser to the caller.
    If false the returned DOMDocument from the parse method is
    owned by the parser and thus will be deleted when the parser
    is released." visibility="public" xmi.id="633" type="void" name="setXercesUserAdoptsDOMDocument" >
      <UML:Parameter visibility="public" xmi.id="634" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="635" type="xercesc::DOMDocument*" name="parse" >
      <UML:Parameter visibility="public" xmi.id="636" value="" type="const std::string&amp;" name="xmlFile" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="637" type="xercesc::DOMDocument*" name="parse" >
      <UML:Parameter visibility="public" xmi.id="638" value="" type="xercesc::InputSource&amp;" name="source" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="639" value="" type="xercesc::DOMImplementation*" name="impl" />
     <UML:Attribute visibility="protected" xmi.id="640" value="" type="xercesc::DOMBuilder*" name="parser" />
    </UML:Class>
    <UML:Class comment="Derived class of XMLParser that keeps its DOMDocuments
when parsing an XML disk file, and returns the cached
DOMDocument if the file hasn't changed." visibility="public" xmi.id="642" name="XMLCachingParser" >
     <UML:Operation visibility="public" xmi.id="644" type="XMLCachingParser*" name="getInstance" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="645" type="void" name="destroyInstance" ownerScope="classifier" />
     <UML:Operation comment="Parse from a file. This will return the DOMDocument
pointer of the a previous parse result if the file has
not been modified since the last time it was
parsed." visibility="public" xmi.id="646" type="xercesc::DOMDocument*" name="parse" >
      <UML:Parameter visibility="public" xmi.id="647" value="" type="const std::string&amp;" name="xmlFile" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="648" type="xercesc::DOMDocument*" name="parse" >
      <UML:Parameter visibility="public" xmi.id="649" value="" type="xercesc::InputSource&amp;" name="source" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="650" type="time_t" name="getFileModTime" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="651" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="652" type="" name="XMLCachingParser" />
     <UML:Operation visibility="protected" xmi.id="653" type="" name="~ XMLCachingParser" />
     <UML:Attribute visibility="protected" xmi.id="655" value="" type="atdUtil::Mutex" name="instanceLock" ownerScope="classifier" />
     <UML:Attribute visibility="protected" xmi.id="656" value="" type="std::map&lt; std :: string, time_t >" name="modTimeCache" />
     <UML:Attribute visibility="protected" xmi.id="657" value="" type="std::map&lt; std :: string, xercesc :: DOMDocument * >" name="docCache" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="713" name="XMLConfigService" >
     <UML:Operation visibility="public" xmi.id="714" type="" name="XMLConfigService" />
     <UML:Operation visibility="public" xmi.id="715" type="int" name="run" />
     <UML:Operation comment="Make a clone of myself. The ServiceListener will make
a clone of this service when it gets a request on a port." visibility="public" xmi.id="716" type="atdUtil::ServiceListenerClient*" name="clone" />
     <UML:Operation visibility="public" xmi.id="717" type="int" name="getType" />
     <UML:Operation visibility="public" xmi.id="718" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="719" value="" type="const xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="720" type="void" name="fromDOMElementOutput" >
      <UML:Parameter visibility="public" xmi.id="721" value="" type="const xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="722" type="xercesc::DOMElement*" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="723" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="724" type="xercesc::DOMElement*" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="725" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
    </UML:Class>
    <UML:Class comment="A provider of services to a DSM." visibility="public" xmi.id="726" name="DSMServer" >
     <UML:Operation comment="Run a server from the unix command line." visibility="public" xmi.id="727" type="int" name="main" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="728" value="" type="int" name="argc" />
      <UML:Parameter visibility="public" xmi.id="729" value="" type="char**" name="argv" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="730" type="const std::string&amp;" name="getXMLFileName" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="731" type="void" name="setXMLFileName" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="732" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="733" type="void" name="setQuit" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="734" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="735" type="void" name="setRestart" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="736" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="737" type="void" name="setupSignals" ownerScope="classifier" />
     <UML:Operation visibility="protected" xmi.id="738" type="void" name="sigAction" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="739" value="" type="int" name="sig" />
      <UML:Parameter visibility="public" xmi.id="740" value="" type="siginfo_t*" name="siginfo" />
      <UML:Parameter visibility="public" xmi.id="741" value="" type="void*" name="vptr" />
     </UML:Operation>
     <UML:Operation comment="Parse an XMLConfigFile. This is a static method called
from main(), that is when a server is actually run." visibility="protected" xmi.id="742" type="Project*" name="parseXMLConfigFile" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="743" type="" name="~ DSMServer" />
     <UML:Operation visibility="public" xmi.id="744" type="const std::string&amp;" name="getName" />
     <UML:Operation visibility="public" xmi.id="745" type="void" name="setName" >
      <UML:Parameter visibility="public" xmi.id="746" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="747" type="void" name="addService" >
      <UML:Parameter visibility="public" xmi.id="748" value="" type="DSMService*" name="service" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="749" type="const std::list&lt; DSMService * >&amp;" name="getServices" />
     <UML:Operation visibility="public" xmi.id="750" type="void" name="startServices" />
     <UML:Operation visibility="public" xmi.id="751" type="void" name="wait" />
     <UML:Operation visibility="public" xmi.id="752" type="void" name="join" />
     <UML:Operation visibility="public" xmi.id="753" type="void" name="cancel" />
     <UML:Operation visibility="public" xmi.id="754" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="755" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="756" type="xercesc::DOMElement*" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="757" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="758" type="xercesc::DOMElement*" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="759" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="760" value="" type="std::string" name="xmlFileName" ownerScope="classifier" />
     <UML:Attribute visibility="protected" xmi.id="761" value="" type="bool" name="quit" ownerScope="classifier" />
     <UML:Attribute visibility="protected" xmi.id="762" value="" type="bool" name="restart" ownerScope="classifier" />
     <UML:Attribute comment="Name of this server. This should correspond to a hostname
of a machine." visibility="protected" xmi.id="763" value="" type="std::string" name="name" />
     <UML:Attribute visibility="protected" xmi.id="764" value="" type="std::list&lt; DSMService * >" name="services" />
     <UML:Attribute visibility="protected" xmi.id="765" value="" type="std::set&lt; atdUtil :: ServiceListener * >" name="serviceListeners" />
    </UML:Class>
    <UML:Class comment="Class for parse the server program runstring." visibility="public" xmi.id="766" name="DSMServerRunstring" >
     <UML:Operation visibility="public" xmi.id="767" type="" name="DSMServerRunstring" >
      <UML:Parameter visibility="public" xmi.id="768" value="" type="int" name="argc" />
      <UML:Parameter visibility="public" xmi.id="769" value="" type="char**" name="argv" />
     </UML:Operation>
     <UML:Operation comment="Send usage message to cerr, then exit(1)." visibility="public" xmi.id="770" type="void" name="usage" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="771" value="" type="const char*" name="argv0" />
     </UML:Operation>
     <UML:Attribute comment="-d option. If user wants messages on stderr rather than syslog." visibility="public" xmi.id="772" value="" type="bool" name="debug" />
     <UML:Attribute comment="Name of XML configuration file. Required." visibility="public" xmi.id="773" value="" type="std::string" name="configFile" />
    </UML:Class>
    <UML:Class comment="Base class for a service, as built from a &lt;service> XML tag.
A service run() method should do a
::kill(0,SIGUSR1);
just before exiting, to give the server a timely notice
that the thread is finished." visibility="public" xmi.id="774" name="DSMService" >
     <UML:Operation visibility="public" xmi.id="776" type="" name="DSMService" >
      <UML:Parameter visibility="public" xmi.id="777" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="778" type="" name="~ DSMService" />
    </UML:Class>
    <UML:Class comment="Implemenation of xercesc::InputSource, that returns an XMLFdBinInputStream
for reading from a Unix file descriptor - i.e. an opened socket
for example." visibility="public" xmi.id="931" name="XMLFdInputSource" >
     <UML:Operation visibility="public" xmi.id="932" type="" name="XMLFdInputSource" >
      <UML:Parameter visibility="public" xmi.id="933" value="" type="const std::string&amp;" name="n" />
      <UML:Parameter visibility="public" xmi.id="934" value="" type="int" name="f" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="935" type="" name="~ XMLFdInputSource" />
     <UML:Operation visibility="public" xmi.id="936" type="xercesc::BinInputStream*" name="makeStream" />
     <UML:Attribute visibility="protected" xmi.id="937" value="" type="std::string" name="name" />
     <UML:Attribute visibility="protected" xmi.id="938" value="" type="int" name="fd" />
    </UML:Class>
    <UML:Class comment="PortSelector implements a DSMSensor event loop. It does a
select() system call on the file descriptors of one or more
DSMSensors, and calls their readSample methods when data is
available to be read.  The select() loop is implemented in
the Thread::run method of the PortSelector.

select also detects connections to RemoteSerialListener.
Once is socket connection is established for a given sensor, then
data is then passed back and forth between the socket
connection and the DSMSensor.  This path is separate
from the normal Sample data path.  It allows remote
direct control of serial sensors." visibility="public" xmi.id="1377" name="PortSelector" >
     <UML:Operation visibility="public" xmi.id="1379" type="" name="PortSelector" />
     <UML:Operation visibility="public" xmi.id="1380" type="" name="~ PortSelector" />
     <UML:Operation visibility="public" xmi.id="1381" type="void" name="addSensorPort" >
      <UML:Parameter visibility="public" xmi.id="1382" value="" type="DSMSensor*" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1383" type="void" name="closeSensorPort" >
      <UML:Parameter visibility="public" xmi.id="1384" value="" type="DSMSensor*" name="port" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1385" type="void" name="addRemoteSerialConnection" >
      <UML:Parameter visibility="public" xmi.id="1386" value="" type="RemoteSerialConnection*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1387" type="void" name="removeRemoteSerialConnection" >
      <UML:Parameter visibility="public" xmi.id="1388" value="" type="RemoteSerialConnection*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1389" type="void" name="setTimeoutMsec" >
      <UML:Parameter visibility="public" xmi.id="1390" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1391" type="int" name="getTimeoutMsec" />
     <UML:Operation visibility="public" xmi.id="1392" type="void" name="setTimeoutWarningMsec" >
      <UML:Parameter visibility="public" xmi.id="1393" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1394" type="int" name="getTimeoutWarningMsec" />
     <UML:Operation visibility="public" xmi.id="1395" type="void" name="calcStatistics" >
      <UML:Parameter visibility="public" xmi.id="1396" value="" type="dsm_sys_time_t" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1397" type="void" name="setStatisticsPeriodInSecs" >
      <UML:Parameter visibility="public" xmi.id="1398" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1399" type="int" name="getStatisticsPeriodInSecs" />
     <UML:Operation visibility="public" xmi.id="1400" type="int" name="getSelectErrors" />
     <UML:Operation visibility="public" xmi.id="1401" type="int" name="getRemoteSerialListenErrors" />
     <UML:Operation visibility="public" xmi.id="1402" type="void" name="handleRemoteSerial" >
      <UML:Parameter visibility="public" xmi.id="1403" value="" type="int" name="fd" />
      <UML:Parameter visibility="public" xmi.id="1404" value="" type="DSMSensor*" name="port" />
     </UML:Operation>
     <UML:Operation comment="Thread function." visibility="public" xmi.id="1405" type="int" name="run" />
     <UML:Operation visibility="protected" xmi.id="1406" type="void" name="handleChangedPorts" />
     <UML:Attribute visibility="protected" xmi.id="1407" value="" type="atdUtil::Mutex" name="portsMutex" />
     <UML:Attribute visibility="protected" xmi.id="1408" value="" type="std::vector&lt; int >" name="pendingSensorPortFds" />
     <UML:Attribute visibility="protected" xmi.id="1409" value="" type="std::vector&lt; DSMSensor * >" name="pendingSensorPorts" />
     <UML:Attribute visibility="protected" xmi.id="1410" value="" type="std::vector&lt; DSMSensor * >" name="pendingSensorPortClosures" />
     <UML:Attribute visibility="protected" xmi.id="1411" value="" type="std::vector&lt; int >" name="activeSensorPortFds" />
     <UML:Attribute visibility="protected" xmi.id="1412" value="" type="std::vector&lt; DSMSensor * >" name="activeSensorPorts" />
     <UML:Attribute visibility="protected" xmi.id="1413" value="" type="atdUtil::Mutex" name="rserialConnsMutex" />
     <UML:Attribute visibility="protected" xmi.id="1414" value="" type="std::vector&lt; RemoteSerialConnection * >" name="pendingRserialConns" />
     <UML:Attribute visibility="protected" xmi.id="1415" value="" type="std::vector&lt; RemoteSerialConnection * >" name="pendingRserialClosures" />
     <UML:Attribute visibility="protected" xmi.id="1416" value="" type="std::vector&lt; RemoteSerialConnection * >" name="activeRserialConns" />
     <UML:Attribute visibility="protected" xmi.id="1417" value="" type="bool" name="portsChanged" />
     <UML:Attribute visibility="protected" xmi.id="1418" value="" type="bool" name="rserialConnsChanged" />
     <UML:Attribute visibility="protected" xmi.id="1419" value="" type="struct timeval" name="tval" />
     <UML:Attribute visibility="protected" xmi.id="1420" value="" type="fd_set" name="readfdset" />
     <UML:Attribute visibility="protected" xmi.id="1421" value="" type="int" name="selectn" />
     <UML:Attribute visibility="protected" xmi.id="1422" value="" type="RemoteSerialListener" name="rserial" />
     <UML:Attribute visibility="protected" xmi.id="1423" value="" type="int" name="selectErrors" />
     <UML:Attribute visibility="protected" xmi.id="1424" value="" type="int" name="rserialListenErrors" />
     <UML:Attribute visibility="protected" xmi.id="1425" value="" type="size_t" name="timeoutMsec" />
     <UML:Attribute visibility="protected" xmi.id="1426" value="" type="size_t" name="timeoutSec" />
     <UML:Attribute visibility="protected" xmi.id="1427" value="" type="size_t" name="timeoutUsec" />
     <UML:Attribute visibility="protected" xmi.id="1428" value="" type="size_t" name="timeoutWarningMsec" />
     <UML:Attribute visibility="protected" xmi.id="1429" value="" type="dsm_sys_time_t" name="statisticsTime" />
     <UML:Attribute visibility="protected" xmi.id="1430" value="" type="unsigned long" name="statisticsPeriod" />
    </UML:Class>
    <UML:Class comment="A RealTime Linux implementation of a DSMSensor.  We try to provide
a simple interface to the user, hiding the details of the
half-duplex RT-Linux FIFOs that are used to read/write and
perform ioctls with the device." visibility="public" xmi.id="1507" name="RTL_DSMSensor" >
     <UML:Operation comment="Create a sensor, giving its device name.  No IO (open/read/write/ioctl)
operations to the sensor are performed in the constructor." visibility="public" xmi.id="1509" type="" name="RTL_DSMSensor" >
      <UML:Parameter visibility="public" xmi.id="1510" value="" type="const std::string&amp;" name="devname" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1511" type="" name="RTL_DSMSensor" />
     <UML:Operation visibility="public" xmi.id="1512" type="" name="~ RTL_DSMSensor" />
     <UML:Operation comment="Constructor for a sensor.
@val devname The device name.
Since we have to generate 4 FIFO names
from this devname, the devname should follow this convention:
&lt;ul>
&lt;li>&quot;/dev/&quot;
&lt;li>followed by a name prefix consisting of a series of
characters (A-Z, a-z, _ -, 0-9), terminated by
non-digit,
&lt;li>followed by one or more digits.
&lt;/ul>
The trailing digits specify the port number.
Examples:   /dev/xxxx0, /dev/xxxx_0, /dev/acme99_4,  /dev/xxx09" visibility="public" xmi.id="1513" type="void" name="setDeviceName" >
      <UML:Parameter visibility="public" xmi.id="1514" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1515" type="int" name="getReadFd" />
     <UML:Operation visibility="public" xmi.id="1516" type="int" name="getWriteFd" />
     <UML:Operation comment="open the sensor. This opens the associated RT-Linux FIFOs." visibility="public" xmi.id="1517" type="void" name="open" >
      <UML:Parameter visibility="public" xmi.id="1518" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation comment="Read from the sensor." visibility="public" xmi.id="1519" type="size_t" name="read" >
      <UML:Parameter visibility="public" xmi.id="1520" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="1521" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Write to the sensor." visibility="public" xmi.id="1522" type="size_t" name="write" >
      <UML:Parameter visibility="public" xmi.id="1523" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="1524" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1525" type="void" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="1526" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="1527" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="1528" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1529" type="void" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="1530" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="1531" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="1532" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="close the sensor (and any associated FIFOs)." visibility="public" xmi.id="1533" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="1534" type="const std::string&amp;" name="getInFifoName" />
     <UML:Operation visibility="public" xmi.id="1535" type="const std::string&amp;" name="getOutFifoName" />
     <UML:Operation comment="return an iterator pointing to one-past end of prefix" visibility="protected" xmi.id="1536" type="std::string::const_iterator" name="getPrefixEnd" >
      <UML:Parameter visibility="public" xmi.id="1537" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
     <UML:Attribute comment="Prefix created from the name of the device, which is used
to generate the associated FIFO names." visibility="protected" xmi.id="1538" value="" type="std::string" name="prefix" />
     <UML:Attribute visibility="protected" xmi.id="1539" value="" type="int" name="portNum" />
     <UML:Attribute comment="Actual name of RT-Linux FIFO that is used to read data from the
device." visibility="protected" xmi.id="1540" value="" type="std::string" name="inFifoName" />
     <UML:Attribute comment="Actual name of RT-Linux FIFO that is used to write data to the
device." visibility="protected" xmi.id="1541" value="" type="std::string" name="outFifoName" />
     <UML:Attribute comment="The RTLIoctlFifo used by this device." visibility="protected" xmi.id="1542" value="" type="RTL_DevIoctl*" name="devIoctl" />
     <UML:Attribute visibility="protected" xmi.id="1543" value="" type="int" name="infifofd" />
     <UML:Attribute visibility="protected" xmi.id="1544" value="" type="int" name="outfifofd" />
    </UML:Class>
    <UML:Class comment="A sensor connected to a serial port." visibility="public" xmi.id="1545" name="DSMSerialSensor" >
     <UML:Operation comment="No arg constructor.  Typically the device name and other
attributes must be set before the sensor device is opened." visibility="public" xmi.id="1547" type="" name="DSMSerialSensor" />
     <UML:Operation visibility="public" xmi.id="1548" type="" name="~ DSMSerialSensor" />
     <UML:Operation comment="Open the device connected to the sensor." visibility="public" xmi.id="1549" type="void" name="open" >
      <UML:Parameter visibility="public" xmi.id="1550" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1551" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="1552" type="void" name="setMessageSeparator" >
      <UML:Parameter visibility="public" xmi.id="1553" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1554" type="const std::string&amp;" name="getMessageSeparator" />
     <UML:Operation visibility="public" xmi.id="1555" type="void" name="setMessageSeparatorAtEOM" >
      <UML:Parameter visibility="public" xmi.id="1556" value="" type="bool" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1557" type="bool" name="getMessageSeparatorAtEOM" />
     <UML:Operation visibility="public" xmi.id="1558" type="void" name="setMessageLength" >
      <UML:Parameter visibility="public" xmi.id="1559" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1560" type="int" name="getMessageLength" />
     <UML:Operation visibility="public" xmi.id="1561" type="void" name="setPromptString" >
      <UML:Parameter visibility="public" xmi.id="1562" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1563" type="const std::string&amp;" name="getPromptString" />
     <UML:Operation visibility="public" xmi.id="1564" type="void" name="setPromptRate" >
      <UML:Parameter visibility="public" xmi.id="1565" value="" type="enum irigClockRates" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1566" type="enum irigClockRates" name="getPromptRate" />
     <UML:Operation comment="Set the format to scan ASCII data.
@see dsm::AsciiScanner.setFormat()" visibility="public" xmi.id="1567" type="void" name="setScanfFormat" >
      <UML:Parameter visibility="public" xmi.id="1568" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1569" type="const std::string&amp;" name="getScanfFormat" />
     <UML:Operation visibility="public" xmi.id="1570" type="int" name="getNumScanfFailures" />
     <UML:Operation visibility="public" xmi.id="1571" type="int" name="getNumScanfPartials" />
     <UML:Operation comment="Process a raw sample, which in this case means do
a sscanf on the character string contents, creating
a processed sample of binary floating point data." visibility="public" xmi.id="1572" type="const Sample*" name="process" >
      <UML:Parameter visibility="public" xmi.id="1573" value="" type="const Sample*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1574" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1575" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1576" type="xercesc::DOMElement*" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="1577" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1578" type="xercesc::DOMElement*" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1579" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Operation visibility="protected" xmi.id="1580" type="std::string" name="replaceEscapeSequences" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="1581" value="" type="std::string" name="str" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="1582" value="" type="std::string" name="msgsep" />
     <UML:Attribute visibility="protected" xmi.id="1583" value="" type="bool" name="sepAtEOM" />
     <UML:Attribute visibility="protected" xmi.id="1584" value="" type="int" name="messageLength" />
     <UML:Attribute visibility="protected" xmi.id="1585" value="" type="std::string" name="prompt" />
     <UML:Attribute visibility="protected" xmi.id="1586" value="" type="enum irigClockRates" name="promptRate" />
     <UML:Attribute visibility="protected" xmi.id="1587" value="" type="AsciiScanner*" name="scanner" />
     <UML:Attribute visibility="protected" xmi.id="1588" value="" type="atdUtil::Mutex" name="scannerLock" />
     <UML:Attribute visibility="protected" xmi.id="1589" value="" type="char*" name="parsebuf" />
     <UML:Attribute visibility="protected" xmi.id="1590" value="" type="int" name="parsebuflen" />
     <UML:Attribute visibility="protected" xmi.id="1591" value="" type="int" name="scanfFailures" />
     <UML:Attribute visibility="protected" xmi.id="1592" value="" type="int" name="scanfPartials" />
    </UML:Class>
    <UML:Class comment="A sensor connected to an ARINC port." visibility="public" xmi.id="1593" name="DSMArincSensor" >
     <UML:Operation visibility="public" xmi.id="1595" type="" name="DSMArincSensor" />
     <UML:Operation visibility="public" xmi.id="1596" type="" name="DSMArincSensor" >
      <UML:Parameter visibility="public" xmi.id="1597" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1598" type="" name="~ DSMArincSensor" />
     <UML:Operation comment="This opens the associated RT-Linux FIFOs." visibility="public" xmi.id="1599" type="void" name="open" >
      <UML:Parameter visibility="public" xmi.id="1600" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation comment="This closes the associated RT-Linux FIFOs." visibility="public" xmi.id="1601" type="void" name="close" />
     <UML:Operation comment="Extract the ARINC configuration elements from the XML header." visibility="public" xmi.id="1602" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1603" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Attribute comment="Rates for each label." visibility="private" xmi.id="1604" value="" type="unsigned char" name="labelRate" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="1611" name="SampleSorter" >
     <UML:Operation visibility="public" xmi.id="1613" type="" name="SampleSorter" >
      <UML:Parameter visibility="public" xmi.id="1614" value="" type="int" name="buflenInMilliSec" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1615" type="" name="~ SampleSorter" />
     <UML:Operation visibility="public" xmi.id="1616" type="void" name="interrupt" />
     <UML:Operation visibility="public" xmi.id="1617" type="bool" name="receive" >
      <UML:Parameter visibility="public" xmi.id="1618" value="" type="const Sample*" name="s" />
     </UML:Operation>
     <UML:Operation comment="Thread function." visibility="protected" xmi.id="1619" type="int" name="run" />
     <UML:Attribute visibility="protected" xmi.id="1620" value="" type="int" name="buflenInMillisec" />
     <UML:Attribute visibility="protected" xmi.id="1621" value="" type="SortedSampleSet" name="samples" />
     <UML:Attribute visibility="protected" xmi.id="1622" value="" type="SampleT&lt; char >" name="dummy" />
     <UML:Attribute visibility="private" xmi.id="1623" value="" type="atdUtil::Cond" name="samplesAvail" />
     <UML:Attribute visibility="private" xmi.id="1624" value="" type="int" name="threadSignalFactor" />
    </UML:Class>
    <UML:Class comment="A sensor connected to the DSM A2D" visibility="public" xmi.id="1723" name="DSMAnalogSensor" >
     <UML:Operation visibility="public" xmi.id="1724" type="" name="DSMAnalogSensor" >
      <UML:Parameter visibility="public" xmi.id="1725" value="" type="const std::string&amp;" name="name" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1726" type="" name="~ DSMAnalogSensor" />
     <UML:Operation visibility="public" xmi.id="1727" type="void" name="addChannel" >
      <UML:Parameter visibility="public" xmi.id="1728" value="" type="int" name="chan" />
      <UML:Parameter visibility="public" xmi.id="1729" value="" type="int" name="samplingRate" />
      <UML:Parameter visibility="public" xmi.id="1730" value="" type="int" name="gain" />
      <UML:Parameter visibility="public" xmi.id="1731" value="" type="int" name="offset" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1732" type="const std::vector&lt; int >&amp;" name="getChannels" />
     <UML:Operation visibility="public" xmi.id="1733" type="int" name="getSamplingRate" >
      <UML:Parameter visibility="public" xmi.id="1734" value="" type="int" name="chan" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1735" type="int" name="getGain" >
      <UML:Parameter visibility="public" xmi.id="1736" value="" type="int" name="chan" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1737" type="int" name="getOffset" >
      <UML:Parameter visibility="public" xmi.id="1738" value="" type="int" name="chan" />
     </UML:Operation>
     <UML:Operation comment="open the sensor. This opens the associated RT-Linux FIFOs." visibility="public" xmi.id="1739" type="void" name="open" >
      <UML:Parameter visibility="public" xmi.id="1740" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1741" type="void" name="close" />
     <UML:Operation comment="Synchronize the A/D's with 1PPS from IRIG/GPS" visibility="public" xmi.id="1742" type="void" name="run" >
      <UML:Parameter visibility="public" xmi.id="1743" value="" type="int" name="msg" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="1748" value="" type="std::vector&lt; int >" name="channels" />
     <UML:Attribute visibility="protected" xmi.id="1749" value="" type="std::map&lt; int, struct chan_info >" name="chanInfo" />
     <UML:Class visibility="public" xmi.id="1744" name="chan_info" >
      <UML:Attribute visibility="public" xmi.id="1745" value="" type="int" name="rate" />
      <UML:Attribute visibility="public" xmi.id="1746" value="" type="int" name="gain" />
      <UML:Attribute visibility="public" xmi.id="1747" value="" type="int" name="offset" />
     </UML:Class>
    </UML:Class>
    <UML:Class comment="A sensor connected to a MESA port." visibility="public" xmi.id="1751" name="DSMMesaSensor" >
     <UML:Operation visibility="public" xmi.id="1752" type="" name="DSMMesaSensor" />
     <UML:Operation visibility="public" xmi.id="1753" type="" name="~ DSMMesaSensor" />
     <UML:Operation visibility="public" xmi.id="1754" type="void" name="open" >
      <UML:Parameter visibility="public" xmi.id="1755" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1756" type="void" name="close" />
     <UML:Operation visibility="public" xmi.id="1757" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1758" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Attribute visibility="private" xmi.id="1759" value="" type="struct radar_set" name="set_radar" />
     <UML:Attribute visibility="private" xmi.id="1760" value="" type="struct counters_set" name="set_counter" />
     <UML:Attribute visibility="private" xmi.id="1761" value="" type="int" name="counter_channels" />
     <UML:Attribute visibility="private" xmi.id="1762" value="" type="int" name="radar_channels" />
    </UML:Class>
    <UML:Class comment="Class that should include all that is configurable about a
DSM.  It should be able to initialize itself from a
&lt;dsm> XML element, and provide get methods to access
its essential pieces, like sensors." visibility="public" xmi.id="1786" name="DSMConfig" >
     <UML:Operation visibility="public" xmi.id="1787" type="" name="DSMConfig" />
     <UML:Operation visibility="public" xmi.id="1788" type="" name="~ DSMConfig" />
     <UML:Operation visibility="public" xmi.id="1789" type="const std::string&amp;" name="getName" />
     <UML:Operation visibility="public" xmi.id="1790" type="void" name="setName" >
      <UML:Parameter visibility="public" xmi.id="1791" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1792" type="void" name="addSensor" >
      <UML:Parameter visibility="public" xmi.id="1793" value="" type="DSMSensor*" name="sensor" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1794" type="const std::list&lt; DSMSensor * >&amp;" name="getSensors" />
     <UML:Operation visibility="public" xmi.id="1795" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1796" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1797" type="xercesc::DOMElement*" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="1798" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1799" type="xercesc::DOMElement*" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1800" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="1801" value="" type="std::string" name="name" />
     <UML:Attribute visibility="protected" xmi.id="1802" value="" type="std::list&lt; DSMSensor * >" name="sensors" />
    </UML:Class>
    <UML:Class comment="Interface of an object that can be instantiated from a DOM element,
via the fromDOMElement method, or that can be serialized into a DOM,
via the toDOMParent/toDOMElement method." visibility="public" xmi.id="1804" name="DOMable" >
     <UML:Operation visibility="public" xmi.id="1805" type="void" isAbstract="true" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1806" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Operation comment="Create a DOMElement and append it to the parent." visibility="public" xmi.id="1807" type="xercesc::DOMElement*" isAbstract="true" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="1808" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation comment="Add my content into a DOMElement." visibility="public" xmi.id="1809" type="xercesc::DOMElement*" isAbstract="true" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1810" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1811" type="const XMLCh*" name="getNamespaceURI" ownerScope="classifier" />
     <UML:Attribute visibility="private" xmi.id="1812" value="" type="XMLCh*" name="namespaceURI" ownerScope="classifier" />
    </UML:Class>
    <UML:Class comment="Parse the DSM program runstring." visibility="public" xmi.id="1851" name="DSMEngine.static" >
     <UML:Operation visibility="public" xmi.id="1852" type="" name="DSMRunstring" >
      <UML:Parameter visibility="public" xmi.id="1853" value="" type="int" name="argc" />
      <UML:Parameter visibility="public" xmi.id="1854" value="" type="char**" name="argv" />
     </UML:Operation>
     <UML:Operation comment="Send usage message to cerr, then exit(1)." visibility="public" xmi.id="1855" type="void" name="usage" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="1856" value="" type="const char*" name="argv0" />
     </UML:Operation>
     <UML:Attribute comment="-d option. If user wants messages on stderr rather than syslog." visibility="public" xmi.id="1857" value="" type="bool" name="debug" />
     <UML:Attribute comment="Name of XML configuration file. If empty, multicast for config." visibility="public" xmi.id="1858" value="" type="std::string" name="configFile" />
    </UML:Class>
    <UML:Class comment="Data Service Module, a class that drives an ADS3 data collection
box." visibility="public" xmi.id="1859" name="DSMEngine" >
     <UML:Operation comment="Entry point to run a DSMEngine process from a command line." visibility="public" xmi.id="1860" type="int" name="main" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="1861" value="" type="int" name="argc" />
      <UML:Parameter visibility="public" xmi.id="1862" value="" type="char**" name="argv" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1863" type="DSMEngine*" name="getInstance" ownerScope="classifier" />
     <UML:Operation visibility="public" xmi.id="1864" type="xercesc::DOMDocument*" name="requestXMLConfig" />
     <UML:Operation visibility="public" xmi.id="1865" type="xercesc::DOMDocument*" name="parseXMLConfigFile" >
      <UML:Parameter visibility="public" xmi.id="1866" value="" type="const std::string&amp;" name="xmlFileName" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1867" type="void" name="initialize" >
      <UML:Parameter visibility="public" xmi.id="1868" value="" type="xercesc::DOMDocument*" name="projectDoc" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1869" type="void" name="startSensors" />
     <UML:Operation visibility="public" xmi.id="1870" type="void" name="wait" />
     <UML:Operation visibility="public" xmi.id="1871" type="void" name="interrupt" />
     <UML:Operation comment="Use this static method, rather than the public constructor,
to create an instance of a DSMEngine which will receive signals
sent to a process." visibility="protected" xmi.id="1872" type="DSMEngine*" name="createInstance" ownerScope="classifier" />
     <UML:Operation visibility="protected" xmi.id="1874" type="void" name="setupSignals" ownerScope="classifier" />
     <UML:Operation visibility="protected" xmi.id="1875" type="void" name="sigAction" ownerScope="classifier" >
      <UML:Parameter visibility="public" xmi.id="1876" value="" type="int" name="sig" />
      <UML:Parameter visibility="public" xmi.id="1877" value="" type="siginfo_t*" name="siginfo" />
      <UML:Parameter visibility="public" xmi.id="1878" value="" type="void*" name="vptr" />
     </UML:Operation>
     <UML:Operation comment="Constructor." visibility="protected" xmi.id="1879" type="" name="DSMEngine" />
     <UML:Operation visibility="protected" xmi.id="1880" type="" name="~ DSMEngine" />
     <UML:Attribute visibility="protected" xmi.id="1882" value="" type="Project*" name="project" />
     <UML:Attribute visibility="protected" xmi.id="1883" value="" type="Aircraft*" name="aircraft" />
     <UML:Attribute visibility="protected" xmi.id="1884" value="" type="DSMConfig*" name="dsmConfig" />
     <UML:Attribute visibility="protected" xmi.id="1885" value="" type="PortSelector*" name="handler" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="1894" name="RawSampleOutput" >
     <UML:Operation visibility="public" xmi.id="1895" type="" name="RawSampleOutput" />
     <UML:Operation visibility="public" xmi.id="1896" type="" name="~ RawSampleOutput" />
     <UML:Operation visibility="public" xmi.id="1897" type="void" name="connect" />
     <UML:Operation visibility="public" xmi.id="1898" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1899" value="" type="const xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1900" type="xercesc::DOMElement*" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="1901" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="1902" type="xercesc::DOMElement*" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="1903" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
    </UML:Class>
    <UML:Class comment="Thread whose run method patiently multicasts ConfigDatagrams
until it is canceled." visibility="public" xmi.id="1904" name="ConfigRequestor" >
     <UML:Operation visibility="public" xmi.id="1906" type="" name="ConfigRequestor" >
      <UML:Parameter visibility="public" xmi.id="1907" value="" type="int" name="listenPort" />
     </UML:Operation>
    </UML:Class>
    <UML:Class comment="Thread whose run method patiently multicasts ConfigDatagrams
until it is canceled." visibility="public" xmi.id="1908" name="RawSampleServiceRequestor" >
     <UML:Operation visibility="public" xmi.id="1910" type="" name="RawSampleServiceRequestor" >
      <UML:Parameter visibility="public" xmi.id="1911" value="" type="int" name="listenPort" />
     </UML:Operation>
    </UML:Class>
    <UML:Class comment="DSMSensor provides the basic support for reading, processing
and distributing samples from a sensor attached to a DSM.

DSMSensor has a no-arg constructor, and can fill in its attributes
from an XML DOM element with fromDOMElement().
One attribute of a DSMSensor is the system device
name associated with this sensor, e.g. &quot;/dev/xxx0&quot;.
Once a device name has been set, then a user of this sensor
can call open(),  and then ioctl(), read() and write().
These methods must be implemented by a derived class,
dsm::RTL_DSMSensor, for example.

dsm::SampleClient's can call
addRawSampleClient()/removeRawSampleClient() if they want to
receive raw dsm::SampleT's from this sensor.

dsm::SampleClient's can also call
addSampleClient()/removeSampleClient() if they want to
receive (minimally) processed dsm::SampleT's from this sensor.

A common usage of a DSMSensor is to add it to a dsm::PortSelector
object with dsm::PortSelector::addSensorPort().
When the dsm::PortSelector::run method has determined that there is data
available on a DSMSensor's file descriptor, it will then call
the readSamples() method which reads the samples from the
file descriptor, processes them, and forwards the raw and processed
samples to all associated dsm::SampleClient's of this DSMSensor.
" visibility="public" xmi.id="2183" name="DSMSensor" >
     <UML:Operation comment="Create a sensor." visibility="public" xmi.id="2185" type="" name="DSMSensor" />
     <UML:Operation comment="/deprecated Construct a sensor, and provide the device name.
Use the no-arg constructor instead and use the setDeviceName() method." visibility="public" xmi.id="2186" type="" name="DSMSensor" >
      <UML:Parameter visibility="public" xmi.id="2187" value="" type="const std::string&amp;" name="n" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2188" type="" name="~ DSMSensor" />
     <UML:Operation visibility="public" xmi.id="2189" type="void" name="setDeviceName" >
      <UML:Parameter visibility="public" xmi.id="2190" value="" type="const std::string&amp;" name="val" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2191" type="const std::string&amp;" name="getDeviceName" />
     <UML:Operation visibility="public" xmi.id="2192" type="int" isAbstract="true" name="getReadFd" />
     <UML:Operation visibility="public" xmi.id="2193" type="int" name="getId" />
     <UML:Operation visibility="public" xmi.id="2194" type="void" name="setId" >
      <UML:Parameter visibility="public" xmi.id="2195" value="" type="int" name="val" />
     </UML:Operation>
     <UML:Operation comment="Open the device. flags are a combination of O_RDONLY, O_WRONLY." visibility="public" xmi.id="2196" type="void" isAbstract="true" name="open" >
      <UML:Parameter visibility="public" xmi.id="2197" value="" type="int" name="flags" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2198" type="int" name="getDefaultMode" />
     <UML:Operation comment="Read from the device (duh). Behaves like read(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="2199" type="size_t" isAbstract="true" name="read" >
      <UML:Parameter visibility="public" xmi.id="2200" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="2201" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Write to the device (duh). Behaves like write(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="2202" type="size_t" isAbstract="true" name="write" >
      <UML:Parameter visibility="public" xmi.id="2203" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="2204" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Perform an ioctl on the device. request is an integer
value which must be supported by the device. Normally
this is a value from a header file for the device." visibility="public" xmi.id="2205" type="void" isAbstract="true" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="2206" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="2207" value="" type="void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="2208" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="Overloaded ioctl method, used when doing an ioctl set from
a pointer to constant user data." visibility="public" xmi.id="2209" type="void" isAbstract="true" name="ioctl" >
      <UML:Parameter visibility="public" xmi.id="2210" value="" type="int" name="request" />
      <UML:Parameter visibility="public" xmi.id="2211" value="" type="const void*" name="buf" />
      <UML:Parameter visibility="public" xmi.id="2212" value="" type="size_t" name="len" />
     </UML:Operation>
     <UML:Operation comment="close" visibility="public" xmi.id="2213" type="void" isAbstract="true" name="close" />
     <UML:Operation comment="Read samples from my associated file descriptor,
return them in a list.
process them, and pass them onto my SampleClient's.

readSamples() assumes that the data read from
the file descriptor is formatted into samples
in the format of a struct dsm_sample, i.e. a
4 byte unsigned integer time-tag (milliseconds since
midnight GMT), followed by a 4 byte unsigned integer data
length, and then length number of bytes of data." visibility="public" xmi.id="2214" type="dsm_sample_time_t" name="readSamples" />
     <UML:Operation visibility="public" xmi.id="2215" type="bool" name="receive" >
      <UML:Parameter visibility="public" xmi.id="2216" value="" type="const Sample*" name="s" />
     </UML:Operation>
     <UML:Operation comment="Apply further necessary processing to a raw sample
from this DSMSensor. Return the resultant sample(s)
in result.  The default implementation
of process() simply puts the Sample into result." visibility="public" xmi.id="2217" type="bool" name="process" >
      <UML:Parameter visibility="public" xmi.id="2218" value="" type="const Sample*" />
      <UML:Parameter visibility="public" xmi.id="2219" value="" type="std::list&lt; const Sample * >&amp;" name="result" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2231" type="void" name="fromDOMElement" >
      <UML:Parameter visibility="public" xmi.id="2232" value="" type="const xercesc::DOMElement*" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2233" type="xercesc::DOMElement*" name="toDOMParent" >
      <UML:Parameter visibility="public" xmi.id="2234" value="" type="xercesc::DOMElement*" name="parent" />
     </UML:Operation>
     <UML:Operation visibility="public" xmi.id="2235" type="xercesc::DOMElement*" name="toDOMElement" >
      <UML:Parameter visibility="public" xmi.id="2236" value="" type="xercesc::DOMElement*" name="node" />
     </UML:Operation>
     <UML:Attribute visibility="protected" xmi.id="2239" value="" type="std::string" name="devname" />
     <UML:Attribute visibility="protected" xmi.id="2240" value="" type="int" name="id" />
     <UML:Attribute visibility="protected" xmi.id="2241" value="" type="const int" name="BUFSIZE" />
     <UML:Attribute visibility="protected" xmi.id="2242" value="" type="char*" name="buffer" />
     <UML:Attribute visibility="protected" xmi.id="2243" value="" type="int" name="bufhead" />
     <UML:Attribute visibility="protected" xmi.id="2244" value="" type="int" name="buftail" />
     <UML:Attribute visibility="protected" xmi.id="2245" value="" type="dsm::Sample*" name="samp" />
     <UML:Attribute visibility="protected" xmi.id="2246" value="" type="size_t" name="sampDataToRead" />
     <UML:Attribute visibility="protected" xmi.id="2247" value="" type="char*" name="sampDataPtr" />
     <UML:Attribute comment="DSMSensor maintains some counters that can be queried
to provide the current status." visibility="protected" xmi.id="2248" value="" type="time_t" name="initialTimeSecs" />
     <UML:Attribute visibility="protected" xmi.id="2249" value="" type="size_t" name="minSampleLength" />
     <UML:Attribute visibility="protected" xmi.id="2250" value="" type="size_t" name="maxSampleLength" />
     <UML:Attribute visibility="protected" xmi.id="2251" value="" type="int" name="readErrorCount" />
     <UML:Attribute visibility="protected" xmi.id="2252" value="" type="int" name="writeErrorCount" />
     <UML:Attribute visibility="protected" xmi.id="2253" value="" type="int" name="currStatsIndex" />
     <UML:Attribute visibility="protected" xmi.id="2254" value="" type="int" name="reportStatsIndex" />
     <UML:Attribute visibility="protected" xmi.id="2255" value="" type="int" name="nsamples" />
     <UML:Attribute comment="Observed number of samples per second." visibility="protected" xmi.id="2256" value="" type="float" name="sampleRateObs" />
     <UML:Class comment="DSMSensor provides the basic support for reading, processing
and distributing samples from a sensor attached to a DSM.

DSMSensor has a no-arg constructor, and can fill in its attributes
from an XML DOM element with fromDOMElement().
One attribute of a DSMSensor is the system device
name associated with this sensor, e.g. &quot;/dev/xxx0&quot;.
Once a device name has been set, then a user of this sensor
can call open(),  and then ioctl(), read() and write().
These methods must be implemented by a derived class,
dsm::RTL_DSMSensor, for example.

dsm::SampleClient's can call
addRawSampleClient()/removeRawSampleClient() if they want to
receive raw dsm::SampleT's from this sensor.

dsm::SampleClient's can also call
addSampleClient()/removeSampleClient() if they want to
receive (minimally) processed dsm::SampleT's from this sensor.

A common usage of a DSMSensor is to add it to a dsm::PortSelector
object with dsm::PortSelector::addSensorPort().
When the dsm::PortSelector::run method has determined that there is data
available on a DSMSensor's file descriptor, it will then call
the readSamples() method which reads the samples from the
file descriptor, processes them, and forwards the raw and processed
samples to all associated dsm::SampleClient's of this DSMSensor.
" visibility="public" xmi.id="1437" name="DSMSensor.old" >
      <UML:Operation comment="Create a sensor." visibility="public" xmi.id="1438" type="" name="DSMSensor" />
      <UML:Operation comment="/deprecated Construct a sensor, and provide the device name.
Use the no-arg constructor instead and use the setDeviceName() method." visibility="public" xmi.id="1439" type="" name="DSMSensor" >
       <UML:Parameter visibility="public" xmi.id="1440" value="" type="const std::string&amp;" name="n" />
      </UML:Operation>
      <UML:Operation visibility="public" xmi.id="1441" type="" name="~ DSMSensor" />
      <UML:Operation visibility="public" xmi.id="1442" type="void" name="setDeviceName" >
       <UML:Parameter visibility="public" xmi.id="1443" value="" type="const std::string&amp;" name="val" />
      </UML:Operation>
      <UML:Operation visibility="public" xmi.id="1444" type="const std::string&amp;" name="getDeviceName" />
      <UML:Operation visibility="public" xmi.id="1445" type="int" isAbstract="true" name="getReadFd" />
      <UML:Operation visibility="public" xmi.id="1446" type="int" name="getId" />
      <UML:Operation visibility="public" xmi.id="1447" type="void" name="setId" >
       <UML:Parameter visibility="public" xmi.id="1448" value="" type="int" name="val" />
      </UML:Operation>
      <UML:Operation comment="Open the device. flags are a combination of O_RDONLY, O_WRONLY." visibility="public" xmi.id="1449" type="void" isAbstract="true" name="open" >
       <UML:Parameter visibility="public" xmi.id="1450" value="" type="int" name="flags" />
      </UML:Operation>
      <UML:Operation visibility="public" xmi.id="1451" type="int" name="getDefaultMode" />
      <UML:Operation comment="Read from the device (duh). Behaves like read(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="1452" type="size_t" isAbstract="true" name="read" >
       <UML:Parameter visibility="public" xmi.id="1453" value="" type="void*" name="buf" />
       <UML:Parameter visibility="public" xmi.id="1454" value="" type="size_t" name="len" />
      </UML:Operation>
      <UML:Operation comment="Write to the device (duh). Behaves like write(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="1455" type="size_t" isAbstract="true" name="write" >
       <UML:Parameter visibility="public" xmi.id="1456" value="" type="const void*" name="buf" />
       <UML:Parameter visibility="public" xmi.id="1457" value="" type="size_t" name="len" />
      </UML:Operation>
      <UML:Operation comment="Perform an ioctl on the device. request is an integer
value which must be supported by the device. Normally
this is a value from a header file for the device." visibility="public" xmi.id="1458" type="void" isAbstract="true" name="ioctl" >
       <UML:Parameter visibility="public" xmi.id="1459" value="" type="int" name="request" />
       <UML:Parameter visibility="public" xmi.id="1460" value="" type="void*" name="buf" />
       <UML:Parameter visibility="public" xmi.id="1461" value="" type="size_t" name="len" />
      </UML:Operation>
      <UML:Operation comment="Overloaded ioctl method, used when doing an ioctl set from
a pointer to constant user data." visibility="public" xmi.id="1462" type="void" isAbstract="true" name="ioctl" >
       <UML:Parameter visibility="public" xmi.id="1463" value="" type="int" name="request" />
       <UML:Parameter visibility="public" xmi.id="1464" value="" type="const void*" name="buf" />
       <UML:Parameter visibility="public" xmi.id="1465" value="" type="size_t" name="len" />
      </UML:Operation>
      <UML:Operation comment="close" visibility="public" xmi.id="1466" type="void" isAbstract="true" name="close" />
      <UML:Operation comment="Read samples from my associated file descriptor,
process them, and pass them onto my SampleClient's.

readSamples() assumes that the data read from
the file descriptor is formatted into samples
in the format of a struct dsm_sample, i.e. a
4 byte unsigned integer time-tag (milliseconds since
midnight GMT), followed by a 4 byte unsigned integer data
length, and then length number of bytes of data.

After each sample is read, it is distributed to
any SampleClients that have requested samples via
dsm::RawSampleSource::addRawSampleClient().
Then the virtual process() method is called
which allows this sensor to apply any necessary processing
to the raw sample.  The processed samples are then
passed to any SampleClients that have registered with
dsm::SampleSource::addSampleClient()." visibility="public" xmi.id="1467" type="dsm_sample_time_t" name="readSamples" />
      <UML:Operation comment="Apply further necessary processing to samples from
this DSMSensor. A virtual method that is called
from readSamples(). The default implementation
of process() simply passes the Sample onto
any dsm::SampleClient's without further processing." visibility="public" xmi.id="1468" type="const Sample*" name="process" >
       <UML:Parameter visibility="public" xmi.id="1469" value="" type="const Sample*" />
      </UML:Operation>
      <UML:Operation visibility="public" xmi.id="1470" type="void" name="initStatistics" />
      <UML:Operation visibility="public" xmi.id="1471" type="void" name="calcStatistics" >
       <UML:Parameter visibility="public" xmi.id="1472" value="" type="unsigned long" name="periodMsec" />
      </UML:Operation>
      <UML:Operation visibility="public" xmi.id="1473" type="size_t" name="getMaxSampleLength" />
      <UML:Operation visibility="public" xmi.id="1474" type="size_t" name="getMinSampleLength" />
      <UML:Operation visibility="public" xmi.id="1475" type="int" name="getReadErrorCount" />
      <UML:Operation visibility="public" xmi.id="1476" type="int" name="getCumulativeReadErrorCount" />
      <UML:Operation visibility="public" xmi.id="1477" type="int" name="getWriteErrorCount" />
      <UML:Operation visibility="public" xmi.id="1478" type="int" name="getCumulativeWriteErrorCount" />
      <UML:Operation visibility="public" xmi.id="1479" type="float" name="getObservedSamplingRate" />
      <UML:Operation visibility="public" xmi.id="1480" type="float" name="getReadRate" />
      <UML:Operation visibility="public" xmi.id="1481" type="void" name="fromDOMElement" >
       <UML:Parameter visibility="public" xmi.id="1482" value="" type="const xercesc::DOMElement*" />
      </UML:Operation>
      <UML:Operation visibility="public" xmi.id="1483" type="xercesc::DOMElement*" name="toDOMParent" >
       <UML:Parameter visibility="public" xmi.id="1484" value="" type="xercesc::DOMElement*" name="parent" />
      </UML:Operation>
      <UML:Operation visibility="public" xmi.id="1485" type="xercesc::DOMElement*" name="toDOMElement" >
       <UML:Parameter visibility="public" xmi.id="1486" value="" type="xercesc::DOMElement*" name="node" />
      </UML:Operation>
      <UML:Operation comment="Must be called before invoking readSamples(). Derived
classes should call initBuffer in their 
open() method." visibility="protected" xmi.id="1487" type="void" name="initBuffer" />
      <UML:Operation comment="Delete the sensor buffer.  Derived classes should call
destroyBuffer in their close() method." visibility="protected" xmi.id="1488" type="void" name="destroyBuffer" />
      <UML:Attribute visibility="protected" xmi.id="1489" value="" type="std::string" name="devname" />
      <UML:Attribute visibility="protected" xmi.id="1490" value="" type="int" name="id" />
      <UML:Attribute visibility="protected" xmi.id="1491" value="" type="const int" name="BUFSIZE" />
      <UML:Attribute visibility="protected" xmi.id="1492" value="" type="char*" name="buffer" />
      <UML:Attribute visibility="protected" xmi.id="1493" value="" type="int" name="bufhead" />
      <UML:Attribute visibility="protected" xmi.id="1494" value="" type="int" name="buftail" />
      <UML:Attribute visibility="protected" xmi.id="1495" value="" type="dsm::Sample*" name="samp" />
      <UML:Attribute visibility="protected" xmi.id="1496" value="" type="size_t" name="sampDataToRead" />
      <UML:Attribute visibility="protected" xmi.id="1497" value="" type="char*" name="sampDataPtr" />
      <UML:Attribute comment="DSMSensor maintains some counters that can be queried
to provide the current status." visibility="protected" xmi.id="1498" value="" type="time_t" name="initialTimeSecs" />
      <UML:Attribute visibility="protected" xmi.id="1499" value="" type="size_t" name="minSampleLength" />
      <UML:Attribute visibility="protected" xmi.id="1500" value="" type="size_t" name="maxSampleLength" />
      <UML:Attribute visibility="protected" xmi.id="1501" value="" type="int" name="readErrorCount" />
      <UML:Attribute visibility="protected" xmi.id="1502" value="" type="int" name="writeErrorCount" />
      <UML:Attribute visibility="protected" xmi.id="1503" value="" type="int" name="currStatsIndex" />
      <UML:Attribute visibility="protected" xmi.id="1504" value="" type="int" name="reportStatsIndex" />
      <UML:Attribute visibility="protected" xmi.id="1505" value="" type="int" name="nsamples" />
      <UML:Attribute comment="Observed number of samples per second." visibility="protected" xmi.id="1506" value="" type="float" name="sampleRateObs" />
      <UML:Class comment="DSMSensor provides the basic support for reading, processing
and distributing samples from a sensor attached to a DSM.

DSMSensor has a no-arg constructor, and can fill in its attributes
from an XML DOM element with fromDOMElement().
One attribute of a DSMSensor is the system device
name associated with this sensor, e.g. &quot;/dev/xxx0&quot;.
Once a device name has been set, then a user of this sensor
can call open(),  and then ioctl(), read() and write().
These methods must be implemented by a derived class,
dsm::RTL_DSMSensor, for example.

dsm::SampleClient's can call
addRawSampleClient()/removeRawSampleClient() if they want to
receive raw dsm::SampleT's from this sensor.

dsm::SampleClient's can also call
addSampleClient()/removeSampleClient() if they want to
receive (minimally) processed dsm::SampleT's from this sensor.

A common usage of a DSMSensor is to add it to a dsm::PortSelector
object with dsm::PortSelector::addSensorPort().
When the dsm::PortSelector::run method has determined that there is data
available on a DSMSensor's file descriptor, it will then call
the readSamples() method which reads the samples from the
file descriptor, processes them, and forwards the raw and processed
samples to all associated dsm::SampleClient's of this DSMSensor.
" visibility="public" xmi.id="1648" name="DSMSensor" >
       <UML:Operation comment="Create a sensor." visibility="public" xmi.id="1649" type="" name="DSMSensor" />
       <UML:Operation comment="/deprecated Construct a sensor, and provide the device name.
Use the no-arg constructor instead and use the setDeviceName() method." visibility="public" xmi.id="1650" type="" name="DSMSensor" >
        <UML:Parameter visibility="public" xmi.id="1651" value="" type="const std::string&amp;" name="n" />
       </UML:Operation>
       <UML:Operation visibility="public" xmi.id="1652" type="" name="~ DSMSensor" />
       <UML:Operation visibility="public" xmi.id="1653" type="void" name="setDeviceName" >
        <UML:Parameter visibility="public" xmi.id="1654" value="" type="const std::string&amp;" name="val" />
       </UML:Operation>
       <UML:Operation visibility="public" xmi.id="1655" type="const std::string&amp;" name="getDeviceName" />
       <UML:Operation visibility="public" xmi.id="1656" type="int" isAbstract="true" name="getReadFd" />
       <UML:Operation visibility="public" xmi.id="1657" type="int" name="getId" />
       <UML:Operation visibility="public" xmi.id="1658" type="void" name="setId" >
        <UML:Parameter visibility="public" xmi.id="1659" value="" type="int" name="val" />
       </UML:Operation>
       <UML:Operation comment="Open the device. flags are a combination of O_RDONLY, O_WRONLY." visibility="public" xmi.id="1660" type="void" isAbstract="true" name="open" >
        <UML:Parameter visibility="public" xmi.id="1661" value="" type="int" name="flags" />
       </UML:Operation>
       <UML:Operation visibility="public" xmi.id="1662" type="int" name="getDefaultMode" />
       <UML:Operation comment="Read from the device (duh). Behaves like read(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="1663" type="size_t" isAbstract="true" name="read" >
        <UML:Parameter visibility="public" xmi.id="1664" value="" type="void*" name="buf" />
        <UML:Parameter visibility="public" xmi.id="1665" value="" type="size_t" name="len" />
       </UML:Operation>
       <UML:Operation comment="Write to the device (duh). Behaves like write(2) system call,
without a file descriptor argument, and with an IOException." visibility="public" xmi.id="1666" type="size_t" isAbstract="true" name="write" >
        <UML:Parameter visibility="public" xmi.id="1667" value="" type="const void*" name="buf" />
        <UML:Parameter visibility="public" xmi.id="1668" value="" type="size_t" name="len" />
       </UML:Operation>
       <UML:Operation comment="Perform an ioctl on the device. request is an integer
value which must be supported by the device. Normally
this is a value from a header file for the device." visibility="public" xmi.id="1669" type="void" isAbstract="true" name="ioctl" >
        <UML:Parameter visibility="public" xmi.id="1670" value="" type="int" name="request" />
        <UML:Parameter visibility="public" xmi.id="1671" value="" type="void*" name="buf" />
        <UML:Parameter visibility="public" xmi.id="1672" value="" type="size_t" name="len" />
       </UML:Operation>
       <UML:Operation comment="Overloaded ioctl method, used when doing an ioctl set from
a pointer to constant user data." visibility="public" xmi.id="1673" type="void" isAbstract="true" name="ioctl" >
        <UML:Parameter visibility="public" xmi.id="1674" value="" type="int" name="request" />
        <UML:Parameter visibility="public" xmi.id="1675" value="" type="const void*" name="buf" />
        <UML:Parameter visibility="public" xmi.id="1676" value="" type="size_t" name="len" />
       </UML:Operation>
       <UML:Operation comment="close" visibility="public" xmi.id="1677" type="void" isAbstract="true" name="close" />
       <UML:Operation comment="Read samples from my associated file descriptor,
return them in a list.
process them, and pass them onto my SampleClient's.

readSamples() assumes that the data read from
the file descriptor is formatted into samples
in the format of a struct dsm_sample, i.e. a
4 byte unsigned integer time-tag (milliseconds since
midnight GMT), followed by a 4 byte unsigned integer data
length, and then length number of bytes of data." visibility="public" xmi.id="1678" type="dsm_sample_time_t" name="readSamples" />
       <UML:Operation visibility="public" xmi.id="1679" type="bool" name="receive" >
        <UML:Parameter visibility="public" xmi.id="1680" value="" type="const Sample*" name="s" />
       </UML:Operation>
       <UML:Operation comment="Apply further necessary processing to a raw sample
from this DSMSensor. Return the resultant sample(s)
in result.  The default implementation
of process() simply puts the Sample into result." visibility="public" xmi.id="1681" type="bool" name="process" >
        <UML:Parameter visibility="public" xmi.id="1682" value="" type="const Sample*" />
        <UML:Parameter visibility="public" xmi.id="1683" value="" type="std::list&lt; const Sample * >&amp;" name="result" />
       </UML:Operation>
       <UML:Operation visibility="public" xmi.id="1695" type="void" name="fromDOMElement" >
        <UML:Parameter visibility="public" xmi.id="1696" value="" type="const xercesc::DOMElement*" />
       </UML:Operation>
       <UML:Operation visibility="public" xmi.id="1697" type="xercesc::DOMElement*" name="toDOMParent" >
        <UML:Parameter visibility="public" xmi.id="1698" value="" type="xercesc::DOMElement*" name="parent" />
       </UML:Operation>
       <UML:Operation visibility="public" xmi.id="1699" type="xercesc::DOMElement*" name="toDOMElement" >
        <UML:Parameter visibility="public" xmi.id="1700" value="" type="xercesc::DOMElement*" name="node" />
       </UML:Operation>
       <UML:Attribute visibility="protected" xmi.id="1703" value="" type="std::string" name="devname" />
       <UML:Attribute visibility="protected" xmi.id="1704" value="" type="int" name="id" />
       <UML:Attribute visibility="protected" xmi.id="1705" value="" type="const int" name="BUFSIZE" />
       <UML:Attribute visibility="protected" xmi.id="1706" value="" type="char*" name="buffer" />
       <UML:Attribute visibility="protected" xmi.id="1707" value="" type="int" name="bufhead" />
       <UML:Attribute visibility="protected" xmi.id="1708" value="" type="int" name="buftail" />
       <UML:Attribute visibility="protected" xmi.id="1709" value="" type="dsm::Sample*" name="samp" />
       <UML:Attribute visibility="protected" xmi.id="1710" value="" type="size_t" name="sampDataToRead" />
       <UML:Attribute visibility="protected" xmi.id="1711" value="" type="char*" name="sampDataPtr" />
       <UML:Attribute comment="DSMSensor maintains some counters that can be queried
to provide the current status." visibility="protected" xmi.id="1712" value="" type="time_t" name="initialTimeSecs" />
       <UML:Attribute visibility="protected" xmi.id="1713" value="" type="size_t" name="minSampleLength" />
       <UML:Attribute visibility="protected" xmi.id="1714" value="" type="size_t" name="maxSampleLength" />
       <UML:Attribute visibility="protected" xmi.id="1715" value="" type="int" name="readErrorCount" />
       <UML:Attribute visibility="protected" xmi.id="1716" value="" type="int" name="writeErrorCount" />
       <UML:Attribute visibility="protected" xmi.id="1717" value="" type="int" name="currStatsIndex" />
       <UML:Attribute visibility="protected" xmi.id="1718" value="" type="int" name="reportStatsIndex" />
       <UML:Attribute visibility="protected" xmi.id="1719" value="" type="int" name="nsamples" />
       <UML:Attribute comment="Observed number of samples per second." visibility="protected" xmi.id="1720" value="" type="float" name="sampleRateObs" />
      </UML:Class>
     </UML:Class>
    </UML:Class>
   </UML:Package>
   <UML:Class visibility="public" xmi.id="890" name="some Thread user" />
   <UML:Component executable="0" visibility="public" xmi.id="1266" name="SerialSensor" />
   <UML:Component executable="0" visibility="public" xmi.id="1267" name="ARINCSensor" />
   <UML:Component executable="0" visibility="public" xmi.id="1268" name="A2DSensor" />
   <UML:Component executable="0" visibility="public" xmi.id="1269" name="IRIGSensor" />
   <UML:Component executable="0" visibility="public" xmi.id="1270" name="A2D RTL module" />
   <UML:Component executable="0" visibility="public" xmi.id="1271" name="Serial RTL Module" />
   <UML:Component executable="0" visibility="public" xmi.id="1272" name="IRIG RTL Module" />
   <UML:Class visibility="public" xmi.id="1302" name="dsm_serial" />
   <UML:Class visibility="public" xmi.id="1303" name="RTL Module" />
   <UML:Class visibility="public" xmi.id="1304" name="data reg" />
   <UML:Class visibility="public" xmi.id="1313" name="status reg" />
   <UML:Class visibility="public" xmi.id="1318" name="IRIG-B RT Clock" />
   <UML:Class visibility="public" xmi.id="1321" name="sample list" />
   <UML:Class visibility="public" xmi.id="1324" name="RTL Thread" />
   <UML:Class visibility="public" xmi.id="1331" name="semaphore" />
   <UML:Class visibility="public" xmi.id="1336" name="RTL FIFO" />
   <UML:Class visibility="public" xmi.id="1345" name="PC104SG module" />
   <UML:Class visibility="public" xmi.id="1346" name="A2D module" />
   <UML:Class visibility="public" xmi.id="1349" name="A2D HW FIFO" />
   <UML:Class visibility="public" xmi.id="1778" name="FutureNonRTLSensor" >
    <UML:Operation visibility="public" xmi.id="1779" type="void" name="open" />
    <UML:Operation visibility="public" xmi.id="1780" type="void" name="read" />
    <UML:Operation visibility="public" xmi.id="1781" type="void" name="write" />
    <UML:Operation visibility="public" xmi.id="1782" type="void" name="ioctl" />
    <UML:Operation visibility="public" xmi.id="1783" type="void" name="close" />
   </UML:Class>
   <UML:Class visibility="public" xmi.id="2089" name="RemoteServer" />
   <UML:Class visibility="public" xmi.id="2124" name="Pc104SG Module" />
   <UML:Class visibility="public" xmi.id="2182" name="dsm::IRIGSensor" />
   <UML:Generalization child="18" visibility="public" xmi.id="19" parent="12" />
   <UML:Generalization child="109" visibility="public" xmi.id="110" parent="18" />
   <UML:Generalization child="113" visibility="public" xmi.id="114" parent="18" />
   <UML:Association visibility="public" xmi.id="120" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="113" />
     <UML:AssociationEndRole visibility="private" type="12" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="273" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="227" />
     <UML:AssociationEndRole visibility="protected" type="122" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="296" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="274" />
     <UML:AssociationEndRole visibility="protected" type="122" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="353" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="297" />
     <UML:AssociationEndRole visibility="protected" type="122" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="354" visibility="public" xmi.id="355" parent="297" />
   <UML:Generalization child="427" visibility="public" xmi.id="428" parent="18" />
   <UML:Generalization child="450" visibility="public" xmi.id="451" parent="18" />
   <UML:Association visibility="public" xmi.id="464" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="450" />
     <UML:AssociationEndRole visibility="protected" type="227" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="465" visibility="public" xmi.id="466" parent="427" />
   <UML:Generalization child="485" visibility="public" xmi.id="486" parent="18" />
   <UML:Association visibility="public" xmi.id="491" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="485" />
     <UML:AssociationEndRole visibility="protected" type="354" multiplicity="1" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="542" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="528" />
     <UML:AssociationEndRole visibility="protected" type="528" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="550" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="528" />
     <UML:AssociationEndRole visibility="protected" type="274" multiplicity="1" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="641" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="618" />
     <UML:AssociationEndRole visibility="protected" type="608" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="642" visibility="public" xmi.id="643" parent="618" />
   <UML:Association visibility="public" xmi.id="654" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="642" />
     <UML:AssociationEndRole visibility="protected" type="642" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="675" name="create" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="485" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="504" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="704" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="485" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="504" multiplicity="1" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="709" name="uses" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="528" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="485" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="774" visibility="public" xmi.id="775" parent="450" />
   <UML:Generalization child="713" visibility="public" xmi.id="779" parent="774" />
   <UML:Association visibility="public" xmi.id="780" name="creates" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="726" name="server" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="713" name="service" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="783" name="starts" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="450" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="427" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="786" name="clones" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="427" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="450" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="793" name="creates, starts" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="713" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="465" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="796" name="clones" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="465" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="713" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="1377" visibility="public" xmi.id="1378" parent="18" />
   <UML:Generalization child="1545" visibility="public" xmi.id="1546" parent="1507" />
   <UML:Generalization child="1611" visibility="public" xmi.id="1612" parent="18" />
   <UML:Generalization child="1723" visibility="public" xmi.id="1750" parent="1507" />
   <UML:Generalization child="1751" visibility="public" xmi.id="1763" parent="1507" />
   <UML:Generalization child="1593" visibility="public" xmi.id="1803" parent="1507" />
   <UML:Association visibility="public" xmi.id="1873" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="1859" />
     <UML:AssociationEndRole visibility="protected" type="1859" name="instance" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association comment="A socket for receiving my configuration." visibility="public" xmi.id="1881" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="1859" />
     <UML:AssociationEndRole visibility="protected" type="274" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="1904" visibility="public" xmi.id="1936" parent="1924" />
   <UML:Generalization child="1924" visibility="public" xmi.id="1937" parent="18" />
   <UML:Association visibility="public" xmi.id="1942" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="1904" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="274" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1945" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="1859" name="starts" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="1904" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="1948" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="1859" name="creates" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="274" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="1987" visibility="public" xmi.id="1988" parent="1951" />
   <UML:Association visibility="public" xmi.id="2045" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="1924" name="creates" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="354" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="2048" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="1924" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="2028" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="2049" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="1859" name="accept" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="227" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="2183" visibility="public" xmi.id="2184" parent="1804" />
   <UML:Generalization child="1507" visibility="public" xmi.id="2257" parent="2183" />
   <UML:Generalization child="1778" visibility="public" xmi.id="2258" parent="2183" />
   <UML:Generalization child="2182" visibility="public" xmi.id="2259" parent="1507" />
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="1" documentation="" uniqueid="2270" />
  <diagrams>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="1" documentation="" type="402" showops="1" showpackage="1" name="XMLConfigRequest Classes" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="141" showattsigs="600" usesdiagramusefillcolour="0" x="557" linecolour="#ff0000" y="331" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="274" showoperations="0" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="167" showattsigs="600" usesdiagramusefillcolour="1" x="17" linecolour="none" y="29" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="255" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="354" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="148" showattsigs="600" usesdiagramusefillcolour="0" x="346" linecolour="#ff0000" y="267" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="34" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1904" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="203" showattsigs="600" usesdiagramusefillcolour="1" x="274" linecolour="none" y="83" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="85" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1924" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="100" showattsigs="600" usesdiagramusefillcolour="0" x="323" linecolour="#ff0000" y="6" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="18" showoperations="0" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="156" showattsigs="600" usesdiagramusefillcolour="1" x="576" linecolour="none" y="15" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="238" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1859" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="101" showattsigs="600" usesdiagramusefillcolour="0" x="705" linecolour="#ff0000" y="333" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="227" showoperations="0" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="212" showattsigs="600" usesdiagramusefillcolour="0" x="77" linecolour="#ff0000" y="343" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="2028" showoperations="0" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="2" widgetbid="1924" widgetaid="1904" xmi.id="1936" >
      <linepath>
       <startpoint startx="395" starty="267" />
       <endpoint endx="409" endy="168" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="18" widgetaid="1924" xmi.id="1937" >
      <linepath>
       <startpoint startx="375" starty="83" />
       <endpoint endx="373" endy="33" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="1859" widgetaid="1859" xmi.id="1873" >
      <linepath>
       <startpoint startx="732" starty="74" />
       <endpoint endx="732" endy="193" />
       <point x="800" y="86" />
       <point x="802" y="179" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="64" usesdiagramusefillcolour="1" x="734" linecolour="none" y="170" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="21" usefillcolor="1" pretext="#" isinstance="0" xmi.id="2260" text="instance" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="1904" widgetaid="1859" xmi.id="1945" >
      <linepath>
       <startpoint startx="576" starty="134" />
       <endpoint endx="444" endy="267" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="49" usesdiagramusefillcolour="1" x="525" linecolour="none" y="136" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="2261" text="starts" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="274" widgetaid="1859" xmi.id="1948" >
      <linepath>
       <startpoint startx="628" starty="253" />
       <endpoint endx="627" endy="331" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="59" usesdiagramusefillcolour="1" x="586" linecolour="none" y="264" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="2262" text="creates" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="354" widgetaid="1924" xmi.id="2045" >
      <linepath>
       <startpoint startx="274" starty="125" />
       <endpoint endx="184" endy="156" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="59" usesdiagramusefillcolour="1" x="219" linecolour="none" y="105" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="2263" text="creates" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="2028" widgetaid="1924" xmi.id="2048" >
      <linepath>
       <startpoint startx="341" starty="168" />
       <endpoint endx="183" endy="343" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="227" widgetaid="1859" xmi.id="2049" >
      <linepath>
       <startpoint startx="680" starty="253" />
       <endpoint endx="755" endy="333" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="55" usesdiagramusefillcolour="1" x="682" linecolour="none" y="255" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="2264" text="accept" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="483" documentation="" type="403" showops="1" showpackage="1" name="requestXMLConfig" localid="29990" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="0" width="62" usesdiagramusefillcolour="0" x="224" linecolour="#ff0000" y="129" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="485" decon="1" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="116" usesdiagramusefillcolour="1" x="367" linecolour="none" y="156" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="354" decon="0" localid="29995" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="140" usesdiagramusefillcolour="1" x="0" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="528" decon="0" localid="29994" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="0" width="163" usesdiagramusefillcolour="0" x="120" linecolour="#ff0000" y="75" instancename="xmlSocket" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="274" decon="0" localid="29993" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="0" width="190" usesdiagramusefillcolour="0" x="445" linecolour="#ff0000" y="291" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="504" decon="1" localid="29992" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="87" usesdiagramusefillcolour="1" x="351" linecolour="none" y="642" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="618" decon="0" localid="29991" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <floatingtext usesdiagramfillcolour="1" width="127" usesdiagramusefillcolour="1" x="337" linecolour="none" y="378" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="929" text="repeat every 1/2 sec" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="134" usesdiagramusefillcolour="1" x="415" linecolour="none" y="588" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="931" decon="0" localid="29990" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <floatingtext usesdiagramfillcolour="1" width="132" usesdiagramusefillcolour="1" x="54" linecolour="none" y="437" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1001" text="DSMServer connects" font="Sans,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="178" usesdiagramusefillcolour="1" x="255" linecolour="none" y="183" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29995" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="2.1" widgetaid="29997" textid="574" isinstance="0" xmi.id="575" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="57" usesdiagramusefillcolour="1" x="291" linecolour="none" y="162" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="574" text="2.1: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="183" usesdiagramusefillcolour="1" x="71" linecolour="none" y="250" operation="start() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="3" widgetaid="29994" textid="576" isinstance="0" xmi.id="577" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="93" usesdiagramusefillcolour="1" x="95" linecolour="none" y="229" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="576" text="3: start() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="293" usesdiagramusefillcolour="1" x="255" linecolour="none" y="318" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29992" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="5.1" widgetaid="29997" textid="581" isinstance="0" xmi.id="582" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="57" usesdiagramusefillcolour="1" x="303" linecolour="none" y="297" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="581" text="5.1: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="178" usesdiagramusefillcolour="1" x="255" linecolour="none" y="372" operation="send()" linewidth="none" usesdiagramlinewidth="1" widgetbid="29995" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="5.2" widgetaid="29997" textid="587" isinstance="0" xmi.id="588" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="70" usesdiagramusefillcolour="1" x="307" linecolour="none" y="351" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="587" text="5.2: send()" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="139" usesdiagramusefillcolour="1" x="70" linecolour="none" y="286" operation="accept() : Socket" linewidth="none" usesdiagramlinewidth="1" widgetbid="29993" usesdiagramlinecolour="1" fillcolour="none" height="184" usefillcolor="1" seqnum="4" widgetaid="29994" textid="589" isinstance="0" xmi.id="590" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="123" usesdiagramusefillcolour="1" x="75" linecolour="none" y="265" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="589" text="4: accept() : Socket" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="183" usesdiagramusefillcolour="1" x="71" linecolour="none" y="502" operation="cancel() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="6" widgetaid="29994" textid="596" isinstance="0" xmi.id="597" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="105" usesdiagramusefillcolour="1" x="76" linecolour="none" y="481" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="596" text="6: cancel() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="193" usesdiagramusefillcolour="1" x="70" linecolour="none" y="544" operation="join() : int" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="7" widgetaid="29994" textid="598" isinstance="0" xmi.id="599" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="77" usesdiagramusefillcolour="1" x="75" linecolour="none" y="523" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="598" text="7: join() : int" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="332" usesdiagramusefillcolour="1" x="70" linecolour="none" y="709" operation="parse() : xercesc::DOMDocument*" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="10" widgetaid="29994" textid="660" isinstance="0" xmi.id="661" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="230" usesdiagramusefillcolour="1" x="75" linecolour="none" y="688" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="660" text="10: parse() : xercesc::DOMDocument*" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="253" linecolour="none" y="283" operation="run() : int" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="287" usefillcolor="1" seqnum="5" widgetaid="29997" textid="923" isinstance="0" xmi.id="924" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="75" usesdiagramusefillcolour="1" x="258" linecolour="none" y="262" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="923" text="5: run() : int" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="410" usesdiagramusefillcolour="1" x="71" linecolour="none" y="616" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29990" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="8" widgetaid="29994" textid="939" isinstance="0" xmi.id="940" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="46" usesdiagramusefillcolour="1" x="76" linecolour="none" y="595" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="939" text="8: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="322" usesdiagramusefillcolour="1" x="71" linecolour="none" y="669" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="9" widgetaid="29994" textid="980" isinstance="0" xmi.id="981" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="46" usesdiagramusefillcolour="1" x="76" linecolour="none" y="648" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="980" text="9: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="129" usesdiagramusefillcolour="1" x="71" linecolour="none" y="820" operation="close() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29993" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="12" widgetaid="29994" textid="982" isinstance="0" xmi.id="983" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="105" usesdiagramusefillcolour="1" x="76" linecolour="none" y="799" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="982" text="12: close() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="129" usesdiagramusefillcolour="1" x="71" linecolour="none" y="107" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29993" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="1" widgetaid="29994" textid="984" isinstance="0" xmi.id="985" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="46" usesdiagramusefillcolour="1" x="76" linecolour="none" y="86" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="984" text="1: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="193" usesdiagramusefillcolour="1" x="70" linecolour="none" y="156" operation="ConfigRequestor()" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="73" usefillcolor="1" seqnum="2" widgetaid="29994" textid="986" isinstance="0" xmi.id="987" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="127" usesdiagramusefillcolour="1" x="75" linecolour="none" y="135" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="986" text="2: ConfigRequestor()" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="410" usesdiagramusefillcolour="1" x="71" linecolour="none" y="769" operation="delete" linewidth="none" usesdiagramlinewidth="1" widgetbid="29990" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="11" widgetaid="29994" textid="1005" isinstance="0" xmi.id="1006" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="65" usesdiagramusefillcolour="1" x="76" linecolour="none" y="748" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1005" text="11: delete" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="712" documentation="" type="402" showops="1" showpackage="1" name="XMLConfigService" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="155" showattsigs="600" usesdiagramusefillcolour="1" x="37" linecolour="none" y="101" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="357" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="726" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="154" showattsigs="600" usesdiagramusefillcolour="1" x="611" linecolour="none" y="14" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="187" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="427" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="191" showattsigs="600" usesdiagramusefillcolour="1" x="267" linecolour="none" y="26" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="153" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="450" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="119" showattsigs="600" usesdiagramusefillcolour="1" x="299" linecolour="none" y="281" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="51" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="774" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="182" showattsigs="600" usesdiagramusefillcolour="1" x="235" linecolour="none" y="494" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="153" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="713" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="190" showattsigs="600" usesdiagramusefillcolour="1" x="598" linecolour="none" y="285" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="85" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="465" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="450" widgetaid="774" xmi.id="775" >
      <linepath>
       <startpoint startx="358" starty="281" />
       <endpoint endx="362" endy="179" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="774" widgetaid="713" xmi.id="779" >
      <linepath>
       <startpoint startx="356" starty="494" />
       <endpoint endx="358" endy="332" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="713" widgetaid="726" xmi.id="780" >
      <linepath>
       <startpoint startx="192" starty="279" />
       <endpoint endx="295" endy="494" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="51" usesdiagramusefillcolour="1" x="243" linecolour="none" y="386" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2265" text="creates" font="Sans,10,-1,5,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="52" usesdiagramusefillcolour="1" x="194" linecolour="none" y="281" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="2266" text="server" font="Sans,10,-1,5,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="58" usesdiagramusefillcolour="1" x="235" linecolour="none" y="471" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="21" usefillcolor="1" pretext="+" isinstance="0" xmi.id="2267" text="service" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="427" widgetaid="465" xmi.id="466" >
      <linepath>
       <startpoint startx="693" starty="285" />
       <endpoint endx="688" endy="201" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="3" indexb="1" widgetbid="465" widgetaid="713" xmi.id="793" >
      <linepath>
       <startpoint startx="417" starty="545" />
       <endpoint endx="661" endy="370" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="92" usesdiagramusefillcolour="1" x="459" linecolour="none" y="431" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2268" text="creates, starts" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="713" widgetaid="465" xmi.id="796" >
      <linepath>
       <startpoint startx="724" starty="370" />
       <endpoint endx="417" endy="596" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="46" usesdiagramusefillcolour="1" x="565" linecolour="none" y="483" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2269" text="clones" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="799" documentation="" type="403" showops="1" showpackage="1" name="XMLConfigService" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="800" documentation="" type="403" showops="1" showpackage="1" name="XMLConfigServiceSequence" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="873" snapy="10" showatts="0" xmi.id="801" documentation="" type="403" showops="1" showpackage="1" name="XMLConfigServiceSeq" localid="29991" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="1134" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="89" usesdiagramusefillcolour="1" x="18" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="726" decon="0" localid="29999" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="148" usesdiagramusefillcolour="1" x="305" linecolour="none" y="102" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="465" decon="0" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="116" usesdiagramusefillcolour="1" x="465" linecolour="none" y="210" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="354" decon="0" localid="29996" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="130" usesdiagramusefillcolour="1" x="18" linecolour="none" y="615" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="713" decon="0" localid="29991" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="60" linecolour="none" y="101" operation="startServices() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="323" usefillcolor="1" seqnum="0" widgetaid="29999" textid="802" isinstance="0" xmi.id="803" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="144" usesdiagramusefillcolour="1" x="65" linecolour="none" y="80" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="802" text="0: startServices() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="377" linecolour="none" y="292" operation="run() : int" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="798" usefillcolor="1" seqnum="" widgetaid="29997" textid="810" isinstance="0" xmi.id="811" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="68" usesdiagramusefillcolour="1" x="382" linecolour="none" y="271" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="810" text=": run() : int" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="152" usesdiagramusefillcolour="1" x="379" linecolour="none" y="320" operation="MulticastSocket()" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="" widgetaid="29997" textid="812" isinstance="0" xmi.id="813" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="118" usesdiagramusefillcolour="1" x="399" linecolour="none" y="299" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="812" text=": MulticastSocket()" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="152" usesdiagramusefillcolour="1" x="379" linecolour="none" y="475" operation="receive() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="" widgetaid="29997" textid="814" isinstance="0" xmi.id="815" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="102" usesdiagramusefillcolour="1" x="402" linecolour="none" y="454" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="814" text=": receive() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="294" usesdiagramusefillcolour="1" x="84" linecolour="none" y="858" operation="start() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29997" textid="887" isinstance="0" xmi.id="888" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="86" usesdiagramusefillcolour="1" x="89" linecolour="none" y="837" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="887" text=": start() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="889" documentation="" type="403" showops="1" showpackage="1" name="Thread" localid="29998" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="0" width="62" usesdiagramusefillcolour="0" x="219" linecolour="#ff0000" y="75" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="18" decon="1" localid="29999" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="0" width="127" usesdiagramusefillcolour="0" x="78" linecolour="#ff0000" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="27" usefillcolor="1" isinstance="0" xmi.id="890" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="303" linecolour="none" y="24" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="80" usefillcolor="1" isinstance="0" xmi.id="1241" text="Sequence diagram of a Thread" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="84" usesdiagramusefillcolour="1" x="328" linecolour="none" y="288" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="149" usefillcolor="1" isinstance="0" xmi.id="1242" text="Run() method executes in a separate processor thread" font="Sans,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="117" usesdiagramusefillcolour="1" x="141" linecolour="none" y="112" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="23" usefillcolor="1" seqnum="1" widgetaid="29998" textid="891" isinstance="0" xmi.id="892" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="46" usesdiagramusefillcolour="1" x="147" linecolour="none" y="91" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="891" text="1: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="107" usesdiagramusefillcolour="1" x="142" linecolour="none" y="166" operation="start() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="2" widgetaid="29998" textid="893" isinstance="0" xmi.id="894" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="93" usesdiagramusefillcolour="1" x="148" linecolour="none" y="145" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="893" text="2: start() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="248" linecolour="none" y="204" operation="run() : int" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="276" usefillcolor="1" seqnum="2.1" widgetaid="29999" textid="895" isinstance="0" xmi.id="896" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="86" usesdiagramusefillcolour="1" x="253" linecolour="none" y="183" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="895" text="2.1: run() : int" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="107" usesdiagramusefillcolour="1" x="142" linecolour="none" y="387" operation="interrupt() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="3" widgetaid="29998" textid="897" isinstance="0" xmi.id="898" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="114" usesdiagramusefillcolour="1" x="147" linecolour="none" y="366" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="897" text="3: interrupt() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="107" usesdiagramusefillcolour="1" x="142" linecolour="none" y="424" operation="cancel() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="3.1" widgetaid="29998" textid="899" isinstance="0" xmi.id="900" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="116" usesdiagramusefillcolour="1" x="147" linecolour="none" y="403" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="899" text="3.1: cancel() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="117" usesdiagramusefillcolour="1" x="141" linecolour="none" y="458" operation="join() : int" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="4" widgetaid="29998" textid="901" isinstance="0" xmi.id="902" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="77" usesdiagramusefillcolour="1" x="146" linecolour="none" y="437" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="901" text="4: join() : int" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="107" usesdiagramusefillcolour="1" x="142" linecolour="none" y="524" operation="delete" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="5" widgetaid="29998" textid="904" isinstance="0" xmi.id="905" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="58" usesdiagramusefillcolour="1" x="147" linecolour="none" y="503" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="904" text="5: delete" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="1151" documentation="" type="403" showops="1" showpackage="1" name="MulticastRequest" localid="29987" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="211" linecolour="none" y="75" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="274" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="63" usesdiagramusefillcolour="1" x="9" linecolour="none" y="291" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="227" decon="0" localid="29994" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <floatingtext usesdiagramfillcolour="1" width="140" usesdiagramusefillcolour="1" x="532" linecolour="none" y="339" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1205" text="send every 1/2 second" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="104" usesdiagramusefillcolour="1" x="611" linecolour="none" y="17" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="126" usefillcolor="1" isinstance="0" xmi.id="1233" text="Sequence diagram of a generic multicast service request." font="Sans,10,-1,5,50,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="107" usesdiagramusefillcolour="1" x="156" linecolour="none" y="541" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="62" usefillcolor="1" isinstance="0" xmi.id="1238" text="Interaction with remote service" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="143" usesdiagramusefillcolour="1" x="380" linecolour="none" y="15" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="76" usefillcolor="1" isinstance="0" xmi.id="1245" text="Mcast address: 239.0.0.10
Mcast port: 50000" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="91" usesdiagramusefillcolour="1" x="93" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1859" decon="0" localid="29992" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="161" usesdiagramusefillcolour="1" x="392" linecolour="none" y="102" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1924" decon="0" localid="29991" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="116" usesdiagramusefillcolour="1" x="571" linecolour="none" y="156" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="354" decon="0" localid="29990" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="170" usesdiagramusefillcolour="1" x="657" linecolour="none" y="210" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="2028" decon="0" localid="29989" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="103" usesdiagramusefillcolour="1" x="330" linecolour="none" y="345" instancename="remote" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="227" decon="0" localid="29987" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="348" usesdiagramusefillcolour="1" x="381" linecolour="none" y="555" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="60" usefillcolor="1" isinstance="0" xmi.id="2094" text="Advantages: no fixed IP addresses or port numbers
Firewall issues: no fixed port numbers" font="Sans,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="332" usesdiagramusefillcolour="1" x="139" linecolour="none" y="158" operation="new{portnum}" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="2" widgetaid="29992" textid="2052" isinstance="0" xmi.id="2053" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="160" linecolour="none" y="137" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2052" text="2: new{portnum}" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="121" usesdiagramusefillcolour="1" x="139" linecolour="none" y="123" operation="new, any port" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="1" widgetaid="29992" textid="2054" isinstance="0" xmi.id="2055" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="145" linecolour="none" y="102" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2054" text="1: new, any port" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="332" usesdiagramusefillcolour="1" x="139" linecolour="none" y="200" operation="start() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="3.0" widgetaid="29992" textid="2058" isinstance="0" xmi.id="2059" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="104" usesdiagramusefillcolour="1" x="154" linecolour="none" y="179" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2058" text="3.0: start() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="470" linecolour="none" y="242" operation="run() : int" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="258" usefillcolor="1" seqnum="5.0" widgetaid="29991" textid="2060" isinstance="0" xmi.id="2061" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="86" usesdiagramusefillcolour="1" x="475" linecolour="none" y="221" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2060" text="5.0: run() : int" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="155" usesdiagramusefillcolour="1" x="473" linecolour="none" y="192" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29990" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="2.1" widgetaid="29991" textid="2062" isinstance="0" xmi.id="2063" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="57" usesdiagramusefillcolour="1" x="495" linecolour="none" y="171" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2062" text="2.1: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="268" usesdiagramusefillcolour="1" x="473" linecolour="none" y="268" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29989" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="5.1" widgetaid="29991" textid="2075" isinstance="0" xmi.id="2076" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="57" usesdiagramusefillcolour="1" x="495" linecolour="none" y="247" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2075" text="5.1: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="155" usesdiagramusefillcolour="1" x="473" linecolour="none" y="326" operation="send() : size_t" linewidth="none" usesdiagramlinewidth="1" widgetbid="29990" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="5.*" widgetaid="29991" textid="2077" isinstance="0" xmi.id="2078" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="495" linecolour="none" y="305" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2077" text="5.*: send() : size_t" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="131" usesdiagramusefillcolour="1" x="138" linecolour="none" y="251" operation="accept() : Socket" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="189" usefillcolor="1" seqnum="4.0" widgetaid="29992" textid="2079" isinstance="0" xmi.id="2080" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="134" usesdiagramusefillcolour="1" x="143" linecolour="none" y="230" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2079" text="4.0: accept() : Socket" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="219" usesdiagramusefillcolour="1" x="41" linecolour="none" y="424" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="6.1" widgetaid="29998" textid="2081" isinstance="0" xmi.id="2082" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="57" usesdiagramusefillcolour="1" x="46" linecolour="none" y="403" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2081" text="6.1: new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="106" usesdiagramusefillcolour="1" x="32" linecolour="none" y="558" operation="send() : size_t" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="9.*" widgetaid="29992" textid="2083" isinstance="0" xmi.id="2084" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="37" linecolour="none" y="537" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2083" text="9.*: send() : size_t" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="106" usesdiagramusefillcolour="1" x="32" linecolour="none" y="624" operation="recv() : size_t" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="9.*" widgetaid="29992" textid="2085" isinstance="0" xmi.id="2086" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="112" usesdiagramusefillcolour="1" x="37" linecolour="none" y="603" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2085" text="9.*: recv() : size_t" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="121" usesdiagramusefillcolour="1" x="139" linecolour="none" y="511" operation="close() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="8" widgetaid="29992" textid="2087" isinstance="0" xmi.id="2088" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="98" usesdiagramusefillcolour="1" x="144" linecolour="none" y="490" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2087" text="8: close() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="118" usesdiagramusefillcolour="1" x="262" linecolour="none" y="393" operation="connect" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="6" widgetaid="29987" textid="2090" isinstance="0" xmi.id="2091" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="69" usesdiagramusefillcolour="1" x="267" linecolour="none" y="372" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2090" text="6: connect" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="332" usesdiagramusefillcolour="1" x="139" linecolour="none" y="476" operation="cancel() : void" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="7" widgetaid="29992" textid="2108" isinstance="0" xmi.id="2109" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="105" usesdiagramusefillcolour="1" x="144" linecolour="none" y="455" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2108" text="7: cancel() : void" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="1246" documentation="" type="407" showops="1" showpackage="1" name="ADS3" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="1301" documentation="" type="403" showops="1" showpackage="1" name="Interrupt Driven Hardware Module" localid="29991" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="92" usesdiagramusefillcolour="1" x="13" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1303" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="69" usesdiagramusefillcolour="1" x="128" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1304" decon="0" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="80" usesdiagramusefillcolour="1" x="224" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1313" decon="0" localid="29996" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="120" usesdiagramusefillcolour="1" x="318" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1318" decon="0" localid="29995" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="85" usesdiagramusefillcolour="1" x="458" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1321" decon="0" localid="29994" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="90" usesdiagramusefillcolour="1" x="652" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1324" decon="0" localid="29993" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="86" usesdiagramusefillcolour="1" x="547" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1331" decon="0" localid="29992" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="80" usesdiagramusefillcolour="1" x="761" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1336" decon="0" localid="29991" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="354" usesdiagramusefillcolour="1" x="278" linecolour="none" y="451" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="85" usefillcolor="1" isinstance="0" xmi.id="1343" text="Sample:
1) 4-byte ulong: timetag, millisecs since 00:00 GMT
2) 4-byte ulong: length in bytes of data
3) chars: data" font="Sans,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="57" linecolour="none" y="98" operation="isr()" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="294" usefillcolor="1" seqnum="" widgetaid="29998" textid="1305" isinstance="0" xmi.id="1306" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="38" usesdiagramusefillcolour="1" x="62" linecolour="none" y="77" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1305" text=": isr()" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="60" linecolour="none" y="116" operation="inb" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1307" isinstance="0" xmi.id="1308" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="33" usesdiagramusefillcolour="1" x="94" linecolour="none" y="95" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1307" text=": inb" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="60" linecolour="none" y="212" operation="inb" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1311" isinstance="0" xmi.id="1312" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="33" usesdiagramusefillcolour="1" x="94" linecolour="none" y="191" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1311" text=": inb" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="203" usesdiagramusefillcolour="1" x="60" linecolour="none" y="175" operation="inb" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1314" isinstance="0" xmi.id="1315" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="33" usesdiagramusefillcolour="1" x="173" linecolour="none" y="154" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1314" text=": inb" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="203" usesdiagramusefillcolour="1" x="60" linecolour="none" y="247" operation="inb" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1316" isinstance="0" xmi.id="1317" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="33" usesdiagramusefillcolour="1" x="172" linecolour="none" y="226" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1316" text=": inb" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="317" usesdiagramusefillcolour="1" x="60" linecolour="none" y="146" operation="get" linewidth="none" usesdiagramlinewidth="1" widgetbid="29995" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1319" isinstance="0" xmi.id="1320" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="175" linecolour="none" y="125" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1319" text=": get" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="439" usesdiagramusefillcolour="1" x="60" linecolour="none" y="288" operation="push sample" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1322" isinstance="0" xmi.id="1323" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="90" usesdiagramusefillcolour="1" x="136" linecolour="none" y="267" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1322" text=": push sample" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="195" usesdiagramusefillcolour="1" x="501" linecolour="none" y="380" operation="pop sample" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29993" textid="1329" isinstance="0" xmi.id="1330" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="83" usesdiagramusefillcolour="1" x="506" linecolour="none" y="359" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1329" text=": pop sample" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="529" usesdiagramusefillcolour="1" x="60" linecolour="none" y="327" operation="post" linewidth="none" usesdiagramlinewidth="1" widgetbid="29992" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1332" isinstance="0" xmi.id="1333" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="41" usesdiagramusefillcolour="1" x="180" linecolour="none" y="306" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1332" text=": post" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="115" usesdiagramusefillcolour="1" x="582" linecolour="none" y="101" operation="wait" linewidth="none" usesdiagramlinewidth="1" widgetbid="29992" usesdiagramlinecolour="1" fillcolour="none" height="254" usefillcolor="1" seqnum="" widgetaid="29993" textid="1334" isinstance="0" xmi.id="1335" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="587" linecolour="none" y="80" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1334" text=": wait" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="102" usesdiagramusefillcolour="1" x="698" linecolour="none" y="406" operation="write sample" linewidth="none" usesdiagramlinewidth="1" widgetbid="29991" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29993" textid="1337" isinstance="0" xmi.id="1338" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="89" usesdiagramusefillcolour="1" x="703" linecolour="none" y="385" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1337" text=": write sample" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="57" linecolour="none" y="487" operation="isr" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="282" usefillcolor="1" seqnum="" widgetaid="29998" textid="1339" isinstance="0" xmi.id="1340" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="62" linecolour="none" y="466" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1339" text=": isr" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="60" linecolour="none" y="506" operation="inb" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1341" isinstance="0" xmi.id="1342" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="33" usesdiagramusefillcolour="1" x="76" linecolour="none" y="485" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1341" text=": inb" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="1344" documentation="" type="403" showops="1" showpackage="1" name="A2DModule" localid="29995" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="126" usesdiagramusefillcolour="1" x="60" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1345" decon="0" localid="29999" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="93" usesdiagramusefillcolour="1" x="295" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1346" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="106" usesdiagramusefillcolour="1" x="553" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1349" decon="0" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="120" usesdiagramusefillcolour="1" x="416" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1318" decon="0" localid="29996" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="80" usesdiagramusefillcolour="1" x="669" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1336" decon="0" localid="29995" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="354" usesdiagramusefillcolour="1" x="388" linecolour="none" y="365" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="85" usefillcolor="1" isinstance="0" xmi.id="1373" text="Sample:
1) 4-byte ulong: timetag, millisecs since 00:00 GMT
2) 4-byte ulong: length in bytes of data
3) signed shorts: data" font="Sans,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="226" usesdiagramusefillcolour="1" x="123" linecolour="none" y="129" operation="poll routine callback" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="161" usefillcolor="1" seqnum="" widgetaid="29999" textid="1347" isinstance="0" xmi.id="1348" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="131" usesdiagramusefillcolour="1" x="128" linecolour="none" y="108" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1347" text=": poll routine callback" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="273" usesdiagramusefillcolour="1" x="341" linecolour="none" y="194" operation="fetch data x800" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="" widgetaid="29998" textid="1350" isinstance="0" xmi.id="1351" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="106" usesdiagramusefillcolour="1" x="367" linecolour="none" y="173" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1350" text=": fetch data x800" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="133" usesdiagramusefillcolour="1" x="342" linecolour="none" y="147" operation="get" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1354" isinstance="0" xmi.id="1355" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="369" linecolour="none" y="126" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1354" text=": get" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="366" usesdiagramusefillcolour="1" x="342" linecolour="none" y="259" operation="write sample" linewidth="none" usesdiagramlinewidth="1" widgetbid="29995" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1369" isinstance="0" xmi.id="1370" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="89" usesdiagramusefillcolour="1" x="460" linecolour="none" y="238" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1369" text=": write sample" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="226" usesdiagramusefillcolour="1" x="123" linecolour="none" y="431" operation="poll routine callback" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="200" usefillcolor="1" seqnum="" widgetaid="29999" textid="1371" isinstance="0" xmi.id="1372" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="131" usesdiagramusefillcolour="1" x="160" linecolour="none" y="410" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1371" text=": poll routine callback" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="1374" documentation="" type="403" showops="1" showpackage="1" name="Sensor Select Loop" localid="29994" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="92" usesdiagramusefillcolour="1" x="32" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1303" decon="0" localid="29999" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="80" usesdiagramusefillcolour="1" x="133" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1336" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="94" usesdiagramusefillcolour="1" x="222" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1377" decon="0" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="125" usesdiagramusefillcolour="1" x="324" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1545" decon="0" localid="29996" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="101" usesdiagramusefillcolour="1" x="456" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1611" decon="0" localid="29994" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="93" usesdiagramusefillcolour="1" x="79" linecolour="none" y="127" operation="write" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="1375" isinstance="0" xmi.id="1376" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="43" usesdiagramusefillcolour="1" x="84" linecolour="none" y="106" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1375" text=": write" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="267" linecolour="none" y="104" operation="select" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="63" usefillcolor="1" seqnum="" widgetaid="29997" textid="1431" isinstance="0" xmi.id="1432" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="51" usesdiagramusefillcolour="1" x="272" linecolour="none" y="83" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1431" text=": select" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="94" usesdiagramusefillcolour="1" x="174" linecolour="none" y="154" operation="poll_wait" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29998" textid="1433" isinstance="0" xmi.id="1434" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="66" usesdiagramusefillcolour="1" x="179" linecolour="none" y="133" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1433" text=": poll_wait" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="125" usesdiagramusefillcolour="1" x="269" linecolour="none" y="193" operation="readSamples()" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="108" usefillcolor="1" seqnum="" widgetaid="29997" textid="1605" isinstance="0" xmi.id="1606" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="274" linecolour="none" y="172" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1605" text=": readSamples()" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="221" usesdiagramusefillcolour="1" x="165" linecolour="none" y="206" operation="read" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="" widgetaid="29996" textid="1609" isinstance="0" xmi.id="1610" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="41" usesdiagramusefillcolour="1" x="170" linecolour="none" y="185" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1609" text=": read" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="118" usesdiagramusefillcolour="1" x="387" linecolour="none" y="247" operation="receive() : bool" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29996" textid="1627" isinstance="0" xmi.id="1628" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="102" usesdiagramusefillcolour="1" x="392" linecolour="none" y="226" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1627" text=": receive() : bool" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="118" usesdiagramusefillcolour="1" x="387" linecolour="none" y="358" operation="" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29994" textid="1631" isinstance="0" xmi.id="1632" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="0" linecolour="none" y="0" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1631" text="" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="118" usesdiagramusefillcolour="1" x="387" linecolour="none" y="279" operation="receive() : bool" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29996" textid="1633" isinstance="0" xmi.id="1634" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="102" usesdiagramusefillcolour="1" x="393" linecolour="none" y="258" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="1633" text=": receive() : bool" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="877" snapy="10" showatts="0" xmi.id="1721" documentation="" type="402" showops="1" showpackage="1" name="SensorClasses" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="908" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="149" showattsigs="600" usesdiagramusefillcolour="0" x="470" linecolour="#ff0000" y="143" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="272" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1507" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="206" showattsigs="600" usesdiagramusefillcolour="1" x="315" linecolour="none" y="476" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="408" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1545" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="150" showattsigs="600" usesdiagramusefillcolour="1" x="159" linecolour="none" y="474" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="119" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1593" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="161" showattsigs="600" usesdiagramusefillcolour="1" x="528" linecolour="none" y="474" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="187" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1723" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="149" showattsigs="600" usesdiagramusefillcolour="1" x="700" linecolour="none" y="478" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="102" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1751" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="145" usesdiagramusefillcolour="1" x="600" linecolour="none" y="223" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="146" usefillcolor="1" isinstance="0" xmi.id="1777" text="RTL_DSMSensor provides proxy layer implementing read/write/ioctl to device over RTL FIFOs." font="Sans,10,-1,5,50,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="151" showattsigs="600" usesdiagramusefillcolour="0" x="6" linecolour="#ff0000" y="472" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="102" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1778" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="142" showattsigs="600" usesdiagramusefillcolour="1" x="29" linecolour="none" y="86" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="85" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="1804" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="154" usesdiagramusefillcolour="1" x="24" linecolour="none" y="183" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="165" usefillcolor="1" isinstance="0" xmi.id="1814" text="A DOMable object can be serialized from an XML DOMElement.
(Serializing to XML has not been implemented yet for any DOMable)." font="Sans,10,-1,5,50,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="123" showattsigs="600" usesdiagramusefillcolour="0" x="725" linecolour="#ff0000" y="409" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="25" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="2182" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="140" showattsigs="600" usesdiagramusefillcolour="0" x="217" linecolour="#ff0000" y="22" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="374" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="2183" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="6" indexb="1" widgetbid="1507" widgetaid="1545" xmi.id="1546" >
      <linepath>
       <startpoint startx="418" starty="476" />
       <endpoint endx="494" endy="415" />
       <point x="497" y="442" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="6" indexb="4" widgetbid="1507" widgetaid="1723" xmi.id="1750" >
      <linepath>
       <startpoint startx="608" starty="474" />
       <endpoint endx="569" endy="415" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="6" indexb="3" widgetbid="1507" widgetaid="1751" xmi.id="1763" >
      <linepath>
       <startpoint startx="774" starty="478" />
       <endpoint endx="544" endy="415" />
       <point x="774" y="452" />
       <point x="559" y="450" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="6" indexb="2" widgetbid="1507" widgetaid="1593" xmi.id="1803" >
      <linepath>
       <startpoint startx="234" starty="474" />
       <endpoint endx="519" endy="415" />
       <point x="233" y="450" />
       <point x="529" y="449" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2183" widgetaid="1507" xmi.id="2257" >
      <linepath>
       <startpoint startx="470" starty="279" />
       <endpoint endx="357" endy="209" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2183" widgetaid="1778" xmi.id="2258" >
      <linepath>
       <startpoint startx="81" starty="472" />
       <endpoint endx="287" endy="396" />
       <point x="76" y="427" />
       <point x="287" y="428" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="6" indexb="5" widgetbid="1507" widgetaid="2182" xmi.id="2259" >
      <linepath>
       <startpoint startx="725" starty="421" />
       <endpoint endx="594" endy="415" />
       <point x="608" y="423" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="1828" documentation="" type="401" showops="1" showpackage="1" name="DSMCollaboration" localid="29996" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="91" usesdiagramusefillcolour="1" x="143" linecolour="none" y="123" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1859" decon="0" localid="29999" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="88" usesdiagramusefillcolour="1" x="316" linecolour="none" y="217" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1786" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="130" usesdiagramusefillcolour="1" x="392" linecolour="none" y="398" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1894" decon="0" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
    </widgets>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="888" snapy="10" showatts="0" xmi.id="2123" documentation="" type="403" showops="1" showpackage="1" name="PC104SG-IRIG-B" localid="29994" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="898" >
    <widgets>
     <objectwidget usesdiagramfillcolour="1" width="124" usesdiagramusefillcolour="1" x="220" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="2124" decon="0" localid="29999" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="139" usesdiagramusefillcolour="1" x="660" linecolour="none" y="48" instancename="pc104sg" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1324" decon="0" localid="29998" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="135" usesdiagramusefillcolour="1" x="512" linecolour="none" y="48" instancename="pc104sg" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1331" decon="0" localid="29997" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="92" usesdiagramusefillcolour="1" x="112" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1303" decon="0" localid="29996" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="92" usesdiagramusefillcolour="1" x="8" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1303" decon="0" localid="29995" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="179" usesdiagramusefillcolour="1" x="490" linecolour="none" y="652" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="95" usefillcolor="1" isinstance="0" xmi.id="2163" text="ISR also works at 1KHz.
Stress tested on a Viper along with serial interrupts at 600/sec" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="173" usesdiagramusefillcolour="1" x="62" linecolour="none" y="553" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="79" usefillcolor="1" isinstance="0" xmi.id="2164" text="Typically these callback functions are used to poll a device." font="Sans,10,-1,5,50,0,0,0,0,0" />
     <objectwidget usesdiagramfillcolour="1" width="120" usesdiagramusefillcolour="1" x="373" linecolour="none" y="48" instancename="" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" isinstance="0" xmi.id="1318" decon="0" localid="29994" multipleinstance="0" drawasactor="0" font="Sans,10,-1,5,50,0,1,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="155" usesdiagramusefillcolour="1" x="282" linecolour="none" y="634" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="103" usefillcolor="1" isinstance="0" xmi.id="2169" text="Interrupts synchronized with PPS input or IRIG-B time-codes" font="Sans,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="280" linecolour="none" y="218" operation="100HzISR" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" seqnum="" widgetaid="29999" textid="2125" isinstance="0" xmi.id="2126" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="75" usesdiagramusefillcolour="1" x="285" linecolour="none" y="197" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2125" text=": 100HzISR" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="445" usesdiagramusefillcolour="1" x="283" linecolour="none" y="120" operation="start" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2127" isinstance="0" xmi.id="2128" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="42" usesdiagramusefillcolour="1" x="300" linecolour="none" y="99" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2127" text=": start" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="727" linecolour="none" y="158" operation="run" linewidth="none" usesdiagramlinewidth="1" widgetbid="29998" usesdiagramlinecolour="1" fillcolour="none" height="655" usefillcolor="1" seqnum="" widgetaid="29998" textid="2129" isinstance="0" xmi.id="2130" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="732" linecolour="none" y="137" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2129" text=": run" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="295" usesdiagramusefillcolour="1" x="283" linecolour="none" y="96" operation="new" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2131" isinstance="0" xmi.id="2132" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="300" linecolour="none" y="75" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2131" text=": new" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="158" usesdiagramusefillcolour="1" x="571" linecolour="none" y="332" operation="wait" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="92" usefillcolor="1" seqnum="" widgetaid="29998" textid="2133" isinstance="0" xmi.id="2134" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="576" linecolour="none" y="311" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2133" text=": wait" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="122" usesdiagramusefillcolour="1" x="159" linecolour="none" y="148" operation="" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="register_callback" widgetaid="29996" textid="2135" isinstance="0" xmi.id="2136" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="114" usesdiagramusefillcolour="1" x="164" linecolour="none" y="127" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2135" text="register_callback: " font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="295" usesdiagramusefillcolour="1" x="283" linecolour="none" y="257" operation="post" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2137" isinstance="0" xmi.id="2138" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="41" usesdiagramusefillcolour="1" x="359" linecolour="none" y="236" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2137" text=": post" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="579" usesdiagramusefillcolour="1" x="150" linecolour="none" y="277" operation="exec_callback" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="" widgetaid="29998" textid="2141" isinstance="0" xmi.id="2142" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="99" usesdiagramusefillcolour="1" x="155" linecolour="none" y="256" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2141" text=": exec_callback" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="226" usesdiagramusefillcolour="1" x="55" linecolour="none" y="176" operation="register_callback" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29995" textid="2143" isinstance="0" xmi.id="2144" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="114" usesdiagramusefillcolour="1" x="60" linecolour="none" y="155" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2143" text=": register_callback" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="280" linecolour="none" y="362" operation="100HzISR" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" seqnum="" widgetaid="29999" textid="2145" isinstance="0" xmi.id="2146" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="75" usesdiagramusefillcolour="1" x="285" linecolour="none" y="341" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2145" text=": 100HzISR" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="295" usesdiagramusefillcolour="1" x="283" linecolour="none" y="400" operation="post" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2147" isinstance="0" xmi.id="2148" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="41" usesdiagramusefillcolour="1" x="348" linecolour="none" y="379" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2147" text=": post" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="158" usesdiagramusefillcolour="1" x="571" linecolour="none" y="182" operation="wait" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="88" usefillcolor="1" seqnum="" widgetaid="29998" textid="2149" isinstance="0" xmi.id="2150" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="39" usesdiagramusefillcolour="1" x="576" linecolour="none" y="161" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2149" text=": wait" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="579" usesdiagramusefillcolour="1" x="150" linecolour="none" y="428" operation="exec_callback" linewidth="none" usesdiagramlinewidth="1" widgetbid="29996" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="" widgetaid="29998" textid="2151" isinstance="0" xmi.id="2152" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="99" usesdiagramusefillcolour="1" x="155" linecolour="none" y="407" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2151" text=": exec_callback" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="683" usesdiagramusefillcolour="1" x="46" linecolour="none" y="488" operation="exec_callback" linewidth="none" usesdiagramlinewidth="1" widgetbid="29995" usesdiagramlinecolour="1" fillcolour="none" height="32" usefillcolor="1" seqnum="" widgetaid="29998" textid="2153" isinstance="0" xmi.id="2154" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="99" usesdiagramusefillcolour="1" x="51" linecolour="none" y="467" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2153" text=": exec_callback" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="280" linecolour="none" y="566" operation="100HzISR" linewidth="none" usesdiagramlinewidth="1" widgetbid="29999" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" seqnum="" widgetaid="29999" textid="2155" isinstance="0" xmi.id="2156" sequencemessagetype="1000" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="75" usesdiagramusefillcolour="1" x="285" linecolour="none" y="545" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="705" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2155" text=": 100HzISR" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="295" usesdiagramusefillcolour="1" x="283" linecolour="none" y="96" operation="" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2159" isinstance="0" xmi.id="2160" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="13" linecolour="none" y="75" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2159" text="" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="295" usesdiagramusefillcolour="1" x="283" linecolour="none" y="603" operation="" linewidth="none" usesdiagramlinewidth="1" widgetbid="29997" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2161" isinstance="0" xmi.id="2162" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="0" linecolour="none" y="0" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2161" text="" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="149" usesdiagramusefillcolour="1" x="283" linecolour="none" y="226" operation="increment" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2165" isinstance="0" xmi.id="2166" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="73" usesdiagramusefillcolour="1" x="355" linecolour="none" y="205" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2165" text=": increment" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
     <messagewidget usesdiagramfillcolour="1" width="149" usesdiagramusefillcolour="1" x="283" linecolour="none" y="375" operation="increment" linewidth="none" usesdiagramlinewidth="1" widgetbid="29994" usesdiagramlinecolour="1" fillcolour="none" height="8" usefillcolor="1" seqnum="" widgetaid="29999" textid="2167" isinstance="0" xmi.id="2168" sequencemessagetype="1001" font="Sans,10,-1,5,50,0,0,0,0,0" >
      <floatingtext usesdiagramfillcolour="1" width="73" usesdiagramusefillcolour="1" x="355" linecolour="none" y="354" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="704" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2167" text=": increment" font="Sans,10,-1,5,50,0,0,0,0,0" />
     </messagewidget>
    </messages>
    <associations/>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="806" id="1828" label="DSMCollaboration" />
     <listitem open="0" type="807" id="1721" label="SensorClasses" />
     <listitem open="0" type="807" id="1" label="XMLConfigRequest Classes" />
     <listitem open="0" type="807" id="712" label="XMLConfigService" />
     <listitem open="0" type="810" id="1344" label="A2DModule" />
     <listitem open="0" type="810" id="1301" label="Interrupt Driven Hardware Module" />
     <listitem open="0" type="810" id="1151" label="MulticastRequest" />
     <listitem open="0" type="810" id="2123" label="PC104SG-IRIG-B" />
     <listitem open="0" type="810" id="1374" label="Sensor Select Loop" />
     <listitem open="0" type="810" id="889" label="Thread" />
     <listitem open="0" type="810" id="801" label="XMLConfigServiceSeq" />
     <listitem open="0" type="810" id="483" label="requestXMLConfig" />
     <listitem open="1" type="813" id="1349" />
     <listitem open="1" type="813" id="1346" />
     <listitem open="0" type="813" id="1778" >
      <listitem open="0" type="815" id="1783" />
      <listitem open="0" type="815" id="1782" />
      <listitem open="0" type="815" id="1779" />
      <listitem open="0" type="815" id="1780" />
      <listitem open="0" type="815" id="1781" />
     </listitem>
     <listitem open="1" type="813" id="1318" />
     <listitem open="1" type="813" id="1345" />
     <listitem open="1" type="813" id="2124" />
     <listitem open="1" type="813" id="1336" />
     <listitem open="1" type="813" id="1303" />
     <listitem open="1" type="813" id="1324" />
     <listitem open="1" type="813" id="2089" />
     <listitem open="1" type="813" id="1304" />
     <listitem open="1" type="813" id="2182" />
     <listitem open="1" type="813" id="1302" />
     <listitem open="1" type="813" id="1321" />
     <listitem open="1" type="813" id="1331" />
     <listitem open="0" type="813" id="890" />
     <listitem open="1" type="813" id="1313" />
     <listitem open="1" type="818" id="11" >
      <listitem open="0" type="813" id="2011" >
       <listitem open="0" type="815" id="2020" />
       <listitem open="0" type="815" id="2015" />
       <listitem open="0" type="815" id="2012" />
      </listitem>
      <listitem open="0" type="813" id="1951" >
       <listitem open="0" type="814" id="1986" />
       <listitem open="0" type="814" id="1985" />
       <listitem open="0" type="814" id="1984" />
       <listitem open="0" type="815" id="1958" />
       <listitem open="0" type="815" id="1952" />
       <listitem open="0" type="815" id="1961" />
       <listitem open="0" type="815" id="1954" />
       <listitem open="0" type="815" id="1970" />
       <listitem open="0" type="815" id="1977" />
       <listitem open="0" type="815" id="1969" />
       <listitem open="0" type="815" id="1976" />
       <listitem open="0" type="815" id="1980" />
       <listitem open="0" type="815" id="1983" />
       <listitem open="0" type="815" id="1973" />
       <listitem open="0" type="815" id="1968" />
       <listitem open="0" type="815" id="1965" />
       <listitem open="0" type="815" id="1963" />
       <listitem open="0" type="815" id="1971" />
       <listitem open="0" type="815" id="1978" />
       <listitem open="0" type="815" id="1981" />
       <listitem open="0" type="815" id="1974" />
       <listitem open="0" type="815" id="1966" />
      </listitem>
      <listitem open="0" type="813" id="1987" >
       <listitem open="0" type="814" id="2010" />
       <listitem open="0" type="815" id="2001" />
       <listitem open="0" type="815" id="1997" />
       <listitem open="0" type="815" id="1989" />
       <listitem open="0" type="815" id="1992" />
       <listitem open="0" type="815" id="2006" />
       <listitem open="0" type="815" id="2007" />
       <listitem open="0" type="815" id="2005" />
       <listitem open="0" type="815" id="2003" />
       <listitem open="0" type="815" id="2008" />
      </listitem>
      <listitem open="0" type="813" id="297" >
       <listitem open="0" type="815" id="303" />
       <listitem open="0" type="815" id="300" />
       <listitem open="0" type="815" id="298" />
       <listitem open="0" type="815" id="306" />
       <listitem open="0" type="815" id="309" />
       <listitem open="0" type="815" id="312" />
       <listitem open="0" type="815" id="315" />
       <listitem open="0" type="815" id="352" />
       <listitem open="0" type="815" id="317" />
       <listitem open="0" type="815" id="349" />
       <listitem open="0" type="815" id="340" />
       <listitem open="0" type="815" id="342" />
       <listitem open="0" type="815" id="341" />
       <listitem open="0" type="815" id="345" />
       <listitem open="0" type="815" id="348" />
       <listitem open="0" type="815" id="318" />
       <listitem open="0" type="815" id="322" />
       <listitem open="0" type="815" id="326" />
       <listitem open="0" type="815" id="320" />
       <listitem open="0" type="815" id="331" />
       <listitem open="0" type="815" id="335" />
       <listitem open="0" type="815" id="350" />
       <listitem open="0" type="815" id="343" />
       <listitem open="0" type="815" id="346" />
       <listitem open="0" type="815" id="307" />
       <listitem open="0" type="815" id="305" />
      </listitem>
      <listitem open="0" type="813" id="121" />
      <listitem open="0" type="813" id="109" >
       <listitem open="0" type="815" id="111" />
      </listitem>
      <listitem open="0" type="813" id="465" >
       <listitem open="0" type="815" id="502" />
       <listitem open="0" type="815" id="467" />
       <listitem open="0" type="815" id="470" />
       <listitem open="0" type="815" id="469" />
      </listitem>
      <listitem open="0" type="813" id="1924" >
       <listitem open="0" type="814" id="1934" />
       <listitem open="0" type="814" id="1933" />
       <listitem open="0" type="814" id="1932" />
       <listitem open="0" type="814" id="1935" />
       <listitem open="0" type="815" id="1925" />
       <listitem open="0" type="815" id="1931" />
       <listitem open="0" type="815" id="1929" />
       <listitem open="0" type="815" id="1928" />
      </listitem>
      <listitem open="0" type="813" id="354" >
       <listitem open="0" type="815" id="356" />
       <listitem open="0" type="815" id="380" />
       <listitem open="0" type="815" id="379" />
       <listitem open="0" type="815" id="384" />
       <listitem open="0" type="815" id="373" />
       <listitem open="0" type="815" id="363" />
       <listitem open="0" type="815" id="361" />
       <listitem open="0" type="815" id="368" />
       <listitem open="0" type="815" id="366" />
       <listitem open="0" type="815" id="662" />
       <listitem open="0" type="815" id="374" />
       <listitem open="0" type="815" id="377" />
       <listitem open="0" type="815" id="382" />
       <listitem open="0" type="815" id="371" />
      </listitem>
      <listitem open="0" type="813" id="12" >
       <listitem open="0" type="815" id="17" />
       <listitem open="0" type="815" id="14" />
       <listitem open="0" type="815" id="15" />
       <listitem open="0" type="815" id="13" />
       <listitem open="0" type="815" id="16" />
      </listitem>
      <listitem open="0" type="813" id="274" >
       <listitem open="0" type="815" id="280" />
       <listitem open="0" type="815" id="275" />
       <listitem open="0" type="815" id="277" />
       <listitem open="0" type="815" id="286" />
       <listitem open="0" type="815" id="285" />
       <listitem open="0" type="815" id="293" />
       <listitem open="0" type="815" id="295" />
       <listitem open="0" type="815" id="294" />
       <listitem open="0" type="815" id="289" />
       <listitem open="0" type="815" id="292" />
       <listitem open="0" type="815" id="287" />
       <listitem open="0" type="815" id="290" />
       <listitem open="0" type="815" id="284" />
      </listitem>
      <listitem open="0" type="813" id="427" >
       <listitem open="0" type="814" id="447" />
       <listitem open="0" type="814" id="448" />
       <listitem open="0" type="814" id="446" />
       <listitem open="0" type="814" id="449" />
       <listitem open="0" type="814" id="445" />
       <listitem open="0" type="814" id="444" />
       <listitem open="0" type="815" id="433" />
       <listitem open="0" type="815" id="442" />
       <listitem open="0" type="815" id="438" />
       <listitem open="0" type="815" id="436" />
       <listitem open="0" type="815" id="429" />
       <listitem open="0" type="815" id="439" />
       <listitem open="0" type="815" id="437" />
       <listitem open="0" type="815" id="440" />
       <listitem open="0" type="815" id="431" />
       <listitem open="0" type="815" id="435" />
      </listitem>
      <listitem open="0" type="813" id="450" >
       <listitem open="0" type="814" id="463" />
       <listitem open="0" type="815" id="454" />
       <listitem open="0" type="815" id="452" />
       <listitem open="0" type="815" id="458" />
       <listitem open="0" type="815" id="457" />
       <listitem open="0" type="815" id="462" />
       <listitem open="0" type="815" id="461" />
       <listitem open="0" type="815" id="455" />
       <listitem open="0" type="815" id="459" />
      </listitem>
      <listitem open="0" type="813" id="2024" >
       <listitem open="0" type="814" id="2026" />
       <listitem open="0" type="814" id="2027" />
       <listitem open="0" type="814" id="2025" />
      </listitem>
      <listitem open="0" type="813" id="2028" >
       <listitem open="0" type="814" id="2044" />
       <listitem open="0" type="815" id="2031" />
       <listitem open="0" type="815" id="2029" />
       <listitem open="0" type="815" id="2041" />
       <listitem open="0" type="815" id="2038" />
       <listitem open="0" type="815" id="2035" />
       <listitem open="0" type="815" id="2033" />
       <listitem open="0" type="815" id="2042" />
       <listitem open="0" type="815" id="2039" />
       <listitem open="0" type="815" id="2036" />
      </listitem>
      <listitem open="0" type="813" id="227" >
       <listitem open="0" type="815" id="237" />
       <listitem open="0" type="815" id="228" />
       <listitem open="0" type="815" id="232" />
       <listitem open="0" type="815" id="229" />
       <listitem open="0" type="815" id="234" />
       <listitem open="0" type="815" id="241" />
       <listitem open="0" type="815" id="247" />
       <listitem open="0" type="815" id="244" />
       <listitem open="0" type="815" id="250" />
       <listitem open="0" type="815" id="252" />
       <listitem open="0" type="815" id="267" />
       <listitem open="0" type="815" id="269" />
       <listitem open="0" type="815" id="270" />
       <listitem open="0" type="815" id="272" />
       <listitem open="0" type="815" id="271" />
       <listitem open="0" type="815" id="268" />
       <listitem open="0" type="815" id="263" />
       <listitem open="0" type="815" id="266" />
       <listitem open="0" type="815" id="253" />
       <listitem open="0" type="815" id="257" />
       <listitem open="0" type="815" id="261" />
       <listitem open="0" type="815" id="264" />
       <listitem open="0" type="815" id="242" />
       <listitem open="0" type="815" id="240" />
      </listitem>
      <listitem open="0" type="813" id="122" >
       <listitem open="0" type="814" id="220" />
       <listitem open="0" type="814" id="218" />
       <listitem open="0" type="814" id="224" />
       <listitem open="0" type="814" id="222" />
       <listitem open="0" type="814" id="216" />
       <listitem open="0" type="814" id="217" />
       <listitem open="0" type="814" id="221" />
       <listitem open="0" type="814" id="219" />
       <listitem open="0" type="814" id="223" />
       <listitem open="0" type="815" id="126" />
       <listitem open="0" type="815" id="123" />
       <listitem open="0" type="815" id="152" />
       <listitem open="0" type="815" id="149" />
       <listitem open="0" type="815" id="146" />
       <listitem open="0" type="815" id="144" />
       <listitem open="0" type="815" id="143" />
       <listitem open="0" type="815" id="159" />
       <listitem open="0" type="815" id="156" />
       <listitem open="0" type="815" id="153" />
       <listitem open="0" type="815" id="208" />
       <listitem open="0" type="815" id="215" />
       <listitem open="0" type="815" id="129" />
       <listitem open="0" type="815" id="135" />
       <listitem open="0" type="815" id="137" />
       <listitem open="0" type="815" id="207" />
       <listitem open="0" type="815" id="212" />
       <listitem open="0" type="815" id="225" />
       <listitem open="0" type="815" id="132" />
       <listitem open="0" type="815" id="134" />
       <listitem open="0" type="815" id="133" />
       <listitem open="0" type="815" id="136" />
       <listitem open="0" type="815" id="195" />
       <listitem open="0" type="815" id="226" />
       <listitem open="0" type="815" id="198" />
       <listitem open="0" type="815" id="201" />
       <listitem open="0" type="815" id="142" />
       <listitem open="0" type="815" id="183" />
       <listitem open="0" type="815" id="185" />
       <listitem open="0" type="815" id="188" />
       <listitem open="0" type="815" id="190" />
       <listitem open="0" type="815" id="151" />
       <listitem open="0" type="815" id="161" />
       <listitem open="0" type="815" id="165" />
       <listitem open="0" type="815" id="169" />
       <listitem open="0" type="815" id="174" />
       <listitem open="0" type="815" id="163" />
       <listitem open="0" type="815" id="178" />
       <listitem open="0" type="815" id="130" />
       <listitem open="0" type="815" id="213" />
       <listitem open="0" type="815" id="202" />
       <listitem open="0" type="815" id="205" />
       <listitem open="0" type="815" id="210" />
       <listitem open="0" type="815" id="193" />
       <listitem open="0" type="815" id="138" />
       <listitem open="0" type="815" id="196" />
       <listitem open="0" type="815" id="199" />
       <listitem open="0" type="815" id="140" />
      </listitem>
      <listitem open="0" type="813" id="18" >
       <listitem open="1" type="813" id="23" />
       <listitem open="0" type="814" id="97" />
       <listitem open="0" type="814" id="96" />
       <listitem open="0" type="814" id="102" />
       <listitem open="0" type="814" id="101" />
       <listitem open="0" type="814" id="93" />
       <listitem open="0" type="814" id="91" />
       <listitem open="0" type="814" id="27" />
       <listitem open="0" type="814" id="94" />
       <listitem open="0" type="814" id="95" />
       <listitem open="0" type="814" id="90" />
       <listitem open="0" type="814" id="92" />
       <listitem open="0" type="814" id="99" />
       <listitem open="0" type="814" id="98" />
       <listitem open="0" type="814" id="25" />
       <listitem open="0" type="814" id="103" />
       <listitem open="0" type="814" id="100" />
       <listitem open="0" type="814" id="104" />
       <listitem open="0" type="814" id="77" />
       <listitem open="0" type="815" id="34" />
       <listitem open="0" type="815" id="60" />
       <listitem open="0" type="815" id="42" />
       <listitem open="0" type="815" id="22" />
       <listitem open="0" type="815" id="20" />
       <listitem open="0" type="815" id="21" />
       <listitem open="0" type="815" id="906" />
       <listitem open="0" type="815" id="88" />
       <listitem open="0" type="815" id="54" />
       <listitem open="0" type="815" id="53" />
       <listitem open="0" type="815" id="43" />
       <listitem open="0" type="815" id="52" />
       <listitem open="0" type="815" id="51" />
       <listitem open="0" type="815" id="50" />
       <listitem open="0" type="815" id="47" />
       <listitem open="0" type="815" id="49" />
       <listitem open="0" type="815" id="48" />
       <listitem open="0" type="815" id="39" />
       <listitem open="0" type="815" id="40" />
       <listitem open="0" type="815" id="89" />
       <listitem open="0" type="815" id="903" />
       <listitem open="0" type="815" id="78" />
       <listitem open="0" type="815" id="83" />
       <listitem open="0" type="815" id="81" />
       <listitem open="0" type="815" id="79" />
       <listitem open="0" type="815" id="59" />
       <listitem open="0" type="815" id="57" />
       <listitem open="0" type="815" id="55" />
       <listitem open="0" type="815" id="85" />
       <listitem open="0" type="815" id="105" />
       <listitem open="0" type="815" id="44" />
       <listitem open="0" type="815" id="38" />
       <listitem open="0" type="815" id="64" />
       <listitem open="0" type="815" id="75" />
       <listitem open="0" type="815" id="73" />
       <listitem open="0" type="815" id="71" />
       <listitem open="0" type="815" id="67" />
       <listitem open="0" type="815" id="69" />
       <listitem open="0" type="815" id="62" />
       <listitem open="0" type="815" id="84" />
       <listitem open="0" type="815" id="37" />
       <listitem open="1" type="831" id="28" />
      </listitem>
      <listitem open="0" type="813" id="113" >
       <listitem open="0" type="815" id="115" />
       <listitem open="0" type="815" id="118" />
       <listitem open="0" type="815" id="119" />
      </listitem>
     </listitem>
     <listitem open="1" type="818" id="484" >
      <listitem open="0" type="813" id="1904" >
       <listitem open="0" type="815" id="1906" />
      </listitem>
      <listitem open="0" type="813" id="1804" >
       <listitem open="0" type="814" id="1812" />
       <listitem open="0" type="815" id="1805" />
       <listitem open="0" type="815" id="1811" />
       <listitem open="0" type="815" id="1809" />
       <listitem open="0" type="815" id="1807" />
      </listitem>
      <listitem open="0" type="813" id="1723" >
       <listitem open="1" type="813" id="1744" >
        <listitem open="0" type="814" id="1746" />
        <listitem open="0" type="814" id="1747" />
        <listitem open="0" type="814" id="1745" />
       </listitem>
       <listitem open="0" type="814" id="1749" />
       <listitem open="0" type="814" id="1748" />
       <listitem open="0" type="815" id="1724" />
       <listitem open="0" type="815" id="1727" />
       <listitem open="0" type="815" id="1741" />
       <listitem open="0" type="815" id="1732" />
       <listitem open="0" type="815" id="1735" />
       <listitem open="0" type="815" id="1737" />
       <listitem open="0" type="815" id="1733" />
       <listitem open="0" type="815" id="1739" />
       <listitem open="0" type="815" id="1742" />
       <listitem open="0" type="815" id="1726" />
      </listitem>
      <listitem open="0" type="813" id="1593" >
       <listitem open="0" type="814" id="1604" />
       <listitem open="0" type="815" id="1596" />
       <listitem open="0" type="815" id="1595" />
       <listitem open="0" type="815" id="1601" />
       <listitem open="0" type="815" id="1602" />
       <listitem open="0" type="815" id="1599" />
       <listitem open="0" type="815" id="1598" />
      </listitem>
      <listitem open="0" type="813" id="1786" >
       <listitem open="0" type="814" id="1801" />
       <listitem open="0" type="814" id="1802" />
       <listitem open="0" type="815" id="1787" />
       <listitem open="0" type="815" id="1792" />
       <listitem open="0" type="815" id="1795" />
       <listitem open="0" type="815" id="1789" />
       <listitem open="0" type="815" id="1794" />
       <listitem open="0" type="815" id="1790" />
       <listitem open="0" type="815" id="1799" />
       <listitem open="0" type="815" id="1797" />
       <listitem open="0" type="815" id="1788" />
      </listitem>
      <listitem open="0" type="813" id="1859" >
       <listitem open="0" type="814" id="1883" />
       <listitem open="0" type="814" id="1884" />
       <listitem open="0" type="814" id="1885" />
       <listitem open="0" type="814" id="1882" />
       <listitem open="0" type="815" id="1879" />
       <listitem open="0" type="815" id="1872" />
       <listitem open="0" type="815" id="1863" />
       <listitem open="0" type="815" id="1867" />
       <listitem open="0" type="815" id="1871" />
       <listitem open="0" type="815" id="1860" />
       <listitem open="0" type="815" id="1865" />
       <listitem open="0" type="815" id="1864" />
       <listitem open="0" type="815" id="1874" />
       <listitem open="0" type="815" id="1875" />
       <listitem open="0" type="815" id="1869" />
       <listitem open="0" type="815" id="1870" />
       <listitem open="0" type="815" id="1880" />
      </listitem>
      <listitem open="0" type="813" id="1851" >
       <listitem open="0" type="814" id="1858" />
       <listitem open="0" type="814" id="1857" />
       <listitem open="0" type="815" id="1852" />
       <listitem open="0" type="815" id="1855" />
      </listitem>
      <listitem open="0" type="813" id="1751" >
       <listitem open="0" type="814" id="1761" />
       <listitem open="0" type="814" id="1762" />
       <listitem open="0" type="814" id="1760" />
       <listitem open="0" type="814" id="1759" />
       <listitem open="0" type="815" id="1752" />
       <listitem open="0" type="815" id="1756" />
       <listitem open="0" type="815" id="1757" />
       <listitem open="0" type="815" id="1754" />
       <listitem open="0" type="815" id="1753" />
      </listitem>
      <listitem open="0" type="813" id="555" >
       <listitem open="0" type="814" id="562" />
       <listitem open="0" type="814" id="561" />
       <listitem open="0" type="815" id="556" />
       <listitem open="0" type="815" id="559" />
      </listitem>
      <listitem open="0" type="813" id="2183" >
       <listitem open="0" type="813" id="1437" >
        <listitem open="0" type="813" id="1648" >
         <listitem open="0" type="814" id="1705" />
         <listitem open="0" type="814" id="1706" />
         <listitem open="0" type="814" id="1707" />
         <listitem open="0" type="814" id="1708" />
         <listitem open="0" type="814" id="1717" />
         <listitem open="0" type="814" id="1703" />
         <listitem open="0" type="814" id="1704" />
         <listitem open="0" type="814" id="1712" />
         <listitem open="0" type="814" id="1714" />
         <listitem open="0" type="814" id="1713" />
         <listitem open="0" type="814" id="1719" />
         <listitem open="0" type="814" id="1715" />
         <listitem open="0" type="814" id="1718" />
         <listitem open="0" type="814" id="1709" />
         <listitem open="0" type="814" id="1711" />
         <listitem open="0" type="814" id="1710" />
         <listitem open="0" type="814" id="1720" />
         <listitem open="0" type="814" id="1716" />
         <listitem open="0" type="815" id="1649" />
         <listitem open="0" type="815" id="1650" />
         <listitem open="0" type="815" id="1677" />
         <listitem open="0" type="815" id="1695" />
         <listitem open="0" type="815" id="1662" />
         <listitem open="0" type="815" id="1655" />
         <listitem open="0" type="815" id="1657" />
         <listitem open="0" type="815" id="1656" />
         <listitem open="0" type="815" id="1669" />
         <listitem open="0" type="815" id="1673" />
         <listitem open="0" type="815" id="1660" />
         <listitem open="0" type="815" id="1681" />
         <listitem open="0" type="815" id="1663" />
         <listitem open="0" type="815" id="1678" />
         <listitem open="0" type="815" id="1679" />
         <listitem open="0" type="815" id="1653" />
         <listitem open="0" type="815" id="1658" />
         <listitem open="0" type="815" id="1699" />
         <listitem open="0" type="815" id="1697" />
         <listitem open="0" type="815" id="1666" />
         <listitem open="0" type="815" id="1652" />
        </listitem>
        <listitem open="0" type="814" id="1491" />
        <listitem open="0" type="814" id="1492" />
        <listitem open="0" type="814" id="1493" />
        <listitem open="0" type="814" id="1494" />
        <listitem open="0" type="814" id="1503" />
        <listitem open="0" type="814" id="1489" />
        <listitem open="0" type="814" id="1490" />
        <listitem open="0" type="814" id="1498" />
        <listitem open="0" type="814" id="1500" />
        <listitem open="0" type="814" id="1499" />
        <listitem open="0" type="814" id="1505" />
        <listitem open="0" type="814" id="1501" />
        <listitem open="0" type="814" id="1504" />
        <listitem open="0" type="814" id="1495" />
        <listitem open="0" type="814" id="1497" />
        <listitem open="0" type="814" id="1496" />
        <listitem open="0" type="814" id="1506" />
        <listitem open="0" type="814" id="1502" />
        <listitem open="0" type="815" id="1438" />
        <listitem open="0" type="815" id="1439" />
        <listitem open="0" type="815" id="1471" />
        <listitem open="0" type="815" id="1466" />
        <listitem open="0" type="815" id="1488" />
        <listitem open="0" type="815" id="1481" />
        <listitem open="0" type="815" id="1476" />
        <listitem open="0" type="815" id="1478" />
        <listitem open="0" type="815" id="1451" />
        <listitem open="0" type="815" id="1444" />
        <listitem open="0" type="815" id="1446" />
        <listitem open="0" type="815" id="1473" />
        <listitem open="0" type="815" id="1474" />
        <listitem open="0" type="815" id="1479" />
        <listitem open="0" type="815" id="1475" />
        <listitem open="0" type="815" id="1445" />
        <listitem open="0" type="815" id="1480" />
        <listitem open="0" type="815" id="1477" />
        <listitem open="0" type="815" id="1487" />
        <listitem open="0" type="815" id="1470" />
        <listitem open="0" type="815" id="1462" />
        <listitem open="0" type="815" id="1458" />
        <listitem open="0" type="815" id="1449" />
        <listitem open="0" type="815" id="1468" />
        <listitem open="0" type="815" id="1452" />
        <listitem open="0" type="815" id="1467" />
        <listitem open="0" type="815" id="1442" />
        <listitem open="0" type="815" id="1447" />
        <listitem open="0" type="815" id="1485" />
        <listitem open="0" type="815" id="1483" />
        <listitem open="0" type="815" id="1455" />
        <listitem open="0" type="815" id="1441" />
       </listitem>
       <listitem open="0" type="814" id="2241" />
       <listitem open="0" type="814" id="2242" />
       <listitem open="0" type="814" id="2243" />
       <listitem open="0" type="814" id="2244" />
       <listitem open="0" type="814" id="2253" />
       <listitem open="0" type="814" id="2239" />
       <listitem open="0" type="814" id="2240" />
       <listitem open="0" type="814" id="2248" />
       <listitem open="0" type="814" id="2250" />
       <listitem open="0" type="814" id="2249" />
       <listitem open="0" type="814" id="2255" />
       <listitem open="0" type="814" id="2251" />
       <listitem open="0" type="814" id="2254" />
       <listitem open="0" type="814" id="2245" />
       <listitem open="0" type="814" id="2247" />
       <listitem open="0" type="814" id="2246" />
       <listitem open="0" type="814" id="2256" />
       <listitem open="0" type="814" id="2252" />
       <listitem open="0" type="815" id="2185" />
       <listitem open="0" type="815" id="2186" />
       <listitem open="0" type="815" id="2213" />
       <listitem open="0" type="815" id="2231" />
       <listitem open="0" type="815" id="2198" />
       <listitem open="0" type="815" id="2191" />
       <listitem open="0" type="815" id="2193" />
       <listitem open="0" type="815" id="2192" />
       <listitem open="0" type="815" id="2209" />
       <listitem open="0" type="815" id="2205" />
       <listitem open="0" type="815" id="2196" />
       <listitem open="0" type="815" id="2217" />
       <listitem open="0" type="815" id="2199" />
       <listitem open="0" type="815" id="2214" />
       <listitem open="0" type="815" id="2215" />
       <listitem open="0" type="815" id="2189" />
       <listitem open="0" type="815" id="2194" />
       <listitem open="0" type="815" id="2235" />
       <listitem open="0" type="815" id="2233" />
       <listitem open="0" type="815" id="2202" />
       <listitem open="0" type="815" id="2188" />
      </listitem>
      <listitem open="0" type="813" id="1545" >
       <listitem open="0" type="814" id="1584" />
       <listitem open="0" type="814" id="1582" />
       <listitem open="0" type="814" id="1589" />
       <listitem open="0" type="814" id="1590" />
       <listitem open="0" type="814" id="1585" />
       <listitem open="0" type="814" id="1586" />
       <listitem open="0" type="814" id="1591" />
       <listitem open="0" type="814" id="1592" />
       <listitem open="0" type="814" id="1587" />
       <listitem open="0" type="814" id="1588" />
       <listitem open="0" type="814" id="1583" />
       <listitem open="0" type="815" id="1547" />
       <listitem open="0" type="815" id="1551" />
       <listitem open="0" type="815" id="1574" />
       <listitem open="0" type="815" id="1560" />
       <listitem open="0" type="815" id="1554" />
       <listitem open="0" type="815" id="1557" />
       <listitem open="0" type="815" id="1570" />
       <listitem open="0" type="815" id="1571" />
       <listitem open="0" type="815" id="1566" />
       <listitem open="0" type="815" id="1563" />
       <listitem open="0" type="815" id="1569" />
       <listitem open="0" type="815" id="1549" />
       <listitem open="0" type="815" id="1572" />
       <listitem open="0" type="815" id="1580" />
       <listitem open="0" type="815" id="1558" />
       <listitem open="0" type="815" id="1552" />
       <listitem open="0" type="815" id="1555" />
       <listitem open="0" type="815" id="1564" />
       <listitem open="0" type="815" id="1561" />
       <listitem open="0" type="815" id="1567" />
       <listitem open="0" type="815" id="1578" />
       <listitem open="0" type="815" id="1576" />
       <listitem open="0" type="815" id="1548" />
      </listitem>
      <listitem open="0" type="813" id="726" >
       <listitem open="0" type="814" id="763" />
       <listitem open="0" type="814" id="761" />
       <listitem open="0" type="814" id="762" />
       <listitem open="0" type="814" id="765" />
       <listitem open="0" type="814" id="764" />
       <listitem open="0" type="814" id="760" />
       <listitem open="0" type="815" id="747" />
       <listitem open="0" type="815" id="753" />
       <listitem open="0" type="815" id="754" />
       <listitem open="0" type="815" id="744" />
       <listitem open="0" type="815" id="749" />
       <listitem open="0" type="815" id="730" />
       <listitem open="0" type="815" id="752" />
       <listitem open="0" type="815" id="727" />
       <listitem open="0" type="815" id="742" />
       <listitem open="0" type="815" id="745" />
       <listitem open="0" type="815" id="733" />
       <listitem open="0" type="815" id="735" />
       <listitem open="0" type="815" id="731" />
       <listitem open="0" type="815" id="737" />
       <listitem open="0" type="815" id="738" />
       <listitem open="0" type="815" id="750" />
       <listitem open="0" type="815" id="758" />
       <listitem open="0" type="815" id="756" />
       <listitem open="0" type="815" id="751" />
       <listitem open="0" type="815" id="743" />
      </listitem>
      <listitem open="0" type="813" id="766" >
       <listitem open="0" type="814" id="773" />
       <listitem open="0" type="814" id="772" />
       <listitem open="0" type="815" id="767" />
       <listitem open="0" type="815" id="770" />
      </listitem>
      <listitem open="0" type="813" id="774" >
       <listitem open="0" type="815" id="776" />
       <listitem open="0" type="815" id="778" />
      </listitem>
      <listitem open="0" type="813" id="1377" >
       <listitem open="0" type="814" id="1416" />
       <listitem open="0" type="814" id="1411" />
       <listitem open="0" type="814" id="1412" />
       <listitem open="0" type="814" id="1415" />
       <listitem open="0" type="814" id="1414" />
       <listitem open="0" type="814" id="1410" />
       <listitem open="0" type="814" id="1408" />
       <listitem open="0" type="814" id="1409" />
       <listitem open="0" type="814" id="1417" />
       <listitem open="0" type="814" id="1407" />
       <listitem open="0" type="814" id="1420" />
       <listitem open="0" type="814" id="1422" />
       <listitem open="0" type="814" id="1418" />
       <listitem open="0" type="814" id="1413" />
       <listitem open="0" type="814" id="1424" />
       <listitem open="0" type="814" id="1423" />
       <listitem open="0" type="814" id="1421" />
       <listitem open="0" type="814" id="1430" />
       <listitem open="0" type="814" id="1429" />
       <listitem open="0" type="814" id="1425" />
       <listitem open="0" type="814" id="1426" />
       <listitem open="0" type="814" id="1427" />
       <listitem open="0" type="814" id="1428" />
       <listitem open="0" type="814" id="1419" />
       <listitem open="0" type="815" id="1379" />
       <listitem open="0" type="815" id="1385" />
       <listitem open="0" type="815" id="1381" />
       <listitem open="0" type="815" id="1395" />
       <listitem open="0" type="815" id="1383" />
       <listitem open="0" type="815" id="1401" />
       <listitem open="0" type="815" id="1400" />
       <listitem open="0" type="815" id="1399" />
       <listitem open="0" type="815" id="1391" />
       <listitem open="0" type="815" id="1394" />
       <listitem open="0" type="815" id="1406" />
       <listitem open="0" type="815" id="1402" />
       <listitem open="0" type="815" id="1387" />
       <listitem open="0" type="815" id="1405" />
       <listitem open="0" type="815" id="1397" />
       <listitem open="0" type="815" id="1389" />
       <listitem open="0" type="815" id="1392" />
       <listitem open="0" type="815" id="1380" />
      </listitem>
      <listitem open="0" type="813" id="1507" >
       <listitem open="0" type="814" id="1542" />
       <listitem open="0" type="814" id="1540" />
       <listitem open="0" type="814" id="1543" />
       <listitem open="0" type="814" id="1541" />
       <listitem open="0" type="814" id="1544" />
       <listitem open="0" type="814" id="1539" />
       <listitem open="0" type="814" id="1538" />
       <listitem open="0" type="815" id="1511" />
       <listitem open="0" type="815" id="1509" />
       <listitem open="0" type="815" id="1533" />
       <listitem open="0" type="815" id="1534" />
       <listitem open="0" type="815" id="1535" />
       <listitem open="0" type="815" id="1536" />
       <listitem open="0" type="815" id="1515" />
       <listitem open="0" type="815" id="1516" />
       <listitem open="0" type="815" id="1529" />
       <listitem open="0" type="815" id="1525" />
       <listitem open="0" type="815" id="1517" />
       <listitem open="0" type="815" id="1519" />
       <listitem open="0" type="815" id="1513" />
       <listitem open="0" type="815" id="1522" />
       <listitem open="0" type="815" id="1512" />
      </listitem>
      <listitem open="0" type="813" id="1894" >
       <listitem open="0" type="815" id="1895" />
       <listitem open="0" type="815" id="1897" />
       <listitem open="0" type="815" id="1898" />
       <listitem open="0" type="815" id="1902" />
       <listitem open="0" type="815" id="1900" />
       <listitem open="0" type="815" id="1896" />
      </listitem>
      <listitem open="0" type="813" id="506" >
       <listitem open="0" type="815" id="507" />
      </listitem>
      <listitem open="1" type="813" id="1908" >
       <listitem open="0" type="815" id="1910" />
      </listitem>
      <listitem open="0" type="813" id="1611" >
       <listitem open="0" type="814" id="1620" />
       <listitem open="0" type="814" id="1622" />
       <listitem open="0" type="814" id="1621" />
       <listitem open="0" type="814" id="1623" />
       <listitem open="0" type="814" id="1624" />
       <listitem open="0" type="815" id="1613" />
       <listitem open="0" type="815" id="1616" />
       <listitem open="0" type="815" id="1617" />
       <listitem open="0" type="815" id="1619" />
       <listitem open="0" type="815" id="1615" />
      </listitem>
      <listitem open="0" type="813" id="485" >
       <listitem open="0" type="814" id="492" />
       <listitem open="0" type="815" id="487" />
       <listitem open="0" type="815" id="663" />
       <listitem open="0" type="815" id="490" />
       <listitem open="0" type="815" id="489" />
      </listitem>
      <listitem open="0" type="813" id="642" >
       <listitem open="0" type="814" id="657" />
       <listitem open="0" type="814" id="655" />
       <listitem open="0" type="814" id="656" />
       <listitem open="0" type="815" id="652" />
       <listitem open="0" type="815" id="645" />
       <listitem open="0" type="815" id="650" />
       <listitem open="0" type="815" id="644" />
       <listitem open="0" type="815" id="648" />
       <listitem open="0" type="815" id="646" />
       <listitem open="0" type="815" id="653" />
      </listitem>
      <listitem open="0" type="813" id="504" >
       <listitem open="0" type="815" id="505" />
      </listitem>
      <listitem open="0" type="813" id="713" >
       <listitem open="0" type="815" id="714" />
       <listitem open="0" type="815" id="716" />
       <listitem open="0" type="815" id="718" />
       <listitem open="0" type="815" id="720" />
       <listitem open="0" type="815" id="717" />
       <listitem open="0" type="815" id="715" />
       <listitem open="0" type="815" id="724" />
       <listitem open="0" type="815" id="722" />
      </listitem>
      <listitem open="0" type="813" id="608" >
       <listitem open="0" type="815" id="614" />
       <listitem open="0" type="815" id="609" />
       <listitem open="0" type="815" id="611" />
       <listitem open="0" type="815" id="616" />
       <listitem open="0" type="815" id="613" />
       <listitem open="0" type="815" id="610" />
      </listitem>
      <listitem open="0" type="813" id="931" >
       <listitem open="0" type="814" id="938" />
       <listitem open="0" type="814" id="937" />
       <listitem open="0" type="815" id="932" />
       <listitem open="0" type="815" id="936" />
       <listitem open="0" type="815" id="935" />
      </listitem>
      <listitem open="0" type="813" id="603" >
       <listitem open="0" type="814" id="606" />
       <listitem open="0" type="814" id="607" />
       <listitem open="0" type="815" id="604" />
       <listitem open="0" type="815" id="605" />
      </listitem>
      <listitem open="0" type="813" id="618" >
       <listitem open="0" type="814" id="639" />
       <listitem open="0" type="814" id="640" />
       <listitem open="0" type="815" id="619" />
       <listitem open="0" type="815" id="635" />
       <listitem open="0" type="815" id="637" />
       <listitem open="0" type="815" id="631" />
       <listitem open="0" type="815" id="625" />
       <listitem open="0" type="815" id="623" />
       <listitem open="0" type="815" id="621" />
       <listitem open="0" type="815" id="627" />
       <listitem open="0" type="815" id="629" />
       <listitem open="0" type="815" id="633" />
       <listitem open="0" type="815" id="620" />
      </listitem>
      <listitem open="0" type="813" id="528" >
       <listitem open="0" type="814" id="552" />
       <listitem open="0" type="814" id="553" />
       <listitem open="0" type="814" id="554" />
       <listitem open="0" type="814" id="551" />
       <listitem open="0" type="815" id="548" />
       <listitem open="0" type="815" id="541" />
       <listitem open="0" type="815" id="532" />
       <listitem open="0" type="815" id="536" />
       <listitem open="0" type="815" id="540" />
       <listitem open="0" type="815" id="529" />
       <listitem open="0" type="815" id="534" />
       <listitem open="0" type="815" id="533" />
       <listitem open="0" type="815" id="543" />
       <listitem open="0" type="815" id="544" />
       <listitem open="0" type="815" id="538" />
       <listitem open="0" type="815" id="539" />
       <listitem open="0" type="815" id="549" />
      </listitem>
      <listitem open="0" type="813" id="503" />
     </listitem>
     <listitem open="0" type="830" id="-1" label="Datatypes" >
      <listitem open="0" type="810" id="799" label="XMLConfigService" />
      <listitem open="0" type="810" id="800" label="XMLConfigServiceSequence" />
      <listitem open="1" type="829" id="5" />
      <listitem open="1" type="829" id="4" />
      <listitem open="1" type="829" id="7" />
      <listitem open="1" type="829" id="6" />
      <listitem open="1" type="829" id="2" />
      <listitem open="1" type="829" id="8" />
      <listitem open="1" type="829" id="9" />
      <listitem open="1" type="829" id="10" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" >
     <listitem open="1" type="822" id="1270" />
     <listitem open="1" type="822" id="1268" />
     <listitem open="1" type="822" id="1267" />
     <listitem open="1" type="822" id="1272" />
     <listitem open="1" type="822" id="1269" />
     <listitem open="1" type="822" id="1271" />
     <listitem open="1" type="822" id="1266" />
    </listitem>
    <listitem open="1" type="827" id="-1" label="Deployment View" >
     <listitem open="0" type="825" id="1246" label="ADS3" />
    </listitem>
   </listitem>
  </listview>
  <codegeneration/>
 </XMI.extensions>
</XMI>
