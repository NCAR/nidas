#!/bin/sh

# postinst script for nidas-build
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure|triggered)
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

if [ "$1" = "configure" -o "$1" = "triggered" ]; then
    nidas_prefix=/opt/nidas

    cfile=/etc/default/nidas-build
    . $cfile

    echo "BUILD_USER=$BUILD_USER, BUILD_GROUP=$BUILD_GROUP read from $cfile"

    if [ "$BUILD_USER" != root -o "$BUILD_GROUP" != root ]; then

        n=$(find $nidas_prefix \( \! -user $BUILD_USER -o \! -group $BUILD_GROUP \) -execdir chown $BUILD_USER:$BUILD_GROUP {} + -print | wc -l)
        [ $n -gt 0 ] && echo "Ownership of files under $nidas_prefix set to $BUILD_USER.$BUILD_GROUP with group write permission"

        find $nidas_prefix \! -perm /g+w -execdir chmod g+w {} +

        # chown on a file removes any associated capabilities
        if which setcap > /dev/null; then
            echo "trigger, doing setcap on $nidas_prefix/bin/{dsm_server,dsm,nidas_udp_relay}"
            setcap cap_sys_nice,cap_net_admin+p $nidas_prefix/bin/dsm_server
            setcap cap_sys_nice,cap_net_admin+p $nidas_prefix/bin/dsm
            setcap cap_sys_nice,cap_net_admin+p $nidas_prefix/bin/nidas_udp_relay
        fi
    fi
fi

exit 0
